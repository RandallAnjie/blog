<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/6.1.1" created="2023-02-12 05:45" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>一个计科生の博客</title>
	<link>https://blog.zhuanjie.ltd</link>
	<description>一个简简单单的计科生博客</description>
	<pubDate>Sun, 12 Feb 2023 05:45:28 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://blog.zhuanjie.ltd</wp:base_site_url>
	<wp:base_blog_url>https://blog.zhuanjie.ltd</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[Randall]]></wp:author_login><wp:author_email><![CDATA[2227535604@qq.com]]></wp:author_email><wp:author_display_name><![CDATA[Randall]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

		<wp:category>
		<wp:term_id>2</wp:term_id>
		<wp:category_nicename><![CDATA[androidstudio]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[AndroidStudio]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[c]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[C]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>4</wp:term_id>
		<wp:category_nicename><![CDATA[c-3]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[C#]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>5</wp:term_id>
		<wp:category_nicename><![CDATA[c-2]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[C++]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[java]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[JAVA]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[linux]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Linux]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>8</wp:term_id>
		<wp:category_nicename><![CDATA[python]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Python]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>38</wp:term_id>
		<wp:category_nicename><![CDATA[shell]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[shell]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[%e4%ba%ba%e5%b7%a5%e6%99%ba%e8%83%bd]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[人工智能]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[%e5%85%b6%e4%bb%96]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[其他]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>11</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[操作系统]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>12</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%94%bf%e6%b2%bb]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[政治]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>13</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%95%99%e7%a8%8b]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[教程]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>14</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[数据结构]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[未分类]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>15</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[每日一题]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>16</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%a0%94]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[研]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>17</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%ae%97%e6%b3%95]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[算法]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>18</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%bc%96%e8%af%91%e5%8e%9f%e7%90%86]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[编译原理]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>19</wp:term_id>
		<wp:category_nicename><![CDATA[%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[计算机网络]]></wp:cat_name>
	</wp:category>
			<wp:tag>
		<wp:term_id>20</wp:term_id>
		<wp:tag_slug><![CDATA[20%e5%b0%8f%e5%ad%a6%e6%9c%9f]]></wp:tag_slug>
		<wp:tag_name><![CDATA[20小学期]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>21</wp:term_id>
		<wp:tag_slug><![CDATA[ba]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ba]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>22</wp:term_id>
		<wp:tag_slug><![CDATA[c]]></wp:tag_slug>
		<wp:tag_name><![CDATA[C]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>23</wp:term_id>
		<wp:tag_slug><![CDATA[could-not-find-com-android-tools-buildgradle4-1-2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Could not find com.android.tools.build:gradle:4.1.2.]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>24</wp:term_id>
		<wp:tag_slug><![CDATA[lanqiao]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lanqiao]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>25</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%85%a8%e7%82%b9%e5%af%b9%e6%9c%80%e7%9f%ad%e8%b7%af%e5%be%84]]></wp:tag_slug>
		<wp:tag_name><![CDATA[全点对最短路径]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>26</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%a4%a7%e4%bd%9c%e4%b8%9a]]></wp:tag_slug>
		<wp:tag_name><![CDATA[大作业]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>27</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%9c%80%e9%95%bf%e5%85%ac%e5%ad%97%e4%b8%b2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[最长公字串]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>36</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7]]></wp:tag_slug>
		<wp:tag_name><![CDATA[渐近记号]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>28</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%ae%97%e6%b3%95%e5%88%86%e6%9e%90]]></wp:tag_slug>
		<wp:tag_name><![CDATA[算法分析]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>37</wp:term_id>
		<wp:tag_slug><![CDATA[%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba]]></wp:tag_slug>
		<wp:tag_name><![CDATA[算法导论]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>29</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%93%9d%e6%a1%a5]]></wp:tag_slug>
		<wp:tag_name><![CDATA[蓝桥]]></wp:tag_name>
	</wp:tag>
			<wp:term>
		<wp:term_id>20</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[20%e5%b0%8f%e5%ad%a6%e6%9c%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[20小学期]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>2</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[androidstudio]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[AndroidStudio]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>21</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[ba]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ba]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>3</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[C]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>22</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[C]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>4</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[c-3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[C#]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>5</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[c-2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[C++]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>23</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[could-not-find-com-android-tools-buildgradle4-1-2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Could not find com.android.tools.build:gradle:4.1.2.]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>6</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[java]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[JAVA]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>24</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lanqiao]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[lanqiao]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>7</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[linux]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Linux]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>30</wp:term_id>
		<wp:term_taxonomy><![CDATA[wp_theme]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[nisarg]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[nisarg]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>8</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[python]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Python]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>31</wp:term_id>
		<wp:term_taxonomy><![CDATA[wp_theme]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[sakurairo-2-5-0-3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Sakurairo-2.5.0.3]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>32</wp:term_id>
		<wp:term_taxonomy><![CDATA[wp_theme]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[sakurairo-2-5-1-1]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Sakurairo-2.5.1.1]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>38</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[shell]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[shell]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>33</wp:term_id>
		<wp:term_taxonomy><![CDATA[wp_theme]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[twentyseventeen]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[twentyseventeen]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>34</wp:term_id>
		<wp:term_taxonomy><![CDATA[wp_theme]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[twentytwentytwo]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[twentytwentytwo]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>9</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e4%ba%ba%e5%b7%a5%e6%99%ba%e8%83%bd]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[人工智能]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>25</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%85%a8%e7%82%b9%e5%af%b9%e6%9c%80%e7%9f%ad%e8%b7%af%e5%be%84]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[全点对最短路径]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>10</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%85%b6%e4%bb%96]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[其他]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>26</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%a4%a7%e4%bd%9c%e4%b8%9a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[大作业]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>11</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[操作系统]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>12</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%94%bf%e6%b2%bb]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[政治]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>13</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%99%e7%a8%8b]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[教程]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>14</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[数据结构]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>35</wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%9b%b4%e5%a4%9a]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[更多]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>27</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%9c%80%e9%95%bf%e5%85%ac%e5%ad%97%e4%b8%b2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[最长公字串]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>1</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[uncategorized]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[未分类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>15</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[每日一题]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>36</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[渐近记号]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>16</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a0%94]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[研]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>17</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%ae%97%e6%b3%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[算法]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>28</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%ae%97%e6%b3%95%e5%88%86%e6%9e%90]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[算法分析]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>37</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[算法导论]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>18</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bc%96%e8%af%91%e5%8e%9f%e7%90%86]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[编译原理]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>29</wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%93%9d%e6%a1%a5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[蓝桥]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id>19</wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[计算机网络]]></wp:term_name>
	</wp:term>
			<wp:term><wp:term_id>35</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[%e6%9b%b4%e5%a4%9a]]></wp:term_slug><wp:term_name><![CDATA[更多]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=6.1.1</generator>

		<item>
		<title><![CDATA[blog_icon]]></title>
		<link>https://blog.zhuanjie.ltd/blog_icon/</link>
		<pubDate>Fri, 01 Apr 2022 08:20:15 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/04/blog_icon.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 16:20:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 08:20:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 16:20:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 08:20:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[blog_icon]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/04/blog_icon.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/04/blog_icon.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:591;s:6:"height";i:591;s:4:"file";s:21:"2022/04/blog_icon.png";s:8:"filesize";i:18140;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:21:"blog_icon-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:9395;}s:9:"thumbnail";a:5:{s:4:"file";s:21:"blog_icon-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:3890;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[cropped-blog_icon.png]]></title>
		<link>https://blog.zhuanjie.ltd/cropped-blog_icon-png/</link>
		<pubDate>Fri, 01 Apr 2022 08:20:20 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/04/cropped-blog_icon.png</guid>
		<description></description>
		<content:encoded><![CDATA[http://blog.zhuanjie.ltd/wp-content/uploads/2022/04/cropped-blog_icon.png]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>590</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 16:20:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 08:20:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 16:20:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 08:20:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-blog_icon-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/04/cropped-blog_icon.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/04/cropped-blog_icon.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:29:"2022/04/cropped-blog_icon.png";s:8:"filesize";i:21319;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:29:"cropped-blog_icon-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:11214;}s:9:"thumbnail";a:5:{s:4:"file";s:29:"cropped-blog_icon-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4076;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[88377350_p0]]></title>
		<link>https://blog.zhuanjie.ltd/88377350_p0/</link>
		<pubDate>Fri, 01 Apr 2022 08:21:16 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/04/88377350_p0-scaled-1-e1665537333980.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>591</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 16:21:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 08:21:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 16:21:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 08:21:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[88377350_p0]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/04/88377350_p0-scaled-1-e1665537333980.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/04/88377350_p0-scaled-1-e1665537333980.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1980;s:6:"height";i:1142;s:4:"file";s:47:"2022/04/88377350_p0-scaled-1-e1665537333980.jpg";s:8:"filesize";i:154392;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:47:"88377350_p0-scaled-1-e1665537333980-300x173.jpg";s:5:"width";i:300;s:6:"height";i:173;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:8637;}s:5:"large";a:5:{s:4:"file";s:48:"88377350_p0-scaled-1-e1665537333980-1024x591.jpg";s:5:"width";i:1024;s:6:"height";i:591;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:56464;}s:9:"thumbnail";a:5:{s:4:"file";s:47:"88377350_p0-scaled-1-e1665537333980-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4414;}s:12:"medium_large";a:5:{s:4:"file";s:47:"88377350_p0-scaled-1-e1665537333980-768x443.jpg";s:5:"width";i:768;s:6:"height";i:443;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:36495;}s:9:"1536x1536";a:5:{s:4:"file";s:48:"88377350_p0-scaled-1-e1665537333980-1536x886.jpg";s:5:"width";i:1536;s:6:"height";i:886;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:103582;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:8:{s:9:"full-orig";a:3:{s:5:"width";i:2560;s:6:"height";i:1476;s:4:"file";s:24:"88377350_p0-scaled-1.jpg";}s:14:"thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}s:11:"medium-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-300x173.jpg";s:5:"width";i:300;s:6:"height";i:173;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:8676;}s:17:"medium_large-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-768x443.jpg";s:5:"width";i:768;s:6:"height";i:443;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:36957;}s:10:"large-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1024x590.jpg";s:5:"width";i:1024;s:6:"height";i:590;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:57632;}s:14:"1536x1536-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1536x886.jpg";s:5:"width";i:1536;s:6:"height";i:886;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:105995;}s:14:"2048x2048-orig";a:5:{s:4:"file";s:34:"88377350_p0-scaled-1-2048x1181.jpg";s:5:"width";i:2048;s:6:"height";i:1181;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:161328;}s:19:"post-thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:8:{s:9:"full-orig";a:3:{s:5:"width";i:2560;s:6:"height";i:1476;s:4:"file";s:24:"88377350_p0-scaled-1.jpg";}s:14:"thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}s:11:"medium-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-300x173.jpg";s:5:"width";i:300;s:6:"height";i:173;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:8676;}s:17:"medium_large-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-768x443.jpg";s:5:"width";i:768;s:6:"height";i:443;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:36957;}s:10:"large-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1024x590.jpg";s:5:"width";i:1024;s:6:"height";i:590;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:57632;}s:14:"1536x1536-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1536x886.jpg";s:5:"width";i:1536;s:6:"height";i:886;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:105995;}s:14:"2048x2048-orig";a:5:{s:4:"file";s:34:"88377350_p0-scaled-1-2048x1181.jpg";s:5:"width";i:2048;s:6:"height";i:1181;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:161328;}s:19:"post-thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:8:{s:9:"full-orig";a:3:{s:5:"width";i:2560;s:6:"height";i:1476;s:4:"file";s:24:"88377350_p0-scaled-1.jpg";}s:14:"thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}s:11:"medium-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-300x173.jpg";s:5:"width";i:300;s:6:"height";i:173;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:8676;}s:17:"medium_large-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-768x443.jpg";s:5:"width";i:768;s:6:"height";i:443;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:36957;}s:10:"large-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1024x590.jpg";s:5:"width";i:1024;s:6:"height";i:590;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:57632;}s:14:"1536x1536-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1536x886.jpg";s:5:"width";i:1536;s:6:"height";i:886;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:105995;}s:14:"2048x2048-orig";a:5:{s:4:"file";s:34:"88377350_p0-scaled-1-2048x1181.jpg";s:5:"width";i:2048;s:6:"height";i:1181;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:161328;}s:19:"post-thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:8:{s:9:"full-orig";a:3:{s:5:"width";i:2560;s:6:"height";i:1476;s:4:"file";s:24:"88377350_p0-scaled-1.jpg";}s:14:"thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}s:11:"medium-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-300x173.jpg";s:5:"width";i:300;s:6:"height";i:173;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:8676;}s:17:"medium_large-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-768x443.jpg";s:5:"width";i:768;s:6:"height";i:443;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:36957;}s:10:"large-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1024x590.jpg";s:5:"width";i:1024;s:6:"height";i:590;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:57632;}s:14:"1536x1536-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1536x886.jpg";s:5:"width";i:1536;s:6:"height";i:886;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:105995;}s:14:"2048x2048-orig";a:5:{s:4:"file";s:34:"88377350_p0-scaled-1-2048x1181.jpg";s:5:"width";i:2048;s:6:"height";i:1181;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:161328;}s:19:"post-thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:8:{s:9:"full-orig";a:3:{s:5:"width";i:2560;s:6:"height";i:1476;s:4:"file";s:24:"88377350_p0-scaled-1.jpg";}s:14:"thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}s:11:"medium-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-300x173.jpg";s:5:"width";i:300;s:6:"height";i:173;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:8676;}s:17:"medium_large-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-768x443.jpg";s:5:"width";i:768;s:6:"height";i:443;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:36957;}s:10:"large-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1024x590.jpg";s:5:"width";i:1024;s:6:"height";i:590;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:57632;}s:14:"1536x1536-orig";a:5:{s:4:"file";s:33:"88377350_p0-scaled-1-1536x886.jpg";s:5:"width";i:1536;s:6:"height";i:886;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:105995;}s:14:"2048x2048-orig";a:5:{s:4:"file";s:34:"88377350_p0-scaled-1-2048x1181.jpg";s:5:"width";i:2048;s:6:"height";i:1181;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:161328;}s:19:"post-thumbnail-orig";a:5:{s:4:"file";s:32:"88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4435;}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[cropped-88377350_p0-scaled-1.jpg]]></title>
		<link>https://blog.zhuanjie.ltd/cropped-88377350_p0-scaled-1-jpg/</link>
		<pubDate>Fri, 01 Apr 2022 08:22:11 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/04/cropped-88377350_p0-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>592</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 16:22:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 08:22:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 16:22:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 08:22:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-88377350_p0-scaled-1-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/04/cropped-88377350_p0-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/04/cropped-88377350_p0-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1600;s:6:"height";i:554;s:4:"file";s:40:"2022/04/cropped-88377350_p0-scaled-1.jpg";s:8:"filesize";i:86873;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:40:"cropped-88377350_p0-scaled-1-300x104.jpg";s:5:"width";i:300;s:6:"height";i:104;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:6798;}s:5:"large";a:5:{s:4:"file";s:41:"cropped-88377350_p0-scaled-1-1024x355.jpg";s:5:"width";i:1024;s:6:"height";i:355;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:43105;}s:9:"thumbnail";a:5:{s:4:"file";s:40:"cropped-88377350_p0-scaled-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4404;}s:12:"medium_large";a:5:{s:4:"file";s:40:"cropped-88377350_p0-scaled-1-768x266.jpg";s:5:"width";i:768;s:6:"height";i:266;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:27980;}s:9:"1536x1536";a:5:{s:4:"file";s:41:"cropped-88377350_p0-scaled-1-1536x532.jpg";s:5:"width";i:1536;s:6:"height";i:532;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:78566;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[cropped-88377350_p0-scaled-2.jpg]]></title>
		<link>https://blog.zhuanjie.ltd/cropped-88377350_p0-scaled-2-jpg/</link>
		<pubDate>Fri, 01 Apr 2022 08:22:43 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/04/cropped-88377350_p0-scaled-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>593</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 16:22:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 08:22:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 16:22:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 08:22:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-88377350_p0-scaled-2-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/04/cropped-88377350_p0-scaled-2.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/04/cropped-88377350_p0-scaled-2.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1600;s:6:"height";i:400;s:4:"file";s:40:"2022/04/cropped-88377350_p0-scaled-2.jpg";s:8:"filesize";i:71703;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:39:"cropped-88377350_p0-scaled-2-300x75.jpg";s:5:"width";i:300;s:6:"height";i:75;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:5824;}s:5:"large";a:5:{s:4:"file";s:41:"cropped-88377350_p0-scaled-2-1024x256.jpg";s:5:"width";i:1024;s:6:"height";i:256;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:35314;}s:9:"thumbnail";a:5:{s:4:"file";s:40:"cropped-88377350_p0-scaled-2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:4529;}s:12:"medium_large";a:5:{s:4:"file";s:40:"cropped-88377350_p0-scaled-2-768x192.jpg";s:5:"width";i:768;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:22984;}s:9:"1536x1536";a:5:{s:4:"file";s:41:"cropped-88377350_p0-scaled-2-1536x384.jpg";s:5:"width";i:1536;s:6:"height";i:384;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:64488;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_nisarg]]></wp:meta_key>
		<wp:meta_value><![CDATA[1649222828]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
		<wp:meta_value><![CDATA[nisarg]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[38991718_p0]]></title>
		<link>https://blog.zhuanjie.ltd/38991718_p0/</link>
		<pubDate>Sat, 02 Apr 2022 04:44:18 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/04/38991718_p0.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>612</wp:post_id>
		<wp:post_date><![CDATA[2022-04-02 12:44:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-02 04:44:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-02 12:44:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-02 04:44:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[38991718_p0]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/04/38991718_p0.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/04/38991718_p0.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1448;s:6:"height";i:1448;s:4:"file";s:23:"2022/04/38991718_p0.jpg";s:8:"filesize";i:794953;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:23:"38991718_p0-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:18616;}s:5:"large";a:5:{s:4:"file";s:25:"38991718_p0-1024x1024.jpg";s:5:"width";i:1024;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:110945;}s:9:"thumbnail";a:5:{s:4:"file";s:23:"38991718_p0-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:6484;}s:12:"medium_large";a:5:{s:4:"file";s:23:"38991718_p0-768x768.jpg";s:5:"width";i:768;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:73792;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[38991718_p0]]></title>
		<link>https://blog.zhuanjie.ltd/38991718_p0-2/</link>
		<pubDate>Sat, 02 Apr 2022 04:44:53 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/04/38991718_p0-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>613</wp:post_id>
		<wp:post_date><![CDATA[2022-04-02 12:44:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-02 04:44:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-02 12:44:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-02 04:44:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[38991718_p0-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/04/38991718_p0-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/04/38991718_p0-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1448;s:6:"height";i:1448;s:4:"file";s:25:"2022/04/38991718_p0-1.jpg";s:8:"filesize";i:794953;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:25:"38991718_p0-1-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:18616;}s:5:"large";a:5:{s:4:"file";s:27:"38991718_p0-1-1024x1024.jpg";s:5:"width";i:1024;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:110945;}s:9:"thumbnail";a:5:{s:4:"file";s:25:"38991718_p0-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:6484;}s:12:"medium_large";a:5:{s:4:"file";s:25:"38991718_p0-1-768x768.jpg";s:5:"width";i:768;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";s:8:"filesize";i:73792;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image]]></title>
		<link>https://blog.zhuanjie.ltd/image/</link>
		<pubDate>Thu, 02 Jun 2022 01:53:29 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>639</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 09:53:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 01:53:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 09:53:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 01:53:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:865;s:6:"height";i:487;s:4:"file";s:17:"2022/06/image.png";s:8:"filesize";i:163415;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:17:"image-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:24938;}s:9:"thumbnail";a:5:{s:4:"file";s:17:"image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10724;}s:12:"medium_large";a:5:{s:4:"file";s:17:"image-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:126811;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-1]]></title>
		<link>https://blog.zhuanjie.ltd/image-1/</link>
		<pubDate>Thu, 02 Jun 2022 01:53:39 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>640</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 09:53:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 01:53:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 09:53:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 01:53:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:499;s:6:"height";i:623;s:4:"file";s:19:"2022/06/image-1.png";s:8:"filesize";i:88420;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-1-240x300.png";s:5:"width";i:240;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:24555;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7720;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-2]]></title>
		<link>https://blog.zhuanjie.ltd/image-2/</link>
		<pubDate>Thu, 02 Jun 2022 02:19:16 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>643</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:19:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:19:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:19:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:19:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:115;s:6:"height";i:30;s:4:"file";s:19:"2022/06/image-2.png";s:8:"filesize";i:1569;s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-3]]></title>
		<link>https://blog.zhuanjie.ltd/image-3/</link>
		<pubDate>Thu, 02 Jun 2022 02:20:21 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>644</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:20:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:20:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:20:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:20:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-3.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-3.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:865;s:6:"height";i:469;s:4:"file";s:19:"2022/06/image-3.png";s:8:"filesize";i:137114;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:19:"image-3-300x163.png";s:5:"width";i:300;s:6:"height";i:163;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:20666;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7786;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-3-768x416.png";s:5:"width";i:768;s:6:"height";i:416;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:106925;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-4]]></title>
		<link>https://blog.zhuanjie.ltd/image-4/</link>
		<pubDate>Thu, 02 Jun 2022 02:20:41 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>645</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:20:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:20:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:20:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:20:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-4.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-4.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:865;s:6:"height";i:487;s:4:"file";s:19:"2022/06/image-4.png";s:8:"filesize";i:206074;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:19:"image-4-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:32220;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:14811;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-4-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:165912;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-5]]></title>
		<link>https://blog.zhuanjie.ltd/image-5/</link>
		<pubDate>Thu, 02 Jun 2022 02:20:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>646</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:20:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:20:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:20:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:20:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-5.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-5.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:106;s:6:"height";i:582;s:4:"file";s:19:"2022/06/image-5.png";s:8:"filesize";i:13962;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:18:"image-5-55x300.png";s:5:"width";i:55;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8291;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-5-106x150.png";s:5:"width";i:106;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5774;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-6]]></title>
		<link>https://blog.zhuanjie.ltd/image-6/</link>
		<pubDate>Thu, 02 Jun 2022 02:21:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>647</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:21:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:21:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:21:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:21:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-6]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-6.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-6.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:216;s:6:"height";i:557;s:4:"file";s:19:"2022/06/image-6.png";s:8:"filesize";i:28021;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-6-116x300.png";s:5:"width";i:116;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15771;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12373;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-7]]></title>
		<link>https://blog.zhuanjie.ltd/image-7/</link>
		<pubDate>Thu, 02 Jun 2022 02:21:04 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-7.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>648</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:21:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:21:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:21:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:21:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-7.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-7.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:185;s:6:"height";i:363;s:4:"file";s:19:"2022/06/image-7.png";s:8:"filesize";i:18373;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-7-153x300.png";s:5:"width";i:153;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18032;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-7-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7088;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-8]]></title>
		<link>https://blog.zhuanjie.ltd/image-8/</link>
		<pubDate>Thu, 02 Jun 2022 10:15:29 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-8.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>653</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 18:15:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 10:15:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 18:15:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 10:15:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-8]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-8.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-8.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:865;s:6:"height";i:487;s:4:"file";s:19:"2022/06/image-8.png";s:8:"filesize";i:174228;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:19:"image-8-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:27294;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-8-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13360;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-8-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:138929;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-9]]></title>
		<link>https://blog.zhuanjie.ltd/image-9/</link>
		<pubDate>Thu, 02 Jun 2022 10:15:34 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>654</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 18:15:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 10:15:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 18:15:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 10:15:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-9]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-9.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-9.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:431;s:6:"height";i:640;s:4:"file";s:19:"2022/06/image-9.png";s:8:"filesize";i:98884;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-9-202x300.png";s:5:"width";i:202;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:34137;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-9-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15584;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-10]]></title>
		<link>https://blog.zhuanjie.ltd/image-10/</link>
		<pubDate>Thu, 02 Jun 2022 10:15:42 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>655</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 18:15:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 10:15:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 18:15:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 10:15:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-10]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-10.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-10.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:422;s:6:"height";i:527;s:4:"file";s:20:"2022/06/image-10.png";s:8:"filesize";i:97054;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"image-10-240x300.png";s:5:"width";i:240;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:39967;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-10-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15937;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-11]]></title>
		<link>https://blog.zhuanjie.ltd/image-11/</link>
		<pubDate>Thu, 02 Jun 2022 10:16:02 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>656</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 18:16:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 10:16:02]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 18:16:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 10:16:02]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-11]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-11.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-11.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:422;s:6:"height";i:527;s:4:"file";s:20:"2022/06/image-11.png";s:8:"filesize";i:97054;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"image-11-240x300.png";s:5:"width";i:240;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:39967;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-11-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15937;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-12]]></title>
		<link>https://blog.zhuanjie.ltd/image-12/</link>
		<pubDate>Thu, 02 Jun 2022 10:16:12 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/image-12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>657</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 18:16:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 10:16:12]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 18:16:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 10:16:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-12]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-12.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/image-12.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:533;s:6:"height";i:863;s:4:"file";s:20:"2022/06/image-12.png";s:8:"filesize";i:130869;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"image-12-185x300.png";s:5:"width";i:185;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:24655;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-12-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12187;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[1]]></title>
		<link>https://blog.zhuanjie.ltd/1/</link>
		<pubDate>Sat, 11 Jun 2022 15:32:06 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>662</wp:post_id>
		<wp:post_date><![CDATA[2022-06-11 23:32:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-11 15:32:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-11 23:32:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-11 15:32:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:168;s:6:"height";i:460;s:4:"file";s:13:"2022/06/1.png";s:8:"filesize";i:47028;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:13:"1-110x300.png";s:5:"width";i:110;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:23038;}s:9:"thumbnail";a:5:{s:4:"file";s:13:"1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13804;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[2]]></title>
		<link>https://blog.zhuanjie.ltd/2/</link>
		<pubDate>Sat, 11 Jun 2022 15:32:13 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>663</wp:post_id>
		<wp:post_date><![CDATA[2022-06-11 23:32:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-11 15:32:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-11 23:32:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-11 15:32:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:175;s:6:"height";i:460;s:4:"file";s:13:"2022/06/2.png";s:8:"filesize";i:52610;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:13:"2-114x300.png";s:5:"width";i:114;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:25247;}s:9:"thumbnail";a:5:{s:4:"file";s:13:"2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:14671;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[3]]></title>
		<link>https://blog.zhuanjie.ltd/3/</link>
		<pubDate>Sat, 11 Jun 2022 15:32:19 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/06/3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>664</wp:post_id>
		<wp:post_date><![CDATA[2022-06-11 23:32:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-11 15:32:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-11 23:32:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-11 15:32:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/06/3.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/06/3.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:190;s:6:"height";i:459;s:4:"file";s:13:"2022/06/3.png";s:8:"filesize";i:42141;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:13:"3-124x300.png";s:5:"width";i:124;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:21321;}s:9:"thumbnail";a:5:{s:4:"file";s:13:"3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:11930;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image]]></title>
		<link>https://blog.zhuanjie.ltd/image-13/</link>
		<pubDate>Fri, 08 Jul 2022 04:55:39 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>692</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 12:55:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 04:55:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 12:55:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 04:55:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-13]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1070;s:6:"height";i:668;s:4:"file";s:17:"2022/07/image.png";s:8:"filesize";i:91946;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:17:"image-300x187.png";s:5:"width";i:300;s:6:"height";i:187;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:28600;}s:5:"large";a:5:{s:4:"file";s:18:"image-1024x639.png";s:5:"width";i:1024;s:6:"height";i:639;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:205108;}s:9:"thumbnail";a:5:{s:4:"file";s:17:"image-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13488;}s:12:"medium_large";a:5:{s:4:"file";s:17:"image-768x479.png";s:5:"width";i:768;s:6:"height";i:479;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:132213;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-1]]></title>
		<link>https://blog.zhuanjie.ltd/image-1-2/</link>
		<pubDate>Fri, 08 Jul 2022 05:00:56 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>693</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 13:00:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 05:00:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 13:00:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 05:00:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:889;s:6:"height";i:754;s:4:"file";s:19:"2022/07/image-1.png";s:8:"filesize";i:53188;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:19:"image-1-300x254.png";s:5:"width";i:300;s:6:"height";i:254;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19478;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7569;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-1-768x651.png";s:5:"width";i:768;s:6:"height";i:651;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:85618;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-2]]></title>
		<link>https://blog.zhuanjie.ltd/image-2-2/</link>
		<pubDate>Fri, 08 Jul 2022 05:04:06 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>694</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 13:04:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 05:04:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 13:04:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 05:04:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-2-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:743;s:6:"height";i:758;s:4:"file";s:19:"2022/07/image-2.png";s:8:"filesize";i:36910;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-2-294x300.png";s:5:"width";i:294;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:17420;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6240;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-3]]></title>
		<link>https://blog.zhuanjie.ltd/image-3-2/</link>
		<pubDate>Fri, 08 Jul 2022 05:07:20 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>695</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 13:07:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 05:07:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 13:07:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 05:07:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-3-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-3.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-3.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:893;s:6:"height";i:579;s:4:"file";s:19:"2022/07/image-3.png";s:8:"filesize";i:44363;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:19:"image-3-300x195.png";s:5:"width";i:300;s:6:"height";i:195;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15697;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7443;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-3-768x498.png";s:5:"width";i:768;s:6:"height";i:498;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:72225;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-4]]></title>
		<link>https://blog.zhuanjie.ltd/image-4-2/</link>
		<pubDate>Fri, 08 Jul 2022 11:49:23 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>697</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 19:49:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 11:49:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 19:49:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 11:49:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-4-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-4.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-4.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:599;s:6:"height";i:361;s:4:"file";s:19:"2022/07/image-4.png";s:8:"filesize";i:54497;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-4-300x181.png";s:5:"width";i:300;s:6:"height";i:181;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:41813;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:23469;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-5]]></title>
		<link>https://blog.zhuanjie.ltd/image-5-2/</link>
		<pubDate>Fri, 08 Jul 2022 11:51:46 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>698</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 19:51:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 11:51:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 19:51:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 11:51:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-5-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-5.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-5.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:645;s:6:"height";i:284;s:4:"file";s:19:"2022/07/image-5.png";s:8:"filesize";i:10576;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-5-300x132.png";s:5:"width";i:300;s:6:"height";i:132;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6992;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-5-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5023;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-6]]></title>
		<link>https://blog.zhuanjie.ltd/image-6-2/</link>
		<pubDate>Fri, 08 Jul 2022 11:53:34 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>699</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 19:53:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 11:53:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 19:53:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 11:53:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-6-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-6.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-6.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:658;s:6:"height";i:523;s:4:"file";s:19:"2022/07/image-6.png";s:8:"filesize";i:26997;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-6-300x238.png";s:5:"width";i:300;s:6:"height";i:238;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15238;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5337;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-7]]></title>
		<link>https://blog.zhuanjie.ltd/image-7-2/</link>
		<pubDate>Fri, 08 Jul 2022 11:54:46 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-7.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>700</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 19:54:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 11:54:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 19:54:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 11:54:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-7-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-7.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-7.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:540;s:6:"height";i:455;s:4:"file";s:19:"2022/07/image-7.png";s:8:"filesize";i:19970;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-7-300x253.png";s:5:"width";i:300;s:6:"height";i:253;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:14406;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-7-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5708;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-8]]></title>
		<link>https://blog.zhuanjie.ltd/image-8-2/</link>
		<pubDate>Fri, 08 Jul 2022 11:57:39 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-8.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>701</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 19:57:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 11:57:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 19:57:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 11:57:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-8-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-8.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-8.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1222;s:6:"height";i:768;s:4:"file";s:19:"2022/07/image-8.png";s:8:"filesize";i:95878;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:19:"image-8-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19541;}s:5:"large";a:5:{s:4:"file";s:20:"image-8-1024x644.png";s:5:"width";i:1024;s:6:"height";i:644;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:138738;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-8-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8960;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-8-768x483.png";s:5:"width";i:768;s:6:"height";i:483;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:89132;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-9]]></title>
		<link>https://blog.zhuanjie.ltd/image-9-2/</link>
		<pubDate>Fri, 08 Jul 2022 11:59:52 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>702</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 19:59:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 11:59:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 19:59:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 11:59:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-9-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-9.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-9.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:684;s:6:"height";i:377;s:4:"file";s:19:"2022/07/image-9.png";s:8:"filesize";i:16932;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-9-300x165.png";s:5:"width";i:300;s:6:"height";i:165;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:9933;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-9-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5751;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-10]]></title>
		<link>https://blog.zhuanjie.ltd/image-10-2/</link>
		<pubDate>Fri, 08 Jul 2022 12:06:50 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>703</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 20:06:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 12:06:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 20:06:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 12:06:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-10-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-10.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-10.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1484;s:6:"height";i:778;s:4:"file";s:20:"2022/07/image-10.png";s:8:"filesize";i:80560;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:20:"image-10-300x157.png";s:5:"width";i:300;s:6:"height";i:157;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13507;}s:5:"large";a:5:{s:4:"file";s:21:"image-10-1024x537.png";s:5:"width";i:1024;s:6:"height";i:537;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:105769;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-10-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5630;}s:12:"medium_large";a:5:{s:4:"file";s:20:"image-10-768x403.png";s:5:"width";i:768;s:6:"height";i:403;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:66022;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-11]]></title>
		<link>https://blog.zhuanjie.ltd/image-11-2/</link>
		<pubDate>Fri, 08 Jul 2022 12:07:41 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>704</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 20:07:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 12:07:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 20:07:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 12:07:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-11-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-11.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-11.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1503;s:6:"height";i:618;s:4:"file";s:20:"2022/07/image-11.png";s:8:"filesize";i:46644;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:20:"image-11-300x123.png";s:5:"width";i:300;s:6:"height";i:123;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7281;}s:5:"large";a:5:{s:4:"file";s:21:"image-11-1024x421.png";s:5:"width";i:1024;s:6:"height";i:421;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:55091;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-11-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:2429;}s:12:"medium_large";a:5:{s:4:"file";s:20:"image-11-768x316.png";s:5:"width";i:768;s:6:"height";i:316;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:35714;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-12]]></title>
		<link>https://blog.zhuanjie.ltd/image-12-2/</link>
		<pubDate>Fri, 08 Jul 2022 12:27:35 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>705</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 20:27:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 12:27:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 20:27:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 12:27:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-12-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-12.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-12.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1887;s:6:"height";i:735;s:4:"file";s:20:"2022/07/image-12.png";s:8:"filesize";i:278263;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:20:"image-12-300x117.png";s:5:"width";i:300;s:6:"height";i:117;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:24740;}s:5:"large";a:5:{s:4:"file";s:21:"image-12-1024x399.png";s:5:"width";i:1024;s:6:"height";i:399;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:176829;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-12-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12292;}s:12:"medium_large";a:5:{s:4:"file";s:20:"image-12-768x299.png";s:5:"width";i:768;s:6:"height";i:299;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:111553;}s:9:"1536x1536";a:5:{s:4:"file";s:21:"image-12-1536x598.png";s:5:"width";i:1536;s:6:"height";i:598;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:324103;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-13]]></title>
		<link>https://blog.zhuanjie.ltd/image-13-2/</link>
		<pubDate>Fri, 08 Jul 2022 12:39:37 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-13.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>706</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 20:39:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 12:39:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 20:39:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 12:39:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-13-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-13.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-13.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:659;s:6:"height";i:184;s:4:"file";s:20:"2022/07/image-13.png";s:8:"filesize";i:22941;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:19:"image-13-300x84.png";s:5:"width";i:300;s:6:"height";i:84;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16102;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-13-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15204;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-14]]></title>
		<link>https://blog.zhuanjie.ltd/image-14/</link>
		<pubDate>Fri, 08 Jul 2022 12:43:31 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-14.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>707</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 20:43:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 12:43:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 20:43:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 12:43:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-14]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-14.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-14.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:586;s:6:"height";i:351;s:4:"file";s:20:"2022/07/image-14.png";s:8:"filesize";i:30203;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"image-14-300x180.png";s:5:"width";i:300;s:6:"height";i:180;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:28171;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-14-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16639;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-15]]></title>
		<link>https://blog.zhuanjie.ltd/image-15/</link>
		<pubDate>Fri, 08 Jul 2022 13:01:05 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-15.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 21:01:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 13:01:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 21:01:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 13:01:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-15]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-15.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-15.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:649;s:6:"height";i:373;s:4:"file";s:20:"2022/07/image-15.png";s:8:"filesize";i:35014;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"image-15-300x172.png";s:5:"width";i:300;s:6:"height";i:172;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:37927;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-15-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:21580;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-16]]></title>
		<link>https://blog.zhuanjie.ltd/image-16/</link>
		<pubDate>Fri, 08 Jul 2022 13:03:54 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-16.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>709</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 21:03:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 13:03:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 21:03:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 13:03:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-16]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-16.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-16.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1147;s:6:"height";i:712;s:4:"file";s:20:"2022/07/image-16.png";s:8:"filesize";i:161667;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:20:"image-16-300x186.png";s:5:"width";i:300;s:6:"height";i:186;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:36994;}s:5:"large";a:5:{s:4:"file";s:21:"image-16-1024x636.png";s:5:"width";i:1024;s:6:"height";i:636;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:249691;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-16-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16887;}s:12:"medium_large";a:5:{s:4:"file";s:20:"image-16-768x477.png";s:5:"width";i:768;s:6:"height";i:477;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:165268;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-17]]></title>
		<link>https://blog.zhuanjie.ltd/image-17/</link>
		<pubDate>Fri, 08 Jul 2022 13:04:13 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-17.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 21:04:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 13:04:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 21:04:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 13:04:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-17]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-17.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-17.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1147;s:6:"height";i:712;s:4:"file";s:20:"2022/07/image-17.png";s:8:"filesize";i:161667;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:20:"image-17-300x186.png";s:5:"width";i:300;s:6:"height";i:186;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:36994;}s:5:"large";a:5:{s:4:"file";s:21:"image-17-1024x636.png";s:5:"width";i:1024;s:6:"height";i:636;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:249691;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-17-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16887;}s:12:"medium_large";a:5:{s:4:"file";s:20:"image-17-768x477.png";s:5:"width";i:768;s:6:"height";i:477;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:165268;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-18]]></title>
		<link>https://blog.zhuanjie.ltd/image-18/</link>
		<pubDate>Fri, 08 Jul 2022 13:06:26 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-18.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>721</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 21:06:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 13:06:26]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 21:06:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 13:06:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-18]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-18.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-18.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:636;s:6:"height";i:368;s:4:"file";s:20:"2022/07/image-18.png";s:8:"filesize";i:34505;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"image-18-300x174.png";s:5:"width";i:300;s:6:"height";i:174;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:38499;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-18-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:22701;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-19]]></title>
		<link>https://blog.zhuanjie.ltd/image-19/</link>
		<pubDate>Fri, 08 Jul 2022 13:07:23 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-19.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>722</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 21:07:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 13:07:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 21:07:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 13:07:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-19]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-19.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-19.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:652;s:6:"height";i:410;s:4:"file";s:20:"2022/07/image-19.png";s:8:"filesize";i:39944;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:20:"image-19-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:42445;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-19-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:22678;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-20]]></title>
		<link>https://blog.zhuanjie.ltd/image-20/</link>
		<pubDate>Thu, 21 Jul 2022 11:33:27 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/07/image-20.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>799</wp:post_id>
		<wp:post_date><![CDATA[2022-07-21 19:33:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-21 11:33:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-21 19:33:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-21 11:33:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-20]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-20.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/07/image-20.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1139;s:6:"height";i:641;s:4:"file";s:20:"2022/07/image-20.png";s:8:"filesize";i:86604;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:20:"image-20-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19934;}s:5:"large";a:5:{s:4:"file";s:21:"image-20-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:130063;}s:9:"thumbnail";a:5:{s:4:"file";s:20:"image-20-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10861;}s:12:"medium_large";a:5:{s:4:"file";s:20:"image-20-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:85184;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[802.1q帧]]></title>
		<link>https://blog.zhuanjie.ltd/802-1q%e5%b8%a7/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:48 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/802.1q帧.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>828</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[802-1q%e5%b8%a7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/802.1q帧.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/802.1q帧.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1712;s:6:"height";i:656;s:4:"file";s:21:"2022/09/802.1q帧.png";s:8:"filesize";i:365745;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:21:"802.1q帧-300x115.png";s:5:"width";i:300;s:6:"height";i:115;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:25556;}s:5:"large";a:5:{s:4:"file";s:22:"802.1q帧-1024x392.png";s:5:"width";i:1024;s:6:"height";i:392;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:174907;}s:9:"thumbnail";a:5:{s:4:"file";s:21:"802.1q帧-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:17800;}s:12:"medium_large";a:5:{s:4:"file";s:21:"802.1q帧-768x294.png";s:5:"width";i:768;s:6:"height";i:294;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:111382;}s:9:"1536x1536";a:5:{s:4:"file";s:22:"802.1q帧-1536x589.png";s:5:"width";i:1536;s:6:"height";i:589;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:327277;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[802.11mac帧头格式]]></title>
		<link>https://blog.zhuanjie.ltd/802-11mac%e5%b8%a7%e5%a4%b4%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:51 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/802.11mac帧头格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>829</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[802-11mac%e5%b8%a7%e5%a4%b4%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/802.11mac帧头格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/802.11mac帧头格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1675;s:6:"height";i:664;s:4:"file";s:33:"2022/09/802.11mac帧头格式.png";s:8:"filesize";i:335250;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:33:"802.11mac帧头格式-300x119.png";s:5:"width";i:300;s:6:"height";i:119;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16446;}s:5:"large";a:5:{s:4:"file";s:34:"802.11mac帧头格式-1024x406.png";s:5:"width";i:1024;s:6:"height";i:406;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:128194;}s:9:"thumbnail";a:5:{s:4:"file";s:33:"802.11mac帧头格式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8169;}s:12:"medium_large";a:5:{s:4:"file";s:33:"802.11mac帧头格式-768x304.png";s:5:"width";i:768;s:6:"height";i:304;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:81286;}s:9:"1536x1536";a:5:{s:4:"file";s:34:"802.11mac帧头格式-1536x609.png";s:5:"width";i:1536;s:6:"height";i:609;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:246230;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[802.11局域网数据帧]]></title>
		<link>https://blog.zhuanjie.ltd/802-11%e5%b1%80%e5%9f%9f%e7%bd%91%e6%95%b0%e6%8d%ae%e5%b8%a7/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:52 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/802.11局域网数据帧.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>830</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:52]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[802-11%e5%b1%80%e5%9f%9f%e7%bd%91%e6%95%b0%e6%8d%ae%e5%b8%a7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/802.11局域网数据帧.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/802.11局域网数据帧.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1322;s:6:"height";i:332;s:4:"file";s:36:"2022/09/802.11局域网数据帧.png";s:8:"filesize";i:172851;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:35:"802.11局域网数据帧-300x75.png";s:5:"width";i:300;s:6:"height";i:75;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15921;}s:5:"large";a:5:{s:4:"file";s:37:"802.11局域网数据帧-1024x257.png";s:5:"width";i:1024;s:6:"height";i:257;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:107901;}s:9:"thumbnail";a:5:{s:4:"file";s:36:"802.11局域网数据帧-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18466;}s:12:"medium_large";a:5:{s:4:"file";s:36:"802.11局域网数据帧-768x193.png";s:5:"width";i:768;s:6:"height";i:193;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:70936;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ARP请求与响应]]></title>
		<link>https://blog.zhuanjie.ltd/arp%e8%af%b7%e6%b1%82%e4%b8%8e%e5%93%8d%e5%ba%94/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:53 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/ARP请求与响应.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>831</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[arp%e8%af%b7%e6%b1%82%e4%b8%8e%e5%93%8d%e5%ba%94]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/ARP请求与响应.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/ARP请求与响应.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:778;s:6:"height";i:344;s:4:"file";s:30:"2022/09/ARP请求与响应.png";s:8:"filesize";i:94444;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:30:"ARP请求与响应-300x133.png";s:5:"width";i:300;s:6:"height";i:133;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:22964;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"ARP请求与响应-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18829;}s:12:"medium_large";a:5:{s:4:"file";s:30:"ARP请求与响应-768x340.png";s:5:"width";i:768;s:6:"height";i:340;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:92592;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[BGP协议报文格式]]></title>
		<link>https://blog.zhuanjie.ltd/bgp%e5%8d%8f%e8%ae%ae%e6%8a%a5%e6%96%87%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/BGP协议报文格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>832</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[bgp%e5%8d%8f%e8%ae%ae%e6%8a%a5%e6%96%87%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/BGP协议报文格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/BGP协议报文格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1574;s:6:"height";i:645;s:4:"file";s:33:"2022/09/BGP协议报文格式.png";s:8:"filesize";i:268554;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:33:"BGP协议报文格式-300x123.png";s:5:"width";i:300;s:6:"height";i:123;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18945;}s:5:"large";a:5:{s:4:"file";s:34:"BGP协议报文格式-1024x420.png";s:5:"width";i:1024;s:6:"height";i:420;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:143118;}s:9:"thumbnail";a:5:{s:4:"file";s:33:"BGP协议报文格式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15979;}s:12:"medium_large";a:5:{s:4:"file";s:33:"BGP协议报文格式-768x315.png";s:5:"width";i:768;s:6:"height";i:315;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:90081;}s:9:"1536x1536";a:5:{s:4:"file";s:34:"BGP协议报文格式-1536x629.png";s:5:"width";i:1536;s:6:"height";i:629;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:262337;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[CIDR划分网络]]></title>
		<link>https://blog.zhuanjie.ltd/cidr%e5%88%92%e5%88%86%e7%bd%91%e7%bb%9c/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:57 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/CIDR划分网络.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>833</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cidr%e5%88%92%e5%88%86%e7%bd%91%e7%bb%9c]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/CIDR划分网络.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/CIDR划分网络.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:541;s:6:"height";i:258;s:4:"file";s:28:"2022/09/CIDR划分网络.png";s:8:"filesize";i:51813;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:28:"CIDR划分网络-300x143.png";s:5:"width";i:300;s:6:"height";i:143;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:21109;}s:9:"thumbnail";a:5:{s:4:"file";s:28:"CIDR划分网络-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12629;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[D类IP地址和组播物理地址映射]]></title>
		<link>https://blog.zhuanjie.ltd/d%e7%b1%bbip%e5%9c%b0%e5%9d%80%e5%92%8c%e7%bb%84%e6%92%ad%e7%89%a9%e7%90%86%e5%9c%b0%e5%9d%80%e6%98%a0%e5%b0%84/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:57 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/D类IP地址和组播物理地址映射.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>834</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[d%e7%b1%bbip%e5%9c%b0%e5%9d%80%e5%92%8c%e7%bb%84%e6%92%ad%e7%89%a9%e7%90%86%e5%9c%b0%e5%9d%80%e6%98%a0%e5%b0%84]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/D类IP地址和组播物理地址映射.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/D类IP地址和组播物理地址映射.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1229;s:6:"height";i:582;s:4:"file";s:51:"2022/09/D类IP地址和组播物理地址映射.png";s:8:"filesize";i:302089;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:51:"D类IP地址和组播物理地址映射-300x142.png";s:5:"width";i:300;s:6:"height";i:142;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:31742;}s:5:"large";a:5:{s:4:"file";s:52:"D类IP地址和组播物理地址映射-1024x485.png";s:5:"width";i:1024;s:6:"height";i:485;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:230380;}s:9:"thumbnail";a:5:{s:4:"file";s:51:"D类IP地址和组播物理地址映射-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19040;}s:12:"medium_large";a:5:{s:4:"file";s:51:"D类IP地址和组播物理地址映射-768x364.png";s:5:"width";i:768;s:6:"height";i:364;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:145881;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[FTP工作原理]]></title>
		<link>https://blog.zhuanjie.ltd/ftp%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86/</link>
		<pubDate>Tue, 20 Sep 2022 09:42:58 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/FTP工作原理.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>835</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:42:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:42:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:42:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:42:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ftp%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/FTP工作原理.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/FTP工作原理.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1178;s:6:"height";i:428;s:4:"file";s:27:"2022/09/FTP工作原理.png";s:8:"filesize";i:186145;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:27:"FTP工作原理-300x109.png";s:5:"width";i:300;s:6:"height";i:109;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:20953;}s:5:"large";a:5:{s:4:"file";s:28:"FTP工作原理-1024x372.png";s:5:"width";i:1024;s:6:"height";i:372;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:146039;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"FTP工作原理-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15292;}s:12:"medium_large";a:5:{s:4:"file";s:27:"FTP工作原理-768x279.png";s:5:"width";i:768;s:6:"height";i:279;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:94348;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[hdlc帧格式]]></title>
		<link>https://blog.zhuanjie.ltd/hdlc%e5%b8%a7%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:01 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/hdlc帧格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>836</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hdlc%e5%b8%a7%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/hdlc帧格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/hdlc帧格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1690;s:6:"height";i:667;s:4:"file";s:25:"2022/09/hdlc帧格式.png";s:8:"filesize";i:424530;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:25:"hdlc帧格式-300x118.png";s:5:"width";i:300;s:6:"height";i:118;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:27199;}s:5:"large";a:5:{s:4:"file";s:26:"hdlc帧格式-1024x404.png";s:5:"width";i:1024;s:6:"height";i:404;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:205750;}s:9:"thumbnail";a:5:{s:4:"file";s:25:"hdlc帧格式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:20433;}s:12:"medium_large";a:5:{s:4:"file";s:25:"hdlc帧格式-768x303.png";s:5:"width";i:768;s:6:"height";i:303;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:129687;}s:9:"1536x1536";a:5:{s:4:"file";s:26:"hdlc帧格式-1536x606.png";s:5:"width";i:1536;s:6:"height";i:606;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:375624;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[HTTP报文]]></title>
		<link>https://blog.zhuanjie.ltd/http%e6%8a%a5%e6%96%87/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:04 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/HTTP报文.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>837</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[http%e6%8a%a5%e6%96%87]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/HTTP报文.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/HTTP报文.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1562;s:6:"height";i:532;s:4:"file";s:22:"2022/09/HTTP报文.png";s:8:"filesize";i:256707;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:22:"HTTP报文-300x102.png";s:5:"width";i:300;s:6:"height";i:102;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:17879;}s:5:"large";a:5:{s:4:"file";s:23:"HTTP报文-1024x349.png";s:5:"width";i:1024;s:6:"height";i:349;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:132421;}s:9:"thumbnail";a:5:{s:4:"file";s:22:"HTTP报文-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8893;}s:12:"medium_large";a:5:{s:4:"file";s:22:"HTTP报文-768x262.png";s:5:"width";i:768;s:6:"height";i:262;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:84397;}s:9:"1536x1536";a:5:{s:4:"file";s:23:"HTTP报文-1536x523.png";s:5:"width";i:1536;s:6:"height";i:523;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:243005;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ICMP差错报文数据字段]]></title>
		<link>https://blog.zhuanjie.ltd/icmp%e5%b7%ae%e9%94%99%e6%8a%a5%e6%96%87%e6%95%b0%e6%8d%ae%e5%ad%97%e6%ae%b5/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:06 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/ICMP差错报文数据字段.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>838</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[icmp%e5%b7%ae%e9%94%99%e6%8a%a5%e6%96%87%e6%95%b0%e6%8d%ae%e5%ad%97%e6%ae%b5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/ICMP差错报文数据字段.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/ICMP差错报文数据字段.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1505;s:6:"height";i:615;s:4:"file";s:40:"2022/09/ICMP差错报文数据字段.png";s:8:"filesize";i:400227;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:40:"ICMP差错报文数据字段-300x123.png";s:5:"width";i:300;s:6:"height";i:123;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:27926;}s:5:"large";a:5:{s:4:"file";s:41:"ICMP差错报文数据字段-1024x418.png";s:5:"width";i:1024;s:6:"height";i:418;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:220288;}s:9:"thumbnail";a:5:{s:4:"file";s:40:"ICMP差错报文数据字段-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:20485;}s:12:"medium_large";a:5:{s:4:"file";s:40:"ICMP差错报文数据字段-768x314.png";s:5:"width";i:768;s:6:"height";i:314;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:139552;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ICMP数据报]]></title>
		<link>https://blog.zhuanjie.ltd/icmp%e6%95%b0%e6%8d%ae%e6%8a%a5/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:08 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/ICMP数据报.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>839</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[icmp%e6%95%b0%e6%8d%ae%e6%8a%a5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/ICMP数据报.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/ICMP数据报.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1303;s:6:"height";i:605;s:4:"file";s:25:"2022/09/ICMP数据报.png";s:8:"filesize";i:353145;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:25:"ICMP数据报-300x139.png";s:5:"width";i:300;s:6:"height";i:139;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:31389;}s:5:"large";a:5:{s:4:"file";s:26:"ICMP数据报-1024x475.png";s:5:"width";i:1024;s:6:"height";i:475;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:242104;}s:9:"thumbnail";a:5:{s:4:"file";s:25:"ICMP数据报-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:22354;}s:12:"medium_large";a:5:{s:4:"file";s:25:"ICMP数据报-768x357.png";s:5:"width";i:768;s:6:"height";i:357;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:153504;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[IPv6数据报]]></title>
		<link>https://blog.zhuanjie.ltd/ipv6%e6%95%b0%e6%8d%ae%e6%8a%a5/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:10 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/IPv6数据报.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>840</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ipv6%e6%95%b0%e6%8d%ae%e6%8a%a5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/IPv6数据报.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/IPv6数据报.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1331;s:6:"height";i:550;s:4:"file";s:25:"2022/09/IPv6数据报.png";s:8:"filesize";i:212689;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:25:"IPv6数据报-300x124.png";s:5:"width";i:300;s:6:"height";i:124;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19117;}s:5:"large";a:5:{s:4:"file";s:26:"IPv6数据报-1024x423.png";s:5:"width";i:1024;s:6:"height";i:423;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:146021;}s:9:"thumbnail";a:5:{s:4:"file";s:25:"IPv6数据报-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15355;}s:12:"medium_large";a:5:{s:4:"file";s:25:"IPv6数据报-768x317.png";s:5:"width";i:768;s:6:"height";i:317;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:92634;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[IPv6数据报格式]]></title>
		<link>https://blog.zhuanjie.ltd/ipv6%e6%95%b0%e6%8d%ae%e6%8a%a5%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:13 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/IPv6数据报格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ipv6%e6%95%b0%e6%8d%ae%e6%8a%a5%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/IPv6数据报格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/IPv6数据报格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1077;s:6:"height";i:513;s:4:"file";s:31:"2022/09/IPv6数据报格式.png";s:8:"filesize";i:262852;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:31:"IPv6数据报格式-300x143.png";s:5:"width";i:300;s:6:"height";i:143;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30724;}s:5:"large";a:5:{s:4:"file";s:32:"IPv6数据报格式-1024x488.png";s:5:"width";i:1024;s:6:"height";i:488;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:239516;}s:9:"thumbnail";a:5:{s:4:"file";s:31:"IPv6数据报格式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13485;}s:12:"medium_large";a:5:{s:4:"file";s:31:"IPv6数据报格式-768x366.png";s:5:"width";i:768;s:6:"height";i:366;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:150475;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[IP数据报格式]]></title>
		<link>https://blog.zhuanjie.ltd/ip%e6%95%b0%e6%8d%ae%e6%8a%a5%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:14 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/IP数据报格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>842</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:14]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:14]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:14]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ip%e6%95%b0%e6%8d%ae%e6%8a%a5%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/IP数据报格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/IP数据报格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1443;s:6:"height";i:961;s:4:"file";s:29:"2022/09/IP数据报格式.png";s:8:"filesize";i:313175;s:5:"sizes";a:1:{s:6:"medium";a:5:{s:4:"file";s:29:"IP数据报格式-300x200.png";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:26563;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MIME]]></title>
		<link>https://blog.zhuanjie.ltd/mime/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:15 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/MIME.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>843</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mime]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/MIME.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/MIME.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:801;s:6:"height";i:444;s:4:"file";s:16:"2022/09/MIME.png";s:8:"filesize";i:86408;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:16:"MIME-300x166.png";s:5:"width";i:300;s:6:"height";i:166;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18743;}s:9:"thumbnail";a:5:{s:4:"file";s:16:"MIME-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6249;}s:12:"medium_large";a:5:{s:4:"file";s:16:"MIME-768x426.png";s:5:"width";i:768;s:6:"height";i:426;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:79132;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[OSPF的分组]]></title>
		<link>https://blog.zhuanjie.ltd/ospf%e7%9a%84%e5%88%86%e7%bb%84/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:17 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/OSPF的分组.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>844</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ospf%e7%9a%84%e5%88%86%e7%bb%84]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/OSPF的分组.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/OSPF的分组.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1738;s:6:"height";i:555;s:4:"file";s:25:"2022/09/OSPF的分组.png";s:8:"filesize";i:265029;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:24:"OSPF的分组-300x96.png";s:5:"width";i:300;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15415;}s:5:"large";a:5:{s:4:"file";s:26:"OSPF的分组-1024x327.png";s:5:"width";i:1024;s:6:"height";i:327;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:122961;}s:9:"thumbnail";a:5:{s:4:"file";s:25:"OSPF的分组-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15087;}s:12:"medium_large";a:5:{s:4:"file";s:25:"OSPF的分组-768x245.png";s:5:"width";i:768;s:6:"height";i:245;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:77432;}s:9:"1536x1536";a:5:{s:4:"file";s:26:"OSPF的分组-1536x490.png";s:5:"width";i:1536;s:6:"height";i:490;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:226592;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[OSPF的区域]]></title>
		<link>https://blog.zhuanjie.ltd/ospf%e7%9a%84%e5%8c%ba%e5%9f%9f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:20 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/OSPF的区域.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>845</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ospf%e7%9a%84%e5%8c%ba%e5%9f%9f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/OSPF的区域.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/OSPF的区域.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1714;s:6:"height";i:795;s:4:"file";s:25:"2022/09/OSPF的区域.png";s:8:"filesize";i:949246;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:25:"OSPF的区域-300x139.png";s:5:"width";i:300;s:6:"height";i:139;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:51285;}s:5:"large";a:5:{s:4:"file";s:26:"OSPF的区域-1024x475.png";s:5:"width";i:1024;s:6:"height";i:475;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:403511;}s:9:"thumbnail";a:5:{s:4:"file";s:25:"OSPF的区域-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30374;}s:12:"medium_large";a:5:{s:4:"file";s:25:"OSPF的区域-768x356.png";s:5:"width";i:768;s:6:"height";i:356;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:250416;}s:9:"1536x1536";a:5:{s:4:"file";s:26:"OSPF的区域-1536x712.png";s:5:"width";i:1536;s:6:"height";i:712;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:773153;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[ppp协议帧格式]]></title>
		<link>https://blog.zhuanjie.ltd/ppp%e5%8d%8f%e8%ae%ae%e5%b8%a7%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:22 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/ppp协议帧格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>846</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ppp%e5%8d%8f%e8%ae%ae%e5%b8%a7%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/ppp协议帧格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/ppp协议帧格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1531;s:6:"height";i:709;s:4:"file";s:30:"2022/09/ppp协议帧格式.png";s:8:"filesize";i:309093;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:30:"ppp协议帧格式-300x139.png";s:5:"width";i:300;s:6:"height";i:139;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:24885;}s:5:"large";a:5:{s:4:"file";s:31:"ppp协议帧格式-1024x474.png";s:5:"width";i:1024;s:6:"height";i:474;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:171663;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"ppp协议帧格式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12958;}s:12:"medium_large";a:5:{s:4:"file";s:30:"ppp协议帧格式-768x356.png";s:5:"width";i:768;s:6:"height";i:356;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:110625;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[RIP报文格式]]></title>
		<link>https://blog.zhuanjie.ltd/rip%e6%8a%a5%e6%96%87%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:24 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/RIP报文格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[rip%e6%8a%a5%e6%96%87%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/RIP报文格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/RIP报文格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:859;s:6:"height";i:473;s:4:"file";s:27:"2022/09/RIP报文格式.png";s:8:"filesize";i:209693;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:27:"RIP报文格式-300x165.png";s:5:"width";i:300;s:6:"height";i:165;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:38076;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"RIP报文格式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19792;}s:12:"medium_large";a:5:{s:4:"file";s:27:"RIP报文格式-768x423.png";s:5:"width";i:768;s:6:"height";i:423;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:177965;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[sdn]]></title>
		<link>https://blog.zhuanjie.ltd/sdn/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:26 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/sdn.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>848</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:26]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sdn]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/sdn.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/sdn.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:565;s:6:"height";i:440;s:4:"file";s:15:"2022/09/sdn.png";s:8:"filesize";i:245537;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:15:"sdn-300x234.png";s:5:"width";i:300;s:6:"height";i:234;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:81142;}s:9:"thumbnail";a:5:{s:4:"file";s:15:"sdn-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:31684;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[sdn控制平面]]></title>
		<link>https://blog.zhuanjie.ltd/sdn%e6%8e%a7%e5%88%b6%e5%b9%b3%e9%9d%a2/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:26 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/sdn控制平面.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>849</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:26]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sdn%e6%8e%a7%e5%88%b6%e5%b9%b3%e9%9d%a2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/sdn控制平面.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/sdn控制平面.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:368;s:6:"height";i:344;s:4:"file";s:27:"2022/09/sdn控制平面.png";s:8:"filesize";i:113348;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:27:"sdn控制平面-300x280.png";s:5:"width";i:300;s:6:"height";i:280;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:77635;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"sdn控制平面-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:26609;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[sdn控制器的三个层次]]></title>
		<link>https://blog.zhuanjie.ltd/sdn%e6%8e%a7%e5%88%b6%e5%99%a8%e7%9a%84%e4%b8%89%e4%b8%aa%e5%b1%82%e6%ac%a1/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:28 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/sdn控制器的三个层次.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:28]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:28]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:28]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sdn%e6%8e%a7%e5%88%b6%e5%99%a8%e7%9a%84%e4%b8%89%e4%b8%aa%e5%b1%82%e6%ac%a1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/sdn控制器的三个层次.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/sdn控制器的三个层次.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:369;s:6:"height";i:411;s:4:"file";s:39:"2022/09/sdn控制器的三个层次.png";s:8:"filesize";i:158012;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:39:"sdn控制器的三个层次-269x300.png";s:5:"width";i:269;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:90545;}s:9:"thumbnail";a:5:{s:4:"file";s:39:"sdn控制器的三个层次-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30635;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[TCPIP协议栈]]></title>
		<link>https://blog.zhuanjie.ltd/tcpip%e5%8d%8f%e8%ae%ae%e6%a0%88/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:31 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/TCPIP协议栈.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>851</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[tcpip%e5%8d%8f%e8%ae%ae%e6%a0%88]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/TCPIP协议栈.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/TCPIP协议栈.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1116;s:6:"height";i:832;s:4:"file";s:26:"2022/09/TCPIP协议栈.png";s:8:"filesize";i:181458;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:26:"TCPIP协议栈-300x224.png";s:5:"width";i:300;s:6:"height";i:224;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:24297;}s:5:"large";a:5:{s:4:"file";s:27:"TCPIP协议栈-1024x763.png";s:5:"width";i:1024;s:6:"height";i:763;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:162704;}s:9:"thumbnail";a:5:{s:4:"file";s:26:"TCPIP协议栈-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10531;}s:12:"medium_large";a:5:{s:4:"file";s:26:"TCPIP协议栈-768x573.png";s:5:"width";i:768;s:6:"height";i:573;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:105492;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[TCP报文]]></title>
		<link>https://blog.zhuanjie.ltd/tcp%e6%8a%a5%e6%96%87/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:33 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/TCP报文.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>852</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:33]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[tcp%e6%8a%a5%e6%96%87]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/TCP报文.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/TCP报文.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1183;s:6:"height";i:769;s:4:"file";s:21:"2022/09/TCP报文.png";s:8:"filesize";i:212158;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:21:"TCP报文-300x195.png";s:5:"width";i:300;s:6:"height";i:195;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:23517;}s:5:"large";a:5:{s:4:"file";s:22:"TCP报文-1024x666.png";s:5:"width";i:1024;s:6:"height";i:666;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:167288;}s:9:"thumbnail";a:5:{s:4:"file";s:21:"TCP报文-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10419;}s:12:"medium_large";a:5:{s:4:"file";s:21:"TCP报文-768x499.png";s:5:"width";i:768;s:6:"height";i:499;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:107808;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[TCP的连接建立]]></title>
		<link>https://blog.zhuanjie.ltd/tcp%e7%9a%84%e8%bf%9e%e6%8e%a5%e5%bb%ba%e7%ab%8b/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:35 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/TCP的连接建立.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>853</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:35]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[tcp%e7%9a%84%e8%bf%9e%e6%8e%a5%e5%bb%ba%e7%ab%8b]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/TCP的连接建立.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/TCP的连接建立.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1039;s:6:"height";i:643;s:4:"file";s:30:"2022/09/TCP的连接建立.png";s:8:"filesize";i:129917;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:30:"TCP的连接建立-300x186.png";s:5:"width";i:300;s:6:"height";i:186;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18515;}s:5:"large";a:5:{s:4:"file";s:31:"TCP的连接建立-1024x634.png";s:5:"width";i:1024;s:6:"height";i:634;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:122864;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"TCP的连接建立-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:9742;}s:12:"medium_large";a:5:{s:4:"file";s:30:"TCP的连接建立-768x475.png";s:5:"width";i:768;s:6:"height";i:475;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:81017;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[TCP的连接释放]]></title>
		<link>https://blog.zhuanjie.ltd/tcp%e7%9a%84%e8%bf%9e%e6%8e%a5%e9%87%8a%e6%94%be/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:36 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/TCP的连接释放.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>854</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:36]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[tcp%e7%9a%84%e8%bf%9e%e6%8e%a5%e9%87%8a%e6%94%be]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/TCP的连接释放.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/TCP的连接释放.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:968;s:6:"height";i:672;s:4:"file";s:30:"2022/09/TCP的连接释放.png";s:8:"filesize";i:198063;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:30:"TCP的连接释放-300x208.png";s:5:"width";i:300;s:6:"height";i:208;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:31596;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"TCP的连接释放-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:14633;}s:12:"medium_large";a:5:{s:4:"file";s:30:"TCP的连接释放-768x533.png";s:5:"width";i:768;s:6:"height";i:533;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:137555;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[UDP首部格式]]></title>
		<link>https://blog.zhuanjie.ltd/udp%e9%a6%96%e9%83%a8%e6%a0%bc%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:37 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/UDP首部格式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>855</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:37]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[udp%e9%a6%96%e9%83%a8%e6%a0%bc%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/UDP首部格式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/UDP首部格式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1534;s:6:"height";i:483;s:4:"file";s:27:"2022/09/UDP首部格式.png";s:8:"filesize";i:114056;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:26:"UDP首部格式-300x94.png";s:5:"width";i:300;s:6:"height";i:94;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:9275;}s:5:"large";a:5:{s:4:"file";s:28:"UDP首部格式-1024x322.png";s:5:"width";i:1024;s:6:"height";i:322;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:62485;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"UDP首部格式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6241;}s:12:"medium_large";a:5:{s:4:"file";s:27:"UDP首部格式-768x242.png";s:5:"width";i:768;s:6:"height";i:242;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:40830;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[UDP数据报]]></title>
		<link>https://blog.zhuanjie.ltd/udp%e6%95%b0%e6%8d%ae%e6%8a%a5/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:39 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/UDP数据报.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[udp%e6%95%b0%e6%8d%ae%e6%8a%a5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/UDP数据报.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/UDP数据报.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1069;s:6:"height";i:574;s:4:"file";s:24:"2022/09/UDP数据报.png";s:8:"filesize";i:150918;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:24:"UDP数据报-300x161.png";s:5:"width";i:300;s:6:"height";i:161;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19641;}s:5:"large";a:5:{s:4:"file";s:25:"UDP数据报-1024x550.png";s:5:"width";i:1024;s:6:"height";i:550;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:135978;}s:9:"thumbnail";a:5:{s:4:"file";s:24:"UDP数据报-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10906;}s:12:"medium_large";a:5:{s:4:"file";s:24:"UDP数据报-768x412.png";s:5:"width";i:768;s:6:"height";i:412;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:89467;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[UDP校验计算]]></title>
		<link>https://blog.zhuanjie.ltd/udp%e6%a0%a1%e9%aa%8c%e8%ae%a1%e7%ae%97/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:41 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/UDP校验计算.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>857</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:41]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[udp%e6%a0%a1%e9%aa%8c%e8%ae%a1%e7%ae%97]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/UDP校验计算.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/UDP校验计算.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1103;s:6:"height";i:697;s:4:"file";s:27:"2022/09/UDP校验计算.png";s:8:"filesize";i:379277;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:27:"UDP校验计算-300x190.png";s:5:"width";i:300;s:6:"height";i:190;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:47183;}s:5:"large";a:5:{s:4:"file";s:28:"UDP校验计算-1024x647.png";s:5:"width";i:1024;s:6:"height";i:647;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:329436;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"UDP校验计算-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:23549;}s:12:"medium_large";a:5:{s:4:"file";s:27:"UDP校验计算-768x485.png";s:5:"width";i:768;s:6:"height";i:485;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:216368;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[编码方式]]></title>
		<link>https://blog.zhuanjie.ltd/%e7%bc%96%e7%a0%81%e6%96%b9%e5%bc%8f/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:42 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/编码方式.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>858</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bc%96%e7%a0%81%e6%96%b9%e5%bc%8f]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/编码方式.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/编码方式.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1302;s:6:"height";i:606;s:4:"file";s:24:"2022/09/编码方式.png";s:8:"filesize";i:128672;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:24:"编码方式-300x140.png";s:5:"width";i:300;s:6:"height";i:140;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15911;}s:5:"large";a:5:{s:4:"file";s:25:"编码方式-1024x477.png";s:5:"width";i:1024;s:6:"height";i:477;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:96677;}s:9:"thumbnail";a:5:{s:4:"file";s:24:"编码方式-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5338;}s:12:"medium_large";a:5:{s:4:"file";s:24:"编码方式-768x357.png";s:5:"width";i:768;s:6:"height";i:357;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:62387;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[并行]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%b9%b6%e8%a1%8c/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:43 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/并行.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>859</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%b9%b6%e8%a1%8c]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/并行.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/并行.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:326;s:6:"height";i:447;s:4:"file";s:18:"2022/09/并行.png";s:8:"filesize";i:68737;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:18:"并行-219x300.png";s:5:"width";i:219;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:42949;}s:9:"thumbnail";a:5:{s:4:"file";s:18:"并行-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19753;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[超文本传输协议]]></title>
		<link>https://blog.zhuanjie.ltd/%e8%b6%85%e6%96%87%e6%9c%ac%e4%bc%a0%e8%be%93%e5%8d%8f%e8%ae%ae/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:44 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/超文本传输协议.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>860</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%b6%85%e6%96%87%e6%9c%ac%e4%bc%a0%e8%be%93%e5%8d%8f%e8%ae%ae]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/超文本传输协议.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/超文本传输协议.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1351;s:6:"height";i:693;s:4:"file";s:33:"2022/09/超文本传输协议.png";s:8:"filesize";i:313627;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:33:"超文本传输协议-300x154.png";s:5:"width";i:300;s:6:"height";i:154;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:29685;}s:5:"large";a:5:{s:4:"file";s:34:"超文本传输协议-1024x525.png";s:5:"width";i:1024;s:6:"height";i:525;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:205638;}s:9:"thumbnail";a:5:{s:4:"file";s:33:"超文本传输协议-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16310;}s:12:"medium_large";a:5:{s:4:"file";s:33:"超文本传输协议-768x394.png";s:5:"width";i:768;s:6:"height";i:394;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:133770;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[持久连接]]></title>
		<link>https://blog.zhuanjie.ltd/%e6%8c%81%e4%b9%85%e8%bf%9e%e6%8e%a5/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:45 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/持久连接.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>861</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%8c%81%e4%b9%85%e8%bf%9e%e6%8e%a5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/持久连接.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/持久连接.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:614;s:6:"height";i:628;s:4:"file";s:24:"2022/09/持久连接.png";s:8:"filesize";i:119595;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:24:"持久连接-293x300.png";s:5:"width";i:293;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:37382;}s:9:"thumbnail";a:5:{s:4:"file";s:24:"持久连接-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12078;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[传播时延对载波监听的影响]]></title>
		<link>https://blog.zhuanjie.ltd/%e4%bc%a0%e6%92%ad%e6%97%b6%e5%bb%b6%e5%af%b9%e8%bd%bd%e6%b3%a2%e7%9b%91%e5%90%ac%e7%9a%84%e5%bd%b1%e5%93%8d/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:47 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/传播时延对载波监听的影响.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>862</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%bc%a0%e6%92%ad%e6%97%b6%e5%bb%b6%e5%af%b9%e8%bd%bd%e6%b3%a2%e7%9b%91%e5%90%ac%e7%9a%84%e5%bd%b1%e5%93%8d]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/传播时延对载波监听的影响.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/传播时延对载波监听的影响.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1159;s:6:"height";i:627;s:4:"file";s:48:"2022/09/传播时延对载波监听的影响.png";s:8:"filesize";i:436976;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:48:"传播时延对载波监听的影响-300x162.png";s:5:"width";i:300;s:6:"height";i:162;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:40103;}s:5:"large";a:5:{s:4:"file";s:49:"传播时延对载波监听的影响-1024x554.png";s:5:"width";i:1024;s:6:"height";i:554;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:333773;}s:9:"thumbnail";a:5:{s:4:"file";s:48:"传播时延对载波监听的影响-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:22218;}s:12:"medium_large";a:5:{s:4:"file";s:48:"传播时延对载波监听的影响-768x415.png";s:5:"width";i:768;s:6:"height";i:415;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:206643;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[传统控制平面]]></title>
		<link>https://blog.zhuanjie.ltd/%e4%bc%a0%e7%bb%9f%e6%8e%a7%e5%88%b6%e5%b9%b3%e9%9d%a2/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:49 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/传统控制平面.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>863</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%bc%a0%e7%bb%9f%e6%8e%a7%e5%88%b6%e5%b9%b3%e9%9d%a2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/传统控制平面.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/传统控制平面.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:581;s:6:"height";i:383;s:4:"file";s:30:"2022/09/传统控制平面.png";s:8:"filesize";i:212594;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:30:"传统控制平面-300x198.png";s:5:"width";i:300;s:6:"height";i:198;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:66057;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"传统控制平面-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30504;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[串行]]></title>
		<link>https://blog.zhuanjie.ltd/%e4%b8%b2%e8%a1%8c/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:49 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/串行.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>864</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:49]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b8%b2%e8%a1%8c]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/串行.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/串行.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:700;s:6:"height";i:147;s:4:"file";s:18:"2022/09/串行.png";s:8:"filesize";i:41037;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:17:"串行-300x63.png";s:5:"width";i:300;s:6:"height";i:63;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15448;}s:9:"thumbnail";a:5:{s:4:"file";s:18:"串行-150x147.png";s:5:"width";i:150;s:6:"height";i:147;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10712;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[递归查询、迭代查询]]></title>
		<link>https://blog.zhuanjie.ltd/%e9%80%92%e5%bd%92%e6%9f%a5%e8%af%a2%e3%80%81%e8%bf%ad%e4%bb%a3%e6%9f%a5%e8%af%a2/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:51 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/递归查询、迭代查询.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%80%92%e5%bd%92%e6%9f%a5%e8%af%a2%e3%80%81%e8%bf%ad%e4%bb%a3%e6%9f%a5%e8%af%a2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/递归查询、迭代查询.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/递归查询、迭代查询.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1776;s:6:"height";i:711;s:4:"file";s:39:"2022/09/递归查询、迭代查询.png";s:8:"filesize";i:543360;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:39:"递归查询、迭代查询-300x120.png";s:5:"width";i:300;s:6:"height";i:120;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:28263;}s:5:"large";a:5:{s:4:"file";s:40:"递归查询、迭代查询-1024x410.png";s:5:"width";i:1024;s:6:"height";i:410;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:229422;}s:9:"thumbnail";a:5:{s:4:"file";s:39:"递归查询、迭代查询-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16199;}s:12:"medium_large";a:5:{s:4:"file";s:39:"递归查询、迭代查询-768x307.png";s:5:"width";i:768;s:6:"height";i:307;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:143662;}s:9:"1536x1536";a:5:{s:4:"file";s:40:"递归查询、迭代查询-1536x615.png";s:5:"width";i:1536;s:6:"height";i:615;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:423950;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[电子邮件系统组成结构]]></title>
		<link>https://blog.zhuanjie.ltd/%e7%94%b5%e5%ad%90%e9%82%ae%e4%bb%b6%e7%b3%bb%e7%bb%9f%e7%bb%84%e6%88%90%e7%bb%93%e6%9e%84/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:53 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/电子邮件系统组成结构.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>866</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%94%b5%e5%ad%90%e9%82%ae%e4%bb%b6%e7%b3%bb%e7%bb%9f%e7%bb%84%e6%88%90%e7%bb%93%e6%9e%84]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/电子邮件系统组成结构.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/电子邮件系统组成结构.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1657;s:6:"height";i:517;s:4:"file";s:42:"2022/09/电子邮件系统组成结构.png";s:8:"filesize";i:343993;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:41:"电子邮件系统组成结构-300x94.png";s:5:"width";i:300;s:6:"height";i:94;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:20762;}s:5:"large";a:5:{s:4:"file";s:43:"电子邮件系统组成结构-1024x319.png";s:5:"width";i:1024;s:6:"height";i:319;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:159342;}s:9:"thumbnail";a:5:{s:4:"file";s:42:"电子邮件系统组成结构-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5386;}s:12:"medium_large";a:5:{s:4:"file";s:42:"电子邮件系统组成结构-768x240.png";s:5:"width";i:768;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:100310;}s:9:"1536x1536";a:5:{s:4:"file";s:43:"电子邮件系统组成结构-1536x479.png";s:5:"width";i:1536;s:6:"height";i:479;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:298592;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[非持久连接]]></title>
		<link>https://blog.zhuanjie.ltd/%e9%9d%9e%e6%8c%81%e4%b9%85%e8%bf%9e%e6%8e%a5/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/非持久连接.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>867</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%9d%9e%e6%8c%81%e4%b9%85%e8%bf%9e%e6%8e%a5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/非持久连接.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/非持久连接.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:751;s:6:"height";i:633;s:4:"file";s:27:"2022/09/非持久连接.png";s:8:"filesize";i:131030;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:27:"非持久连接-300x253.png";s:5:"width";i:300;s:6:"height";i:253;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30930;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"非持久连接-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:11813;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[分类的IP地址]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%88%86%e7%b1%bb%e7%9a%84ip%e5%9c%b0%e5%9d%80/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:56 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/分类的IP地址.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>868</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%88%86%e7%b1%bb%e7%9a%84ip%e5%9c%b0%e5%9d%80]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/分类的IP地址.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/分类的IP地址.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1455;s:6:"height";i:671;s:4:"file";s:29:"2022/09/分类的IP地址.png";s:8:"filesize";i:188939;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:29:"分类的IP地址-300x138.png";s:5:"width";i:300;s:6:"height";i:138;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:17508;}s:5:"large";a:5:{s:4:"file";s:30:"分类的IP地址-1024x472.png";s:5:"width";i:1024;s:6:"height";i:472;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:112248;}s:9:"thumbnail";a:5:{s:4:"file";s:29:"分类的IP地址-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8075;}s:12:"medium_large";a:5:{s:4:"file";s:29:"分类的IP地址-768x354.png";s:5:"width";i:768;s:6:"height";i:354;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:72983;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[基于万维网的电子邮件]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%9f%ba%e4%ba%8e%e4%b8%87%e7%bb%b4%e7%bd%91%e7%9a%84%e7%94%b5%e5%ad%90%e9%82%ae%e4%bb%b6/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:58 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/基于万维网的电子邮件.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>869</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9f%ba%e4%ba%8e%e4%b8%87%e7%bb%b4%e7%bd%91%e7%9a%84%e7%94%b5%e5%ad%90%e9%82%ae%e4%bb%b6]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/基于万维网的电子邮件.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/基于万维网的电子邮件.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1301;s:6:"height";i:439;s:4:"file";s:42:"2022/09/基于万维网的电子邮件.png";s:8:"filesize";i:320455;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:42:"基于万维网的电子邮件-300x101.png";s:5:"width";i:300;s:6:"height";i:101;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30831;}s:5:"large";a:5:{s:4:"file";s:43:"基于万维网的电子邮件-1024x346.png";s:5:"width";i:1024;s:6:"height";i:346;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:218803;}s:9:"thumbnail";a:5:{s:4:"file";s:42:"基于万维网的电子邮件-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18131;}s:12:"medium_large";a:5:{s:4:"file";s:42:"基于万维网的电子邮件-768x259.png";s:5:"width";i:768;s:6:"height";i:259;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:139906;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[快重传和快恢复]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%bf%ab%e9%87%8d%e4%bc%a0%e5%92%8c%e5%bf%ab%e6%81%a2%e5%a4%8d/</link>
		<pubDate>Tue, 20 Sep 2022 09:43:59 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/快重传和快恢复.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>870</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:43:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:43:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:43:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:43:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%bf%ab%e9%87%8d%e4%bc%a0%e5%92%8c%e5%bf%ab%e6%81%a2%e5%a4%8d]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/快重传和快恢复.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/快重传和快恢复.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1381;s:6:"height";i:528;s:4:"file";s:33:"2022/09/快重传和快恢复.png";s:8:"filesize";i:289726;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:33:"快重传和快恢复-300x115.png";s:5:"width";i:300;s:6:"height";i:115;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:26107;}s:5:"large";a:5:{s:4:"file";s:34:"快重传和快恢复-1024x392.png";s:5:"width";i:1024;s:6:"height";i:392;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:182802;}s:9:"thumbnail";a:5:{s:4:"file";s:33:"快重传和快恢复-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16572;}s:12:"medium_large";a:5:{s:4:"file";s:33:"快重传和快恢复-768x294.png";s:5:"width";i:768;s:6:"height";i:294;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:117181;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[路由表]]></title>
		<link>https://blog.zhuanjie.ltd/%e8%b7%af%e7%94%b1%e8%a1%a8/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/路由表.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>871</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%b7%af%e7%94%b1%e8%a1%a8]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/路由表.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/路由表.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:772;s:6:"height";i:193;s:4:"file";s:21:"2022/09/路由表.png";s:8:"filesize";i:60339;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:20:"路由表-300x75.png";s:5:"width";i:300;s:6:"height";i:75;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12572;}s:9:"thumbnail";a:5:{s:4:"file";s:21:"路由表-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:12964;}s:12:"medium_large";a:5:{s:4:"file";s:21:"路由表-768x192.png";s:5:"width";i:768;s:6:"height";i:192;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:59454;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[路由器]]></title>
		<link>https://blog.zhuanjie.ltd/%e8%b7%af%e7%94%b1%e5%99%a8/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:04 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/路由器.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>872</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%b7%af%e7%94%b1%e5%99%a8]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/路由器.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/路由器.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1397;s:6:"height";i:757;s:4:"file";s:21:"2022/09/路由器.png";s:8:"filesize";i:582614;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:21:"路由器-300x163.png";s:5:"width";i:300;s:6:"height";i:163;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:46617;}s:5:"large";a:5:{s:4:"file";s:22:"路由器-1024x555.png";s:5:"width";i:1024;s:6:"height";i:555;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:352734;}s:9:"thumbnail";a:5:{s:4:"file";s:21:"路由器-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:21531;}s:12:"medium_large";a:5:{s:4:"file";s:21:"路由器-768x416.png";s:5:"width";i:768;s:6:"height";i:416;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:222383;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[慢开始和拥塞避免]]></title>
		<link>https://blog.zhuanjie.ltd/%e6%85%a2%e5%bc%80%e5%a7%8b%e5%92%8c%e6%8b%a5%e5%a1%9e%e9%81%bf%e5%85%8d/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:06 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/慢开始和拥塞避免.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>873</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:06]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:06]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:06]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%85%a2%e5%bc%80%e5%a7%8b%e5%92%8c%e6%8b%a5%e5%a1%9e%e9%81%bf%e5%85%8d]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/慢开始和拥塞避免.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/慢开始和拥塞避免.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1373;s:6:"height";i:564;s:4:"file";s:36:"2022/09/慢开始和拥塞避免.png";s:8:"filesize";i:234008;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:36:"慢开始和拥塞避免-300x123.png";s:5:"width";i:300;s:6:"height";i:123;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:20252;}s:5:"large";a:5:{s:4:"file";s:37:"慢开始和拥塞避免-1024x421.png";s:5:"width";i:1024;s:6:"height";i:421;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:146542;}s:9:"thumbnail";a:5:{s:4:"file";s:36:"慢开始和拥塞避免-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13900;}s:12:"medium_large";a:5:{s:4:"file";s:36:"慢开始和拥塞避免-768x315.png";s:5:"width";i:768;s:6:"height";i:315;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:93308;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[频分多路复用]]></title>
		<link>https://blog.zhuanjie.ltd/%e9%a2%91%e5%88%86%e5%a4%9a%e8%b7%af%e5%a4%8d%e7%94%a8/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:07 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/频分多路复用.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>874</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:07]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%a2%91%e5%88%86%e5%a4%9a%e8%b7%af%e5%a4%8d%e7%94%a8]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/频分多路复用.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/频分多路复用.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:915;s:6:"height";i:523;s:4:"file";s:30:"2022/09/频分多路复用.png";s:8:"filesize";i:60369;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:30:"频分多路复用-300x171.png";s:5:"width";i:300;s:6:"height";i:171;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:11571;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"频分多路复用-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5156;}s:12:"medium_large";a:5:{s:4:"file";s:30:"频分多路复用-768x439.png";s:5:"width";i:768;s:6:"height";i:439;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:50318;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[时分多路复用]]></title>
		<link>https://blog.zhuanjie.ltd/%e6%97%b6%e5%88%86%e5%a4%9a%e8%b7%af%e5%a4%8d%e7%94%a8/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:08 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/时分多路复用.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>875</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%97%b6%e5%88%86%e5%a4%9a%e8%b7%af%e5%a4%8d%e7%94%a8]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/时分多路复用.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/时分多路复用.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:938;s:6:"height";i:602;s:4:"file";s:30:"2022/09/时分多路复用.png";s:8:"filesize";i:174557;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:30:"时分多路复用-300x193.png";s:5:"width";i:300;s:6:"height";i:193;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30798;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"时分多路复用-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:14405;}s:12:"medium_large";a:5:{s:4:"file";s:30:"时分多路复用-768x493.png";s:5:"width";i:768;s:6:"height";i:493;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:132283;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[输出端口将交换结构传送来的分组发送到线路]]></title>
		<link>https://blog.zhuanjie.ltd/%e8%be%93%e5%87%ba%e7%ab%af%e5%8f%a3%e5%b0%86%e4%ba%a4%e6%8d%a2%e7%bb%93%e6%9e%84%e4%bc%a0%e9%80%81%e6%9d%a5%e7%9a%84%e5%88%86%e7%bb%84%e5%8f%91%e9%80%81%e5%88%b0%e7%ba%bf%e8%b7%af/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:10 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/输出端口将交换结构传送来的分组发送到线路.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>876</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%be%93%e5%87%ba%e7%ab%af%e5%8f%a3%e5%b0%86%e4%ba%a4%e6%8d%a2%e7%bb%93%e6%9e%84%e4%bc%a0%e9%80%81%e6%9d%a5%e7%9a%84%e5%88%86%e7%bb%84%e5%8f%91%e9%80%81%e5%88%b0%e7%ba%bf%e8%b7%af]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/输出端口将交换结构传送来的分组发送到线路.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/输出端口将交换结构传送来的分组发送到线路.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1316;s:6:"height";i:529;s:4:"file";s:72:"2022/09/输出端口将交换结构传送来的分组发送到线路.png";s:8:"filesize";i:296100;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:72:"输出端口将交换结构传送来的分组发送到线路-300x121.png";s:5:"width";i:300;s:6:"height";i:121;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:26429;}s:5:"large";a:5:{s:4:"file";s:73:"输出端口将交换结构传送来的分组发送到线路-1024x412.png";s:5:"width";i:1024;s:6:"height";i:412;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:199554;}s:9:"thumbnail";a:5:{s:4:"file";s:72:"输出端口将交换结构传送来的分组发送到线路-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16583;}s:12:"medium_large";a:5:{s:4:"file";s:72:"输出端口将交换结构传送来的分组发送到线路-768x309.png";s:5:"width";i:768;s:6:"height";i:309;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:126626;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[输入端口对线路上收到的分组处理]]></title>
		<link>https://blog.zhuanjie.ltd/%e8%be%93%e5%85%a5%e7%ab%af%e5%8f%a3%e5%af%b9%e7%ba%bf%e8%b7%af%e4%b8%8a%e6%94%b6%e5%88%b0%e7%9a%84%e5%88%86%e7%bb%84%e5%a4%84%e7%90%86/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:12 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/输入端口对线路上收到的分组处理.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>877</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:12]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:12]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:12]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%be%93%e5%85%a5%e7%ab%af%e5%8f%a3%e5%af%b9%e7%ba%bf%e8%b7%af%e4%b8%8a%e6%94%b6%e5%88%b0%e7%9a%84%e5%88%86%e7%bb%84%e5%a4%84%e7%90%86]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/输入端口对线路上收到的分组处理.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/输入端口对线路上收到的分组处理.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1234;s:6:"height";i:522;s:4:"file";s:57:"2022/09/输入端口对线路上收到的分组处理.png";s:8:"filesize";i:281456;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:57:"输入端口对线路上收到的分组处理-300x127.png";s:5:"width";i:300;s:6:"height";i:127;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:27626;}s:5:"large";a:5:{s:4:"file";s:58:"输入端口对线路上收到的分组处理-1024x433.png";s:5:"width";i:1024;s:6:"height";i:433;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:208451;}s:9:"thumbnail";a:5:{s:4:"file";s:57:"输入端口对线路上收到的分组处理-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15771;}s:12:"medium_large";a:5:{s:4:"file";s:57:"输入端口对线路上收到的分组处理-768x325.png";s:5:"width";i:768;s:6:"height";i:325;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:131625;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[熟知端口号]]></title>
		<link>https://blog.zhuanjie.ltd/%e7%86%9f%e7%9f%a5%e7%ab%af%e5%8f%a3%e5%8f%b7/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:13 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/熟知端口号.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>878</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%86%9f%e7%9f%a5%e7%ab%af%e5%8f%a3%e5%8f%b7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/熟知端口号.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/熟知端口号.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1021;s:6:"height";i:141;s:4:"file";s:27:"2022/09/熟知端口号.png";s:8:"filesize";i:59383;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:26:"熟知端口号-300x41.png";s:5:"width";i:300;s:6:"height";i:41;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8250;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"熟知端口号-150x141.png";s:5:"width";i:150;s:6:"height";i:141;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10523;}s:12:"medium_large";a:5:{s:4:"file";s:27:"熟知端口号-768x106.png";s:5:"width";i:768;s:6:"height";i:106;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:37754;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[特殊IP地址]]></title>
		<link>https://blog.zhuanjie.ltd/%e7%89%b9%e6%ae%8aip%e5%9c%b0%e5%9d%80/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:16 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/特殊IP地址.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>879</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%89%b9%e6%ae%8aip%e5%9c%b0%e5%9d%80]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/特殊IP地址.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/特殊IP地址.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1699;s:6:"height";i:838;s:4:"file";s:26:"2022/09/特殊IP地址.png";s:8:"filesize";i:615515;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:26:"特殊IP地址-300x148.png";s:5:"width";i:300;s:6:"height";i:148;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:35579;}s:5:"large";a:5:{s:4:"file";s:27:"特殊IP地址-1024x505.png";s:5:"width";i:1024;s:6:"height";i:505;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:273275;}s:9:"thumbnail";a:5:{s:4:"file";s:26:"特殊IP地址-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19786;}s:12:"medium_large";a:5:{s:4:"file";s:26:"特殊IP地址-768x379.png";s:5:"width";i:768;s:6:"height";i:379;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:171473;}s:9:"1536x1536";a:5:{s:4:"file";s:27:"特殊IP地址-1536x758.png";s:5:"width";i:1536;s:6:"height";i:758;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:519139;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[网络层两大平面]]></title>
		<link>https://blog.zhuanjie.ltd/%e7%bd%91%e7%bb%9c%e5%b1%82%e4%b8%a4%e5%a4%a7%e5%b9%b3%e9%9d%a2/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:18 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/网络层两大平面.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>880</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:18]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:18]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:18]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bd%91%e7%bb%9c%e5%b1%82%e4%b8%a4%e5%a4%a7%e5%b9%b3%e9%9d%a2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/网络层两大平面.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/网络层两大平面.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1781;s:6:"height";i:614;s:4:"file";s:33:"2022/09/网络层两大平面.png";s:8:"filesize";i:166638;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:33:"网络层两大平面-300x103.png";s:5:"width";i:300;s:6:"height";i:103;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:11254;}s:5:"large";a:5:{s:4:"file";s:34:"网络层两大平面-1024x353.png";s:5:"width";i:1024;s:6:"height";i:353;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:80767;}s:9:"thumbnail";a:5:{s:4:"file";s:33:"网络层两大平面-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8549;}s:12:"medium_large";a:5:{s:4:"file";s:33:"网络层两大平面-768x265.png";s:5:"width";i:768;s:6:"height";i:265;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:51818;}s:9:"1536x1536";a:5:{s:4:"file";s:34:"网络层两大平面-1536x530.png";s:5:"width";i:1536;s:6:"height";i:530;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:150245;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[循环冗余码计算]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%be%aa%e7%8e%af%e5%86%97%e4%bd%99%e7%a0%81%e8%ae%a1%e7%ae%97/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:19 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/循环冗余码计算.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>881</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%be%aa%e7%8e%af%e5%86%97%e4%bd%99%e7%a0%81%e8%ae%a1%e7%ae%97]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/循环冗余码计算.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/循环冗余码计算.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:650;s:6:"height";i:593;s:4:"file";s:33:"2022/09/循环冗余码计算.png";s:8:"filesize";i:140530;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:33:"循环冗余码计算-300x274.png";s:5:"width";i:300;s:6:"height";i:274;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:45669;}s:9:"thumbnail";a:5:{s:4:"file";s:33:"循环冗余码计算-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16872;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[移动IP图示]]></title>
		<link>https://blog.zhuanjie.ltd/%e7%a7%bb%e5%8a%a8ip%e5%9b%be%e7%a4%ba/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:20 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/移动IP图示.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>882</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%a7%bb%e5%8a%a8ip%e5%9b%be%e7%a4%ba]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/移动IP图示.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/移动IP图示.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1060;s:6:"height";i:212;s:4:"file";s:26:"2022/09/移动IP图示.png";s:8:"filesize";i:121456;s:5:"sizes";a:4:{s:6:"medium";a:5:{s:4:"file";s:25:"移动IP图示-300x60.png";s:5:"width";i:300;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15008;}s:5:"large";a:5:{s:4:"file";s:27:"移动IP图示-1024x205.png";s:5:"width";i:1024;s:6:"height";i:205;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:112923;}s:9:"thumbnail";a:5:{s:4:"file";s:26:"移动IP图示-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:13457;}s:12:"medium_large";a:5:{s:4:"file";s:26:"移动IP图示-768x154.png";s:5:"width";i:768;s:6:"height";i:154;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:71884;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[以太网帧结构]]></title>
		<link>https://blog.zhuanjie.ltd/%e4%bb%a5%e5%a4%aa%e7%bd%91%e5%b8%a7%e7%bb%93%e6%9e%84/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:22 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/以太网帧结构.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>883</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%bb%a5%e5%a4%aa%e7%bd%91%e5%b8%a7%e7%bb%93%e6%9e%84]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/以太网帧结构.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/以太网帧结构.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:820;s:6:"height";i:360;s:4:"file";s:30:"2022/09/以太网帧结构.png";s:8:"filesize";i:211751;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:30:"以太网帧结构-300x132.png";s:5:"width";i:300;s:6:"height";i:132;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:35827;}s:9:"thumbnail";a:5:{s:4:"file";s:30:"以太网帧结构-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19310;}s:12:"medium_large";a:5:{s:4:"file";s:30:"以太网帧结构-768x337.png";s:5:"width";i:768;s:6:"height";i:337;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:163830;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[隐私政策]]></title>
		<link>https://blog.zhuanjie.ltd/?page_id=3</link>
		<pubDate>Mon, 05 Dec 2022 07:34:56 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?page_id=3</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading --><h2>我们是谁</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>我们的站点地址是：http://50.93.205.205。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>评论</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>当访客留下评论时，我们会收集评论表单所显示的数据，和访客的IP地址及浏览器的user agent字符串来帮助检查垃圾评论。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>由您的电子邮箱地址所生成的匿名化字符串（又称为哈希）可能会被提供给Gravatar服务确认您是否有使用该服务。Gravatar服务的隐私政策在此：https://automattic.com/privacy/。在您的评论获批准后，您的资料图片将在您的评论旁公开展示。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>媒体</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>如果您向此网站上传图片，您应当避免上传那些有嵌入地理位置信息（EXIF GPS）的图片。此网站的访客将可以下载并提取此网站的图片中的位置信息。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Cookies</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>如果您在我们的站点上留下评论，您可以选择用cookies保存您的名字、电子邮箱地址和网站地址。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些cookies会保留一年。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>如果您访问我们的登录页，我们会设置一个临时的cookie来确认您的浏览器是否接受cookies。此cookie不包含个人数据，且会在您关闭浏览器时被丢弃。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>当您登录时，我们也会设置多个cookies来保存您的登录信息及屏幕显示选项。登录cookies会保留两天，而屏幕显示选项cookies会保留一年。如果您选择了“记住我”，您的登录状态则会保留两周。如果您注销登陆了您的账户，用于登录的cookies将会被移除。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>如果您编辑或发布文章，我们会在您的浏览器中保存一个额外的cookie。这个cookie不包含个人数据而只记录了您刚才编辑的文章的ID。这个cookie会保留一天。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>来自其他网站的嵌入内容</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>此站点上的文章可能会包含嵌入的内容（如视频、图片、文章等）。来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>这些站点可能会收集关于您的数据、使用cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>我们与谁共享您的信息</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>若您请求重置密码，您的IP地址将包含于密码重置邮件中。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>我们保留多久您的信息</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>如果您留下评论，评论和其元数据将被无限期保存。我们这样做以便能识别并自动批准任何后续评论，而不用将这些后续评论加入待审队列。</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>对于本网站的注册用户，我们也会保存用户在个人资料中提供的个人信息。所有用户可以在任何时候查看、编辑或删除他们的个人信息（除了不能变更用户名外）、站点管理员也可以查看及编辑那些信息。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>您对您的信息有什么权利</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>如果您有此站点的账户，或曾经留下评论，您可以请求我们提供我们所拥有的您的个人数据的导出文件，这也包括了所有您提供给我们的数据。您也可以要求我们抹除所有关于您的个人数据。这不包括我们因管理、法规或安全需要而必须保留的数据。</p><!-- /wp:paragraph --><!-- wp:heading --><h2>您的数据将发送到何处</h2><!-- /wp:heading --><!-- wp:paragraph --><p><strong class="privacy-policy-tutorial">推荐的文本： </strong>访客评论可能会被自动垃圾评论监测服务检查。</p><!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date><![CDATA[2022-12-05 15:34:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:34:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-05 15:34:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-05 07:34:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[privacy-policy]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[CV]]></title>
		<link>https://blog.zhuanjie.ltd/?page_id=417</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?page_id=417</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date><![CDATA[2022-01-15 02:15:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-01-15 02:15:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title><![CDATA[域名]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%9f%9f%e5%90%8d/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:23 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/域名.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>884</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%9f%9f%e5%90%8d]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/域名.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/域名.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:995;s:6:"height";i:673;s:4:"file";s:18:"2022/09/域名.png";s:8:"filesize";i:157050;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:18:"域名-300x203.png";s:5:"width";i:300;s:6:"height";i:203;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:23950;}s:9:"thumbnail";a:5:{s:4:"file";s:18:"域名-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10369;}s:12:"medium_large";a:5:{s:4:"file";s:18:"域名-768x519.png";s:5:"width";i:768;s:6:"height";i:519;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:105001;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[子网划分]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%ad%90%e7%bd%91%e5%88%92%e5%88%86/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:24 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/子网划分.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>885</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ad%90%e7%bd%91%e5%88%92%e5%88%86]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/子网划分.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/子网划分.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:692;s:6:"height";i:315;s:4:"file";s:24:"2022/09/子网划分.png";s:8:"filesize";i:52113;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:24:"子网划分-300x137.png";s:5:"width";i:300;s:6:"height";i:137;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:14131;}s:9:"thumbnail";a:5:{s:4:"file";s:24:"子网划分-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7524;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[字符计数法]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%ad%97%e7%ac%a6%e8%ae%a1%e6%95%b0%e6%b3%95/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:25 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/字符计数法.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>886</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ad%97%e7%ac%a6%e8%ae%a1%e6%95%b0%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/字符计数法.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/字符计数法.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:634;s:6:"height";i:99;s:4:"file";s:27:"2022/09/字符计数法.png";s:8:"filesize";i:5262;s:5:"sizes";a:2:{s:6:"medium";a:5:{s:4:"file";s:26:"字符计数法-300x47.png";s:5:"width";i:300;s:6:"height";i:47;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4664;}s:9:"thumbnail";a:5:{s:4:"file";s:26:"字符计数法-150x99.png";s:5:"width";i:150;s:6:"height";i:99;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:1517;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[字节填充法]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%ad%97%e8%8a%82%e5%a1%ab%e5%85%85%e6%b3%95/</link>
		<pubDate>Tue, 20 Sep 2022 09:44:27 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/wp-content/uploads/2022/09/字节填充法.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>887</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:44:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:44:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:44:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:44:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ad%97%e8%8a%82%e5%a1%ab%e5%85%85%e6%b3%95]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/09/字节填充法.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/09/字节填充法.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1560;s:6:"height";i:677;s:4:"file";s:27:"2022/09/字节填充法.png";s:8:"filesize";i:366387;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:27:"字节填充法-300x130.png";s:5:"width";i:300;s:6:"height";i:130;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19083;}s:5:"large";a:5:{s:4:"file";s:28:"字节填充法-1024x444.png";s:5:"width";i:1024;s:6:"height";i:444;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:152008;}s:9:"thumbnail";a:5:{s:4:"file";s:27:"字节填充法-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:9990;}s:12:"medium_large";a:5:{s:4:"file";s:27:"字节填充法-768x333.png";s:5:"width";i:768;s:6:"height";i:333;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:94664;}s:9:"1536x1536";a:5:{s:4:"file";s:28:"字节填充法-1536x667.png";s:5:"width";i:1536;s:6:"height";i:667;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:292821;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[个人主页]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/05/%e4%b8%aa%e4%ba%ba%e4%b8%bb%e9%a1%b5/</link>
		<pubDate>Mon, 05 Dec 2022 07:47:42 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?p=889</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>889</wp:post_id>
		<wp:post_date><![CDATA[2022-12-05 15:47:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:47:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-05 15:47:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-05 07:47:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b8%aa%e4%ba%ba%e4%b8%bb%e9%a1%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e6%9b%b4%e5%a4%9a"><![CDATA[更多]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[889]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://startpage.zhuanjie.ltd/]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[网盘]]></title>
		<link>https://blog.zhuanjie.ltd/2023/01/02/%e7%bd%91%e7%9b%98/</link>
		<pubDate>Mon, 05 Dec 2022 07:47:42 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?p=890</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>890</wp:post_id>
		<wp:post_date><![CDATA[2023-01-02 13:16:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:47:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-01-02 13:16:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-01-02 05:16:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bd%91%e7%9b%98]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e6%9b%b4%e5%a4%9a"><![CDATA[更多]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[890]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://cloudreve.zhuanjie.ltd/]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022-12-05]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[博客首页]]></title>
		<link>https://blog.zhuanjie.ltd/2023/01/02/%e5%8d%9a%e5%ae%a2%e9%a6%96%e9%a1%b5/</link>
		<pubDate>Mon, 05 Dec 2022 07:47:42 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?p=892</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>892</wp:post_id>
		<wp:post_date><![CDATA[2023-01-02 13:16:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:47:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-01-02 13:16:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-01-02 05:16:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%8d%9a%e5%ae%a2%e9%a6%96%e9%a1%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e6%9b%b4%e5%a4%9a"><![CDATA[更多]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[892]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://blog.zhuanjie.ltd/]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022-12-05]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[服务器推广（雨云服务器）]]></title>
		<link>https://blog.zhuanjie.ltd/2023/01/02/%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%8e%a8%e5%b9%bf%ef%bc%88%e9%9b%a8%e4%ba%91%e6%9c%8d%e5%8a%a1%e5%99%a8%ef%bc%89/</link>
		<pubDate>Mon, 05 Dec 2022 07:47:42 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?p=893</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>893</wp:post_id>
		<wp:post_date><![CDATA[2023-01-02 13:16:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:47:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-01-02 13:16:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-01-02 05:16:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%8e%a8%e5%b9%bf%ef%bc%88%e9%9b%a8%e4%ba%91%e6%9c%8d%e5%8a%a1%e5%99%a8%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e6%9b%b4%e5%a4%9a"><![CDATA[更多]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[1023]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[893]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.rainyun.com?ref=MjU2NjA=]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022-12-05]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022-12-09]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[]]></title>
		<link>https://blog.zhuanjie.ltd/2023/01/02/1013/</link>
		<pubDate>Mon, 05 Dec 2022 07:47:45 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?p=1013</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1013</wp:post_id>
		<wp:post_date><![CDATA[2023-01-02 13:16:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:47:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-01-02 13:16:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-01-02 05:16:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[1013]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e6%9b%b4%e5%a4%9a"><![CDATA[更多]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[207]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022-12-05]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[服务器监控]]></title>
		<link>https://blog.zhuanjie.ltd/2023/02/01/%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%9b%91%e6%8e%a7/</link>
		<pubDate>Mon, 05 Dec 2022 15:51:34 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/2022/12/05/%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%9b%91%e6%8e%a7/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1023</wp:post_id>
		<wp:post_date><![CDATA[2023-02-01 18:22:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 15:51:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-02-01 18:22:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-02-01 10:22:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%9b%91%e6%8e%a7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e6%9b%b4%e5%a4%9a"><![CDATA[更多]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[1023]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://dash.randallanjie.uk/]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022-12-05]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022-12-09]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2023-01-02]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/09/ubuntu%e5%bc%80%e5%90%afcrontab%e6%89%a7%e8%a1%8c%e6%97%a5%e5%bf%97/image-21/</link>
		<pubDate>Fri, 09 Dec 2022 07:38:46 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1028</wp:post_id>
		<wp:post_date><![CDATA[2022-12-09 15:38:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-09 07:38:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-09 15:38:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-09 07:38:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-21]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1027</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/image.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1470;s:6:"height";i:143;s:4:"file";s:17:"2022/12/image.png";s:8:"filesize";i:48438;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:16:"image-300x29.png";s:5:"width";i:300;s:6:"height";i:29;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6866;}s:5:"large";a:5:{s:4:"file";s:18:"image-1024x100.png";s:5:"width";i:1024;s:6:"height";i:100;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:47598;}s:9:"thumbnail";a:5:{s:4:"file";s:17:"image-150x143.png";s:5:"width";i:150;s:6:"height";i:143;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5077;}s:12:"medium_large";a:5:{s:4:"file";s:16:"image-768x75.png";s:5:"width";i:768;s:6:"height";i:75;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:31287;}s:14:"post-thumbnail";a:5:{s:4:"file";s:17:"image-150x143.png";s:5:"width";i:150;s:6:"height";i:143;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:5077;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-1]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/09/%e5%8a%a8%e6%80%81ip%e9%85%8d%e7%bd%ae%e9%98%bf%e9%87%8c%e4%ba%91ddns/image-1-3/</link>
		<pubDate>Fri, 09 Dec 2022 07:53:04 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1033</wp:post_id>
		<wp:post_date><![CDATA[2022-12-09 15:53:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-09 07:53:04]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-09 15:53:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-09 07:53:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1032</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/image-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1049;s:6:"height";i:471;s:4:"file";s:19:"2022/12/image-1.png";s:8:"filesize";i:41632;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:19:"image-1-300x135.png";s:5:"width";i:300;s:6:"height";i:135;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:14355;}s:5:"large";a:5:{s:4:"file";s:20:"image-1-1024x460.png";s:5:"width";i:1024;s:6:"height";i:460;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:93270;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7405;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-1-768x345.png";s:5:"width";i:768;s:6:"height";i:345;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:62417;}s:14:"post-thumbnail";a:5:{s:4:"file";s:19:"image-1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7405;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[image-2]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/09/ubuntu%e4%b8%8bx-ui%e9%9d%a2%e6%9d%bf%e6%90%ad%e5%bb%ba/image-2-3/</link>
		<pubDate>Fri, 09 Dec 2022 08:43:59 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1045</wp:post_id>
		<wp:post_date><![CDATA[2022-12-09 16:43:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-09 08:43:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-09 16:43:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-09 08:43:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-2-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1044</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image-2.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/image-2.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1857;s:6:"height";i:696;s:4:"file";s:19:"2022/12/image-2.png";s:8:"filesize";i:56778;s:5:"sizes";a:6:{s:6:"medium";a:5:{s:4:"file";s:19:"image-2-300x112.png";s:5:"width";i:300;s:6:"height";i:112;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:7539;}s:5:"large";a:5:{s:4:"file";s:20:"image-2-1024x384.png";s:5:"width";i:1024;s:6:"height";i:384;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:46094;}s:9:"thumbnail";a:5:{s:4:"file";s:19:"image-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4810;}s:12:"medium_large";a:5:{s:4:"file";s:19:"image-2-768x288.png";s:5:"width";i:768;s:6:"height";i:288;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:30061;}s:9:"1536x1536";a:5:{s:4:"file";s:20:"image-2-1536x576.png";s:5:"width";i:1536;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:80316;}s:14:"post-thumbnail";a:5:{s:4:"file";s:19:"image-2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4810;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/26/%e6%b5%85%e8%af%bb%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba-3-1%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7/ahr0cdovl2ltzy5ibg9nlmnzzg4ubmv0lziwmtyxmti2mtc0nje0mje4/</link>
		<pubDate>Mon, 26 Dec 2022 07:10:01 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1067</wp:post_id>
		<wp:post_date><![CDATA[2022-12-26 15:10:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-26 07:10:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-26 15:10:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-26 07:10:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ahr0cdovl2ltzy5ibg9nlmnzzg4ubmv0lziwmtyxmti2mtc0nje0mje4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1063;s:6:"height";i:340;s:4:"file";s:68:"2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4.png";s:8:"filesize";i:143909;s:5:"sizes";a:5:{s:6:"medium";a:5:{s:4:"file";s:67:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4-300x96.png";s:5:"width";i:300;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:15298;}s:5:"large";a:5:{s:4:"file";s:69:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4-1024x328.png";s:5:"width";i:1024;s:6:"height";i:328;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:117088;}s:9:"thumbnail";a:5:{s:4:"file";s:68:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10831;}s:12:"medium_large";a:5:{s:4:"file";s:68:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4-768x246.png";s:5:"width";i:768;s:6:"height";i:246;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:72750;}s:14:"post-thumbnail";a:5:{s:4:"file";s:68:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:10831;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/26/%e6%b5%85%e8%af%bb%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba-3-1%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7/ahr0cdovl2ltzy5ibg9nlmnzzg4ubmv0lziwmtyxmti2mje0otm0ntk4/</link>
		<pubDate>Mon, 26 Dec 2022 07:23:54 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1070</wp:post_id>
		<wp:post_date><![CDATA[2022-12-26 15:23:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-26 07:23:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-26 15:23:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-26 07:23:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ahr0cdovl2ltzy5ibg9nlmnzzg4ubmv0lziwmtyxmti2mje0otm0ntk4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:604;s:6:"height";i:305;s:4:"file";s:68:"2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4.png";s:8:"filesize";i:10978;s:5:"sizes";a:3:{s:6:"medium";a:5:{s:4:"file";s:68:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4-300x151.png";s:5:"width";i:300;s:6:"height";i:151;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:16067;}s:9:"thumbnail";a:5:{s:4:"file";s:68:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8804;}s:14:"post-thumbnail";a:5:{s:4:"file";s:68:"aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8804;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MommyTalk1672044088366]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/26/%e6%b5%85%e8%af%bb%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba-3-1%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7/mommytalk1672044088366/</link>
		<pubDate>Mon, 26 Dec 2022 08:41:38 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044088366.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1076</wp:post_id>
		<wp:post_date><![CDATA[2022-12-26 16:41:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-26 08:41:38]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-26 16:41:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-26 08:41:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mommytalk1672044088366]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044088366.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/MommyTalk1672044088366.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:3821;s:6:"height";i:2225;s:4:"file";s:34:"2022/12/MommyTalk1672044088366.png";s:8:"filesize";i:334686;s:5:"sizes";a:7:{s:6:"medium";a:5:{s:4:"file";s:34:"MommyTalk1672044088366-300x175.png";s:5:"width";i:300;s:6:"height";i:175;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:8692;}s:5:"large";a:5:{s:4:"file";s:35:"MommyTalk1672044088366-1024x596.png";s:5:"width";i:1024;s:6:"height";i:596;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:36635;}s:9:"thumbnail";a:5:{s:4:"file";s:34:"MommyTalk1672044088366-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4660;}s:12:"medium_large";a:5:{s:4:"file";s:34:"MommyTalk1672044088366-768x447.png";s:5:"width";i:768;s:6:"height";i:447;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:25855;}s:9:"1536x1536";a:5:{s:4:"file";s:35:"MommyTalk1672044088366-1536x894.png";s:5:"width";i:1536;s:6:"height";i:894;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:60705;}s:9:"2048x2048";a:5:{s:4:"file";s:36:"MommyTalk1672044088366-2048x1193.png";s:5:"width";i:2048;s:6:"height";i:1193;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:90478;}s:14:"post-thumbnail";a:5:{s:4:"file";s:34:"MommyTalk1672044088366-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4660;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MommyTalk1672044474587]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/26/%e6%b5%85%e8%af%bb%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba-3-1%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7/mommytalk1672044474587/</link>
		<pubDate>Mon, 26 Dec 2022 08:48:21 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044474587.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1077</wp:post_id>
		<wp:post_date><![CDATA[2022-12-26 16:48:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-26 08:48:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-26 16:48:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-26 08:48:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mommytalk1672044474587]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044474587.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/MommyTalk1672044474587.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:3906;s:6:"height";i:1597;s:4:"file";s:34:"2022/12/MommyTalk1672044474587.png";s:8:"filesize";i:251522;s:5:"sizes";a:7:{s:6:"medium";a:5:{s:4:"file";s:34:"MommyTalk1672044474587-300x123.png";s:5:"width";i:300;s:6:"height";i:123;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6521;}s:5:"large";a:5:{s:4:"file";s:35:"MommyTalk1672044474587-1024x419.png";s:5:"width";i:1024;s:6:"height";i:419;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:27634;}s:9:"thumbnail";a:5:{s:4:"file";s:34:"MommyTalk1672044474587-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4812;}s:12:"medium_large";a:5:{s:4:"file";s:34:"MommyTalk1672044474587-768x314.png";s:5:"width";i:768;s:6:"height";i:314;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:19487;}s:9:"1536x1536";a:5:{s:4:"file";s:35:"MommyTalk1672044474587-1536x628.png";s:5:"width";i:1536;s:6:"height";i:628;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:45749;}s:9:"2048x2048";a:5:{s:4:"file";s:35:"MommyTalk1672044474587-2048x837.png";s:5:"width";i:2048;s:6:"height";i:837;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:66496;}s:14:"post-thumbnail";a:5:{s:4:"file";s:34:"MommyTalk1672044474587-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4812;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MommyTalk1672044553642]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/26/%e6%b5%85%e8%af%bb%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba-3-1%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7/mommytalk1672044553642/</link>
		<pubDate>Mon, 26 Dec 2022 08:49:22 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044553642.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1078</wp:post_id>
		<wp:post_date><![CDATA[2022-12-26 16:49:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-26 08:49:22]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-26 16:49:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-26 08:49:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mommytalk1672044553642]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>1058</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044553642.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/12/MommyTalk1672044553642.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:3899;s:6:"height";i:1485;s:4:"file";s:34:"2022/12/MommyTalk1672044553642.png";s:8:"filesize";i:234392;s:5:"sizes";a:7:{s:6:"medium";a:5:{s:4:"file";s:34:"MommyTalk1672044553642-300x114.png";s:5:"width";i:300;s:6:"height";i:114;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:6217;}s:5:"large";a:5:{s:4:"file";s:35:"MommyTalk1672044553642-1024x390.png";s:5:"width";i:1024;s:6:"height";i:390;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:26778;}s:9:"thumbnail";a:5:{s:4:"file";s:34:"MommyTalk1672044553642-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4757;}s:12:"medium_large";a:5:{s:4:"file";s:34:"MommyTalk1672044553642-768x293.png";s:5:"width";i:768;s:6:"height";i:293;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:18795;}s:9:"1536x1536";a:5:{s:4:"file";s:35:"MommyTalk1672044553642-1536x585.png";s:5:"width";i:1536;s:6:"height";i:585;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:44348;}s:9:"2048x2048";a:5:{s:4:"file";s:35:"MommyTalk1672044553642-2048x780.png";s:5:"width";i:2048;s:6:"height";i:780;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:64426;}s:14:"post-thumbnail";a:5:{s:4:"file";s:34:"MommyTalk1672044553642-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";s:8:"filesize";i:4757;}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[示例页面]]></title>
		<link>https://blog.zhuanjie.ltd/sample-page/</link>
		<pubDate>Mon, 05 Dec 2022 07:34:56 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>这是示范页面。页面和博客文章不同，它的位置是固定的，通常会在站点导航栏显示。很多用户都创建一个“关于”页面，向访客介绍自己。例如：</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>嗨，大家好！我白天是个邮递员，晚上就是个有抱负的演员。这是我的网站。我住在北京，养了条吉通人性的狗叫小黑，我喜欢艺术和旅行。</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>……或这个：</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>XYZ Doohickey公司成立于1971年，自从建立以来，我们一直向社会贡献着优秀doohickies。我们的公司总部位于天朝魔都，有着超过两千名员工，对魔都政府税收有着巨大贡献。</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>而您，作为一位 WordPress 新用户，我们建议您转到<a href="http://50.93.205.205/wp-admin/">您站点的仪表盘</a>，删除本页面，然后创建包含您自己内容的新页面。祝您使用愉快！</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date><![CDATA[2022-12-05 15:34:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:34:56]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-05 15:34:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-05 07:34:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sample-page]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[20春小学期程序设计实验报告]]></title>
		<link>https://blog.zhuanjie.ltd/2020/06/27/experimentalreportonprogramdesigninspring20/</link>
		<pubDate>Fri, 26 Jun 2020 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Experimental report on program design in spring 20</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>1. 最长公字串</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>编写一个程序，对输入的字符串s和t，求其最长的公共子字符串。输入形式：从屏幕分行读入串s和t。s和t由任意字符构成，长度都不超50个字符。输入数据确保只有唯一的最长公共子串。如果没有公共子串，打印No Answer。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：在单独行上输出串s和串t的最长公共子串，在结尾输出一个回车符。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意，将对应的行内字符串存入对应的数组a，b中，再比较a和b的长度，将较短的信息存入a，较长的存入b中。将a中以依次减少1个长度的原则取出对应的数组存入test数组中，再在b中取出相同长度的数组存入card数组中，比较test和card的区别来判断是否存在最大相同子串，如果相同就输出该子串，并且离开循环。如果最后循环完还未输出就输出No Answer。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
#include&lt;stdlib.h&gt;
char *mystrncpy(char *string, int n){//指向字符串的指针可以改变 
	char*p=string;
	if(p==NULL){//如果截取的字符串是空的直接返回
		return NULL;
	}
	else{
		int i=0;
		while(*p!='\0'){//循环直到达n个字符串终止
			if(i==n){
				break;
			}
			i++;
			p++;
		}
		*(p++)='\0';//赋值结束字符串
		return string;
	}
}

int main(){
	char a&#091;50],b&#091;50];
	char c&#091;50];//中间变量 
	int flag=0;
	int i,j,k,m,n;
	gets(a);//第一行字符串 
	gets(b);//第二行字符串 
	int lentha=strlen(a);//第一行字符串长度 
	int lenthb=strlen(b);//第二行字符串长度 
	/*检测输入*/ 
//	printf("%s",a); 
//	printf("\n-------------------------\n");
//	printf("%s",b);
//	printf("\n-------------------------\n");
//	printf("lentha=%d,lenthb=%d",lentha,lenthb);
//	printf("\n-------------------------\n");
	/*初处理数据，将短的的数据变到a*/
	if(lentha&gt;lenthb){
		for(i=0;i&lt;50;i++){
			c&#091;i]=a&#091;i];
			a&#091;i]=b&#091;i];
			b&#091;i]=c&#091;i];
		}
		i=lentha;
		lentha=lenthb;
		lenthb=i; 
	}
	/*初处理检测*/ 
//	printf("初处理%s",a); 
//	printf("\n-------------------------\n");
//	printf("初处理%s",b);
//	printf("\n-------------------------\n");
//	printf("初处理lentha=%d,lenthb=%d",lentha,lenthb);
//	printf("\n-------------------------\n");
	/*运算部分*/ 
	for(i=lentha;i&gt;0;i--){//从a的最长长度截取，依次减少 
		char test&#091;i];//对应a中取得的值 
		char card&#091;i];//对应b中取得的值 
		for(j=0;j&lt;=lentha-i;j++){
			for(k=0;k&lt;i;k++){//将a中对应值覆到test 
				test&#091;k]=a&#091;k+j];
			}
			for(m=0;m&lt;lenthb-i+1;m++){
				for(n=0;n&lt;i;n++){//将b中对应值覆到card 
					card&#091;n]=b&#091;n+m];
				}
				int judge=1; 
				for(n=0;n&lt;i;n++){//判断card和test是否一致 
					if(test&#091;n]!=card&#091;n]){
						judge=0;
					}
				}
				if(judge){
					printf("%s",mystrncpy(test,i));
					flag=1;
				}
				if(flag){
					break; 
				}
			}
			if(flag){
				break;
			}
		}
		if(flag){
			break;
		}
	}
	if(flag==0){
		printf("No Answer"); 
	} 
	 
}

</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本题用到了get();来获取字符串。gets()用于从标准输入流stdin读入一个整行（以bai'\n'或EOF）结束，写入ptr指向的字符数组，并返回这个指针；出错或遇到文件结束时则返回NULL。行末的'\n'从流中取出，但不写入数组。gets()不检查被写入的数组大小。程序运用逐个尝试的方法来获取最长公子串。在获取字符串时检查字符串长度，当a的长度大于b的长度时，运用了逐个代换的方法，将a，b中的元素互换位置。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>2. CCF 201712-5 商路</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>国王小w总共有八座城市，用1到n的整数编号。除首都1号城市外，每座城市都有唯一的直接上级城市，并有一条道路连接二者，即这些城市和道路构成了一棵有根树。对于城市i，我们记它的直接上级城市为ui，它到该城市道路的长度为si；同时，称i是么ui的直接下级城市。城市i的直接下级城市和直接下级城市的下级城市统称为城市i的下级城市。<br>每座城市的长官都想要建立一条由自己管辖的商路。对于城市i的长官，他管辖的商路必须形如a1a2…ak，其中a1=i：对于1≤j&lt;k,aj+1是aj的下级城市：k可以是你指定的正整数。即，一条商路是从城市i出发，依次向下级延伸的一条路径。注意路径只用向下级城市延伸即可，不限定为直接下级。城市i的价值由vi和fi两个参数描述。商路a1a2…ak的总价值为：</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":462,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/02/图片1.png" alt="" class="wp-image-462" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>其中d(aj.aj+1）是连接aj和aj+1的道路总长度。形象地说，商路的总价值等于每小段的价值之和：vi和fi分别描述了i作为起点的最理想小段价值和最佳的小段长度：小段的价值等于以它们为参数，两座城市距离为自变量的二次函数。<br>如有必要，一条商路允许只包含长官所在的那一座城市，即k=1，此时商路的总价值为0。此外，不同城市长官建立的道路之间互相不影响，价值独立计算。<br>国王小W希望所有的n条商路的总价值之和最大，他现在请你帮忙。你可以替每座城市的长官决定商路的长度k和路径上除起点之外的城市，问最大的总价值之和是多少。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入格式<br>从标准输入读入数据。<br>输入的第一行包含一个正整数个，表示数据的组数。对于测试数据，保证T=10。<br>接下来有T个部分，每个部分描述一组数据，其中：<br>每个部分第一行包含一个正整数n，表示城市的数量。<br>接下米n行，每行包含4个非负整数ui，si,vi,fi，分别表示直接上级城市的编号，连接直接上级城市道路的长度，最理想小段价值和最佳的小段长度。保证：0≤vi≤10^13，0≤fi≤10^9；对于2≤i≤n，保证1≤ui&lt;i,1≤si≤10^4；u1=s1=0，仅占位无实际意义（首都没有上级城市）。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意输入的顺序是城市编号的顺序，而城市编号的顺序又直接决定了城市之间的上下级关系。虽然编号小的不一定是大编号的下级，但下级城市的编号一定比上级城市的编号小，如何利用这一点非常重要。假如城市A的下级城市是B,C,D ；那如果B,C,D 本身的商路价值都是最大话之后，A 只能在B,C,D 中挑选一个与之相连，或者不相连，来使自己的商路价值最大话。也就是如果B,C,D的商路价值都是已知的了，那A 的商路价值就都是已知的了。 如此以来，只需要按照逆序从后向前分别计算商路的最大值就可以了。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c++）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;iostream&gt;
#include&lt;algorithm&gt;
#include&lt;bits/stdc++.h&gt;
#include&lt;queue&gt;
using namespace std;
typedef long long ll;
const ll MOD=1e18;
const int N=1e5+10;
ll v&#091;N],f&#091;N],u&#091;N],s&#091;N];
ll ans&#091;N];
int vis&#091;N];
void init()
{
	memset(ans,0,sizeof(ans));
	memset(vis,0,sizeof(vis));
}
queue&lt;int&gt;q;
int main()
{
	int T,n;
	scanf("%d",&amp;T);
	while(T--)
	{
		init(); //初始化 
		scanf("%d",&amp;n);
		for(int i=1;i&lt;=n;i++)
		{
			scanf("%d%d%d%d",&amp;u&#091;i],&amp;s&#091;i],&amp;v&#091;i],&amp;f&#091;i]);
			vis&#091;u&#091;i]]++; //vis数组保存这个点的直接下级数量 
		}
		
		for(int i=1;i&lt;=n;i++) //这里类似拓扑排序，直接下级数量为零入队 
		if(!vis&#091;i]) q.push(i);
		while(!q.empty())
		{
			int k=q.front();q.pop();
			int t=u&#091;k],d=s&#091;k];
			vis&#091;t]--;
			if(!vis&#091;t]) q.push(t);//直接下级全都处理过了，入队 
			while(t) //寻找所有上级，计算上级城市到这里的获利，取最大值 
			{
				ans&#091;t]=max(ans&#091;t],(ans&#091;k]+v&#091;t]-(f&#091;t]-d)*(f&#091;t]-d))); //ans里保存了以这个城市为开头的商路最大价值 
				d+=s&#091;t];
				t=u&#091;t];
			}
		}
		ll sum=0;
		for(int i=1;i&lt;=n;i++) sum=(sum+ans&#091;i])%MOD; //计算总价值 
		printf("%lld\n",sum);
	}
	return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>此程序涉及到了未学过的知识点，了解了拓扑排序。由某个集合上的一个偏序得到该集合上的一个全序，这个操作称之为拓扑排序。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>3. Vigenere加密算法</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>单一字母替换密码很容易通过字母频率分析而破解。而一种被称为Vigenere的密码克服了这一缺点，其方法是对于待加密信息中不同位置上的字母应用不同的字母加密对应关系。首先选择一个密钥，例如TIGER，然后，对于待加密信息中的第一个字符，采用如下的字母对应关系加密：上述加密字母表是经过固定移位的字母表，其首字母是T（TIGER的首字母，先是T～Z，然后是A～S）。例如：字母A加密转换成T，字母Q转换成J，不在A～Z之间的字符，不进行转换。对待加密信息中的第二个字符，采用如下的字母对应关系加密：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对于待加密信息的第3个、第4个、第5个字符，分别采用以G、E、R开头的移位字母表对其加密。因为密钥只有5个字母长，所以对于待加密信息中的第6个字符，将采用与第1个字符相同的对应关系加密，以此类推。假定待加密信息中的字母全为大写字母，并且输入的密钥也全为大写字母；密钥长度不超过20，待加密信息不超过200个字符。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：从标准输入中输入密钥串，然后在下一行输入待加密信息（末尾有回车换行）。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：加密后结果输出到标准输出（末尾要有回车换行）。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由题意，创建两个数组，依次存放密钥跟密文，再利用循环依次获取每一位的加密后的文字并输出。如果不在A~Z之间就直接输出。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
int main(){
	char key&#091;20];
	char mas&#091;200];
	gets(key);
	gets(mas);
	int i,j;//循环次数标识，i表示加密信息的下标，j表示key的下标 
	int lkey=strlen(key);
	int lmas=strlen(mas);//获取key和mas的长度，除去'\n' 
	for(i=0,j=0;i&lt;lmas;i++,j++){ 
		if(j&gt;=lkey){//如果key下标超出最大值，将其初始化为0 
			j=0;
		} 
		if(65&gt;mas&#091;i]||mas&#091;i]&gt;90){//如果加密信息不在A~Z之间就直接输出 
			printf("%c",mas&#091;i]);
			continue;
		}
		char out=mas&#091;i]+(key&#091;j]-65);//新的加密后信息运算 
		if(out&gt;90){
			out-=26; 
		}
		printf("%c",out);
	}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本题利用大写字母所对应的ASCII码字母和后移实际上就是ASCII码的后移，超过90的ASCII码就利用判断，将其减少26就在65到90之间了。如果ASCII码不在65~90之间就直接输出。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>4. 字符串转换双精度浮点数</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>编写函数atof(s),把字符串s转化成相应的双精度浮点数.输入字符串可能含有如下几部分：正负号，整数部分，小数点，小数部分。该函数还能够处理形如123.45e-5的指数型字符串输入.输入字符串中不含有空格.编写一个程序,使用该函数,将输入的字符串转换成相应的双精度浮点数。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：控制台输入字符串s.它可以含有正负号,小数点,整数部分和小数部分,以及字符&amp;rsquo;e&amp;rsquo;和相应的指数部分。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：控制台输出转换后的双精度数.格式化输出,使用"%f",即不需指定字段宽度,由系统自动指定,使整数部分全部如数输出，并保留6位小数部分。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意，将字符串存入scr数组中，利用java中的Double.parseDouble()获得double类型数据，然后控制输出位数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（Java）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.Scanner;

public class atof {
	public static void main(String&#091;] args) {
		Scanner inp = new Scanner(System.in);
		String scr = inp.next();
		inp.close();
		double d = Double.parseDouble(scr);
		System.out.printf("%.6f",d);
	}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>该程序将字符串存入scr数组中，利用java中的Double.parseDouble()获得double类型数据d，然后利用System.out.printf("%.6f",d)控制输出位数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>5. 素数判断</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>编写一个函数isprime(n).判断整数n是否为素数.编写程序使用此函数,当输入一个整数时,对它进行判断,当为素数时,输出1.否则,输出0.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：控制台输入一个整数.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：控制台输出判断结果0或者1.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>判断一个数字n是否为素数要用该数字依次除以从2到根号n，一旦有一个可以除尽的数字就不是素数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
int isprime(int n){
	int i;
	int flag=1;
	for(i=2;i&lt;n;i++){
		if(n%i==0){
			flag=0;
			break;
		}
	}
	return flag;
}
int main(){
	int n;
	int m;
	scanf("%d",&amp;n);
	m=isprime(n);
	printf("%d",m);
	return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序创建isprime()函数，其中参数为数字n，利用循环，将n除以2一直除到根号n，判断是否能除尽，有一个能除尽就返回0，否则返回1。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>6. 消除游戏</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>消除类游戏是深受大众欢迎的一种游戏，游戏在一个包含有n行m列的游戏棋盘上进行，棋盘的每一行每一列的方格上放着一个有颜色的棋子，当一行或一列上有连续三个或更多的相同颜色的棋子时，这些棋子都被消除。当有多处可以被消除时，这些地方的棋子将同时被消除。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>现在给定一个n行m列的棋盘，棋盘中的每一个方格上有一个棋子（用数字1-9表示各种颜色的棋子），请给出经过消除后的棋盘。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>请注意：一个棋子可能在某一行和某一列同时被消除。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：从标准输入读取数据，第一行包含两个整数n和m，分别表示棋盘的行数和列数（行数和列数都大于等于3，小于等于9），以一个空格分隔这两个整数。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>接下来输入n行，每行m个整数，用一个空格分隔各个整数，这些整数分别表示每一个方格中棋子的颜色（大于等于1，小于等于9）。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：向标准输出上输出n行，每行m个整数，相邻整数之间以一个空格分隔，表示经过消除后的棋盘。如果一个方格中的棋子被消除，则对应的方格输出数字0，否则输出代表原棋子颜色的整数。每行最后一个整数后也要有一个空格。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意创建二维数组存放原始数据。将原始数据复制到两个新的数组中，利用循环依次判断行与列该消除的数只需要按行遍历一次，再按列遍历一次，每次只需要判断三个数，就可以解决这个问题。将其变为0，最后合并这两个数组并输出。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（Java）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.Scanner;

public class exam1 {
	static void output(int&#091;]&#091;] a, int n, int m) {//输出函数output，参数：数据存放数组a，行n，列m
		for (int i = 0; i &lt; n; i++) {
			for (int j = 0; j &lt; m; j++) {
				System.out.print(a&#091;i]&#091;j]);
				if (j==m-1) {
					break;
				}
				System.out.print(" ");
			}
			if (i==n-1) {
				break;
			}
			System.out.println();
		}
	}
	public static void main(String&#091;] args) {
		Scanner input = new Scanner(System.in);
		int n = input.nextInt();
		int m = input.nextInt();
		int&#091;]&#091;] a = new int&#091;n]&#091;m];
		for (int i = 0; i &lt; n; i++) {//输入
			for (int j = 0; j &lt; m; j++) {
				a&#091;i]&#091;j] = input.nextInt();
			}
		}
		input.close();
//		output(a,n,m);
		int&#091;]&#091;] row = new int&#091;n]&#091;m];//行变换消除后的数据
		int&#091;]&#091;] col = new int&#091;n]&#091;m];//列变换消除后的数据
		int&#091;]&#091;] fin = new int&#091;n]&#091;m];//最终整合的数据
		for (int i = 0; i &lt; n; i++) {
			for (int j = 0; j &lt; m; j++) {
				row&#091;i]&#091;j] = a&#091;i]&#091;j];
				col&#091;i]&#091;j] = a&#091;i]&#091;j];
				fin&#091;i]&#091;j] = a&#091;i]&#091;j];
			}
		}
//		output(row,n,m);
		for (int i = 0; i &lt; n; i++) {//行变换消除数据
			for (int j = 0; j &lt; m-2; j++) {
				if (a&#091;i]&#091;j]==a&#091;i]&#091;j+1]&amp;&amp;a&#091;i]&#091;j]==a&#091;i]&#091;j+2]) {
					row&#091;i]&#091;j] = 0;
					row&#091;i]&#091;j+1] = 0;
					row&#091;i]&#091;j+2] = 0;
				}
			}
		}
//		output(row,n,m);
//		System.out.println();
//		System.out.println();
		for (int i = 0; i &lt; m; i++) {
			for (int j = 0; j &lt; n-2; j++) {
				if (a&#091;j]&#091;i]==a&#091;j+1]&#091;i]&amp;&amp;a&#091;j]&#091;i]==a&#091;j+2]&#091;i]) {
					col&#091;j]&#091;i] = 0;
					col&#091;j+1]&#091;i] = 0;
					col&#091;j+2]&#091;i] = 0;
				}
			}
		}
//		output(col,n,m);
//		System.out.println();
//		System.out.println();
		for (int i = 0; i &lt; n; i++) {
			for (int j = 0; j &lt; m; j++) {
				if (row&#091;i]&#091;j]==0||col&#091;i]&#091;j]==0) {
					fin&#091;i]&#091;j] = 0;
				}
			}
		}
		output(fin, n, m);
//		System.out.println();
//		System.out.println();
//		output(a,n,m);
	}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序要保留下来原始数组，以免判断完行后列的数据不全导致判断错误。我都程序新建了一个output方法，将输出部分区块化方便在代码中间判断输出情况。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>7. 合数分解2</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由数学基本定理可知：任何一个大于1的非素数整数（即合数）都可以唯一分解成若干个素数的乘积。编写程序，从控制台读入一个合数（合数的大小不会超过int数据类型表示的范围），求这个合数可以分解成的多次出现的素数（即出现次数大于1的素数）。例如合数1260分解成素数乘积为：2*2*3*3*5*7,2和3出现两次，5和7出现一次，所以求得的结果为2和3。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：从控制台输入一个合数。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：在标准输出上按照由小到大的顺序输出分解后的多次出现的素数，各素数之间以一个空格分隔，最后一个素数后也可以有一个空格。若没有多次出现的素数，则什么都不输出。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意，应该先判断输入数字num的所有质因子。然后循环将num依次除以从2到num的数字i，如果能整除，i不加1，同时再加入一个循环向其中添加一个参数，多次出现的质因子输出出来。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（Java）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.Scanner;

public class primes {
	public static void main(String&#091;] args) {
		Scanner input = new Scanner(System.in);
		int num = input.nextInt();
		input.close();
		for (int i = 2; i &lt; num; i++) {
			if (num%i==0) {
				for (int j = 0; num%i==0; j++) {
					num = num/i;
					if (j==1) {
						System.out.print(i+" ");
					}
				}
			}
		}
	}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>该程序运用到了两层for循环嵌套，其中里面还有俩if判断，其中参数j在等于1的时候才会输出数字，其意义就是该质因子出现两次的时候会输出，同题目中的意思出现多次时输出一次该数字。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>8. 摄氏华氏温度转换</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>假如用C表示摄氏温度，F表示华氏温度，则有：F=C*9/5+32。输入一整数表示摄氏温度，根据该公式编程求对应的华氏温度，结果小数点后保留一位有效数字。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：从控制台读入一个整数，表示摄氏温度。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：向控制台输出转换后的华氏温度，结果小数点后保留一位有效数字。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由题意，题目中给出了公式，利用scanf读取数字然后按照题目中的公式计算，然后输出数据即可。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
int main(){
	double m,n;
	scanf("%lf",&amp;m);
	n=m*9/5+32;
	printf("%.1lf",n);
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本题程序中，输入的数据m也要变为double以免利用公式运算的时候出现小数部分没有计算入内的情况，输出的保留一位小数利用printf(“%.2lf”)即可完成题目要求。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>9. CCF 201612-1 中间数</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在一个整数序列a1, a2, …, an中，如果存在某个数，大于它的整数数量等于小于它的整数数量，则称其为中间数。在一个序列中，可能存在多个下标不相同的中间数，这些中间数的值是相同的。给定一个整数序列，请找出这个整数序列的中间数的值。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：输入的第一行包含了一个整数n，表示整数序列中数的个数。第二行包含n个正整数，依次表示a1, a2, …, an。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：如果约定序列的中间数存在，则输出中间数的值，否则输出-1表示不存在中间数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由题意，由于输入的数据没有排序要求，本题采用暴力法，依次判断每个数字前比它小的数字，每个数字后比他大的数字的个数是否相等。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
int main(){
	int n;
	scanf("%d",&amp;n);
	int a&#091;n];
	int i,j,e,f;
	int flag=1;
	for(i=0;i&lt;n;i++){
		scanf("%d",&amp;a&#091;i]);
	}
	for(i=0;i&lt;n;i++){
		e=0;
		f=0;
		for(j=0;j&lt;n;j++){
			if(a&#091;j]&lt;a&#091;i]){
				e++;
			}
			else if(a&#091;j]&gt;a&#091;i]){
				f++;
			}
		}
		if(e==f&amp;&amp;e!=0){
			printf("%d",a&#091;i]);
			flag=0;
			break;
		}
	}
	if(flag){
		printf("-1");
	}
	return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序用暴力法依次计算前后大小的数字是否一致，利用flag来表示是否存在这样的数字，如果不存在这样的数字，根据flag等于0会输出-1。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>10. 最小素数集</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由数学基本定理可知：任何一个大于1的非素数整数都可以唯一分解成若干个素数的乘积。编写程序，从控制台读入一组大于1的整数（小于等于20个，且每个整数的大小不会超过int数据类型表示的范围），求这些整数分解成素数的最小集。该最小素数集是所有整数分解成的素数的并集（若输入的整数是素数，则该素数可以直接加入最小素数集），并且重复的素数只保留一个。按从小到大的顺序输出求得的最小素数集。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：先从控制台输入整数的个数，然后在下一行输入所有整数，各整数之间以一个空格分隔。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：在标准输出上按从小到大顺序输出求得的最小素数集，各素数之间以一个空格分隔，最后一个整数后也可以有一个空格。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意先求出所有的数字的质因子，放在同一个数组里，然后从小到大依次排列，最后在依次输出，每个数字只输出一遍。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>代码（Java）</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.ArrayList;
import java.util.Scanner;

public class primes {
	public static boolean judge(int x) {//判断是否为素数，是素数返回true
		boolean flag = true;
		for(int i = 2; i &lt;= Math.sqrt((double)x); i++) {
			if(x%i==0) {
				flag = false;
			}
		}
		return flag;
	}
	public static int sti(String a) {//string形转int型
		int result = 0;
		try { 
		    result = Integer.parseInt(a); 
		} catch (NumberFormatException e) { 
		    e.printStackTrace(); 
		}
		return result;
	}
	public static void main(String&#091;] args) {
		Scanner input = new Scanner(System.in);
		int n = input.nextInt();//输入数组个数
		int&#091;] a = new int&#091;n];//表示存放数字的数组
		ArrayList&lt;String&gt; midarray = new ArrayList&lt;String&gt;();
		for (int i = 0; i &lt; a.length; i++) {
			a&#091;i] = input.nextInt();
			
		}
		for (int i = 0; i &lt; a.length; i++) {
			for (int j = 2; j &lt;= a&#091;i]; j++) {
				if (judge(a&#091;i])) {
					midarray.add(""+a&#091;i]);
					break;
				}
				else {
					if(a&#091;i]%j==0) {
						for (; a&#091;i]%j==0; ) {
							a&#091;i] /= j;
						}
						midarray.add(""+j);
					}
				}
			}
		}
		input.close();
		int w = 0;
		int l = midarray.size();
		int&#091;] num = new int&#091;l];
		for (int i = 0; i &lt; l; i++) {
			num&#091;i] = sti(midarray.get(i));
		}
		for (int i = 0; i &lt; l; i++) {
			for (int j = 0; j &lt; l-1; j++) {
				if(num&#091;j]&gt;num&#091;j+1]) {
					int k = num&#091;j];
					num&#091;j] = num&#091;j+1];
					num&#091;j+1] = k;
				}
			}
		}
		if (l&gt;2) {
			boolean flag = false;
			for (int i = 0; i &lt; l-1; i++) {
				if (num&#091;i]&lt;num&#091;i+1]) {
					w = i+1;
					System.out.print(num&#091;i]);
					if (i==l-2) {
						flag = true;
						break;
					}
					System.out.print(" ");
				}
			}
			if (num&#091;l-1]&gt;num&#091;l-2]) {
				if (flag) {
					System.out.print(" ");
				}
				System.out.print(num&#091;l-1]);
			}
			else if (num&#091;l-1]==num&#091;w]) {
				System.out.print(num&#091;w]);
			}
		}
		else if (l==1) {
			System.out.print(num&#091;0]);
		}
		else if (l==2) {
			if (num&#091;0]==num&#091;1]) {
				System.out.print(num&#091;0]);
			}
			else {
				System.out.print(num&#091;0]+" "+num&#091;1]);
			}
		}
	}
		
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序中用judge方法来判断是否为素数，是素数返回true，用sti方法将string形数据转为int型数据。并在输出的时候建立一个标识w，让w称为最后一个数字的初始下标，以免少数出一个数字。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>11. 求三角形面积</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>若已知三角形三个边的长度分别为a,b,c（并假设三个边长度的单位一致，在本编程题中忽略其单位），则可以利用公式 求得三角形的面积，其中：s=(a+b+c)/2。编程实现从控制台读入以整数表示的三个边的长度（假设输入的长度肯定可以形成三角形），然后利用上述公式计算面积并输出，结果小数点后保留3位有效数字。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：从控制台输入三个整数表示三角形三个边的长度，以空格分隔三个整数。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：向控制台输出求得的三角形的面积，小数点后保留三位有效数字。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由题意，题目中给出了公式，利用scanf读取数字然后按照题目中的公式计算，然后输出数据即可。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
#include&lt;math.h&gt;
int main(){
	double a,b,c,p,s;
	scanf("%lf %lf %lf",&amp;a,&amp;b,&amp;c);
	p=(a+b+c)/2;
	s=sqrt(p*(p-a)*(p-b)*(p-c));
	printf("%.3lf",s);
} 
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序中用p表示半周长，然后根据公式计算得出面积的值，最后利用printf(“%.3lf”)输出保留了小数点后的三位数字。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>12. 回文数</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>"回文数"是一种数字。如：98789, 这个数字正读是98789,倒读也是98789,正读倒读一样，所以这个数字就是回文数。编写一个程序，判断给出的数m是否为回文数（m的位数&lt;=1000）。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入描述：一个整数m</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出描述：如果m是回文数，则输出yes，否则输出no（yes和no均为小写）</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意，我将输入的数字视为字符串存入数组，然后判断数组实际长度，反过来存到另一个数组里，比较实际长度那么多的字符是否一致即可</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>代码（c）</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
int main(){
	char a&#091;100],b&#091;100];
	gets(a);
	int lentha=strlen(a);
	int i=lentha-1,j;
	for(j=0;i&gt;=0;i--){
		b&#091;j]=a&#091;i];
		j++;
	}
	int key=1;
	for(i=0;i&lt;lentha;i++){
		if(a&#091;i]!=b&#091;i]){
			key=0;
			break;
		}
	}
	if(key){
		printf("yes");
	}
	else{
		printf("no");
	}
	return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本题用到了get();来获取字符串。gets()用于从标准输入流stdin读入一个整行（以bai'\n'或EOF）结束，写入ptr指向的字符数组，并返回这个指针；出错或遇到文件结束时则返回NULL。行末的'\n'从流中取出，但不写入数组。gets()不检查被写入的数组大小。利用strlen()判断数组实际长度，然后反向写入另一个数组。依次判断两个数组中的每个数字是否一样，一旦出现一个不一样，将key标记为0。最后根据key输出yes或no。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>13. CCF 201703-4 地铁修建</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A市有n个交通枢纽，其中1号和n号非常重要，为了加强运输能力，A市决定在1号到n号枢纽间修建一条地铁。地铁由很多段隧道组成，每段隧道连接两个交通枢纽。经过勘探，有m段隧道作为候选，两个交通枢纽之间最多只有一条候选的隧道，没有隧道两端连接着同一个交通枢纽。现在有n家隧道施工的公司，每段候选的隧道只能由一个公司施工，每家公司施工需要的天数一致。而每家公司最多只能修建一条候选隧道。所有公司同时开始施工。作为项目负责人，你获得了候选隧道的信息，现在你可以按自己的想法选择一部分隧道进行施工，请问修建整条地铁最少需要多少天。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：输入的第一行包含两个整数n, m，用一个空格分隔，分别表示交通枢纽的数量和候选隧道的数量。第2行到第m+1行，每行包含三个整数a, b, c，表示枢纽a和枢纽b之间可以修建一条隧道，需要的时间为c天。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：输出一个整数，修建整条地铁线路最少需要的天数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由题意本体就是最小生成树的题目。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>代码（Java）</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Scanner;

public class subway {
	static int&#091;] fathers;
	static Comparator&lt;int&#091;]&gt; cmp = new Comparator&lt;int&#091;]&gt;() {
		@Override
		public int compare(int&#091;] o1, int&#091;] o2) {
			return o1&#091;2] - o2&#091;2];
		}
	};

	// 优先队列方法
	// 85分，超时
	static void MST() {
		Scanner scanner = new Scanner(System.in);
		int num = scanner.nextInt();
		int route = scanner.nextInt();
		PriorityQueue&lt;int&#091;]&gt; queue = new PriorityQueue&lt;&gt;(cmp);
		// 初始化并查集
		fathers = new int&#091;num + 1];
		for (int i = 1; i &lt;= num; i++) {
			fathers&#091;i] = i;
		}
		// 读取边
		for (int i = 0; i &lt; route; i++) {
			int&#091;] arr = new int&#091;3];
			for (int j = 0; j &lt; 3; j++) {
				arr&#091;j] = scanner.nextInt();
			}
			queue.add(arr);
		}
		scanner.close();

		// Kruskal算法
		for (int i = 0; i &lt; route; i++) {
			int&#091;] edges = queue.poll();
			int a = edges&#091;0], b = edges&#091;1];
			int father_a = findfathers(a);
			int father_b = findfathers(b);
			if (father_a != father_b) {
				fathers&#091;father_a] = father_b;
			}
			if (findfathers(1) == findfathers(num)) {
				System.out.println(edges&#091;2]);
				break;
			}
		}
	}

	
	static int findfathers(int child) {
		int father = child;
		while (fathers&#091;father] != father) {
			father = fathers&#091;father];
		}
		// 路径压缩
		int i = child, j;
		while (i != father) {
			j = fathers&#091;i];
			fathers&#091;i] = father;
			i = j;
		}
		return father;
	}

	public static void main(String&#091;] args) {
		MST();
	}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>利用最小生成树算法。最小生成树性质：设G=(V，E）是一个连通网络，U是顶点集V的一个非空真子集。若(u，v）是G中一条“一个端点在U中（例如：u∈U），另一个端点不在U中的边（例如：v∈V-U），且（u，v）具有最小权值，则一定存在G的一棵最小生成树包括此边（u，v）。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>14. CCF 201512-1 数位之和</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>给定一个十进制整数n，输出n的各位数字之和。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：输入一个整数n。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：输出一个整数，表示答案。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意将数字看成字符串然后根据每个字符串改为数字，最后将所有的数字加在一起能得出答案。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（c）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
#define chartonumber(x) (x-'0')
int main(){
	char a&#091;10];
	fgets(a, 10, stdin);
	int sum=0;
	int i;
	for(i=0;i&lt;strlen(a)-1;i++){
		sum+=chartonumber(a&#091;i]);
	}
	printf("%d",sum);
} 
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序用fgets()获取字符，fgets函数功能为从指定的流中读取数据，每次读取一行。其原型为：char *fgets(char *str, int n, FILE *stream);从指定的流 stream 读取一行，并把它存储在 str 所指向的字符串内。当读取 (n-1) 个字符时，或者读取到换行符时，或者到达文件末尾时，它会停止，具体视情况而定。利用宏定义#define chartonumber(x) (x-'0')将char类型数据转换为int类型数据。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":1} -->
<h1>15. 逆序乘积式</h1>
<!-- /wp:heading -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>若两个正整数的乘积，等于两正整数各自逆序后的乘积，则称其为逆序乘积式。编写程序读入两个正整数，然后判断这两个正整数能否构成逆序乘积式。假设两个正整数的乘积不会超过int数据类型的表示范围。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入形式：从控制台输入以一个空格分隔的两个正整数。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出形式：若两个正整数能够构成逆序乘积式，则输出两个正整数及其逆序的乘积形式，并且中间用一个等号相连；若不能构成逆序乘积式，则输出两个正整数及其逆序的乘积形式，并且中间用一个不等号相连。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>注意：输出的字符之间没有空格分隔。若逆序后最高位为0，则为0的最高位不输出。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>根据题意，本程序结合了将数字反过来读取，和判断乘积是否相等。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码（Java）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.Scanner;

public class exam {
	static int changetonumber(String y) {
		int result = 0;
		try { 
		    result = Integer.parseInt(y); 
		} catch (NumberFormatException e) { 
		    e.printStackTrace(); 
		}
		return result;
	}
	public static void main(String&#091;] args) {
		boolean flag = true;
		Scanner input = new Scanner(System.in);
		StringBuilder a = new StringBuilder(input.next());
		StringBuilder b = new StringBuilder(input.next());
		String sa = ""+a;
		String sb = ""+b;
		StringBuilder backa = a;
		StringBuilder backb = b;
		backa.reverse();
		backb.reverse();
		String sbacka = ""+backa;
		String sbackb = ""+backb;
		int numa = changetonumber(sa);
		int numb = changetonumber(sb);
		int numba = changetonumber(sbacka);
		int numbb = changetonumber(sbackb);
		if (numa*numb==numba*numbb) {
			flag = false;
		}
		input.close();
		System.out.print(numa+"*"+numb);
		if (flag) {
			System.out.print("!");
		}
		System.out.print("="+numba+"*"+numbb);
	}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序利用一个changetonumber方法将字符串转换为数字返回，先读取字符串，然后将字符串复制到另一个StringBuilder类型数据里，将其反向，然后利用新建的方法将其转换为数字，最后判断输出结果。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date><![CDATA[2020-06-27 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-26 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-06-27 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-06-26 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[experimentalreportonprogramdesigninspring20]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[c%e8%af%ad%e8%a8%80%e6%9c%80%e9%95%bf%e5%85%ac%e5%ad%97%e4%b8%b2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-04]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[clanguagelongestcommonstring]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[文章导航]]></title>
		<link>https://blog.zhuanjie.ltd/sitemap/</link>
		<pubDate>Fri, 22 Oct 2021 02:48:32 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?page_id=207</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:shortcode -->
[simple-sitemap-group]
<!-- /wp:shortcode -->

<!-- wp:heading -->
<h2>分类</h2>
<!-- /wp:heading -->

<!-- wp:categories /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date><![CDATA[2021-10-22 10:48:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-22 02:48:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-22 10:48:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-22 02:48:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[sitemap]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[246]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[246]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[登录]]></title>
		<link>https://blog.zhuanjie.ltd/login/</link>
		<pubDate>Mon, 25 Oct 2021 08:33:15 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/login/</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_login]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date><![CDATA[2021-10-25 16:33:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-25 08:33:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-25 16:33:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-25 08:33:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[login]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[16]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[找回密码]]></title>
		<link>https://blog.zhuanjie.ltd/findpassword/</link>
		<pubDate>Mon, 25 Oct 2021 08:33:16 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/findpassword/</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_findpassword]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date><![CDATA[2021-10-25 16:33:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-25 08:33:16]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-25 16:33:16]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-25 08:33:16]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[findpassword]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[个人资料]]></title>
		<link>https://blog.zhuanjie.ltd/%e4%b8%aa%e4%ba%ba%e8%b5%84%e6%96%99/</link>
		<pubDate>Tue, 26 Oct 2021 04:23:53 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/%e4%b8%aa%e4%ba%ba%e8%b5%84%e6%96%99/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:wpum/profile-page /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date><![CDATA[2021-10-26 12:23:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-26 04:23:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-26 12:23:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-26 04:23:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b8%aa%e4%ba%ba%e8%b5%84%e6%96%99]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[关于]]></title>
		<link>https://blog.zhuanjie.ltd/%e5%85%b3%e4%ba%8e/</link>
		<pubDate>Mon, 04 Oct 2021 05:10:10 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?page_id=6</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>这是基于WordPress搭建在转接的云服务器上的个人blog，欢迎访问评论！</p></blockquote>
<!-- /wp:quote -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>致敬过去，感受青春，憧憬未来</p></blockquote>
<!-- /wp:quote -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>我是一名来自北京印刷学院计算机专业的大学生</p><p>如有需要，请联系QQ2227535604或者邮箱zhuanjier@outlook.com</p></blockquote>
<!-- /wp:quote -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date><![CDATA[2021-10-04 13:10:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-04 05:10:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-04 13:10:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-04 05:10:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%b3%e4%ba%8e]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[67d3fe15-6a09-45bf-8eb3-167ec50f26fd]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[67d3fe15-6a09-45bf-8eb3-167ec50f26fd]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[67d3fe15-6a09-45bf-8eb3-167ec50f26fd]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[67d3fe15-6a09-45bf-8eb3-167ec50f26fd]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[67d3fe15-6a09-45bf-8eb3-167ec50f26fd]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[67d3fe15-6a09-45bf-8eb3-167ec50f26fd]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_c90b986f9bec08d625f280291f17e3a4]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[博客配置]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/16/blogconfig/</link>
		<pubDate>Wed, 16 Feb 2022 14:48:05 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=438</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>footer.php添加鼠标特效</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&lt;!-- 首先导入jq插件 -->
&lt;script src="http://startpage.zhuanjie.ltd/jquery-1.9.1.min.js">&lt;/script>

&lt;script type="text/javascript">
     /* 鼠标点击特效 */
 
     jQuery(function () {
        $("html").click(function(e) {
            var a_idx = Math.floor((Math.random() * 26));
            var a = new Array(
                "乐观", "❤", "积极", "向上", "自由", "正能量", "(*^▽^*)", "元气满满", "开心", "快乐",
                 "善良", "可爱", "暴富", "暴瘦", "❤","富强", "民主", "文明", "和谐", "自由", "平等",
                 "公正" ,"法治", "爱国", "敬业", "诚信", "友善"
                 );
            var color1 = Math.floor((Math.random() * 255));
            var color2 = Math.floor((Math.random() * 255));
            var color3 = Math.floor((Math.random() * 255));
 
            var $i = $("&lt;span />").text(a[a_idx]);
            a_idx = (a_idx + 1) % a.length;
            var x = e.pageX,
                y = e.pageY;
            $i.css({　　　　　　
                "z-index": 9999999999999 ,
                "top": y - 20,
                "left": x,
                "position": "absolute",
                "font-family":"mmm",
                "fontSize":Math.floor((Math.random() * 22)+15),
                "font-weight": "bold",
                "color": "rgb("+color1+","+color2+","+color3+")",
                "-webkit-user-select":"none",
                "-moz-user-select":"none",
                "-ms-user-select":"none",
                "user-select":"none",
            });
            $("body").append($i);
            $i.animate({
                    "top": y - 200,
                    "opacity": 0
                },
                1000,
                function() {
                    $i.remove();
                });
        });
    });
&lt;/script>
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>functions.php添加仅注册用户可访问</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">// 添加只允许登录后查看
 
add_shortcode( 'vip_only', 'members_only_shortcode' );
 
function members_only_shortcode( $atts, $content = null ) {
 
if ( is_user_logged_in() &amp;&amp; !empty( $content ) &amp;&amp; !is_feed() )    {
 
return $content;
 
}
 
$a= '&lt;center>&lt;span>
&lt;div style="text-align:center;border:1px dashed #FF9A9A;padding:8px;margin:10px auto;color:green;">要查看更多文章内容，请您先&lt;a href="http://blog.zhuanjie.ltd/login/" target="_blank">登录&lt;/a>
&lt;/div>
&lt;/span>&lt;/center>';
 
return $a;
 
}</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>template-parts/footer/site-info.php</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&lt;div class="site-info">
	&lt;?php
	if ( function_exists( 'the_privacy_policy_link' ) ) {
		the_privacy_policy_link( '', '&lt;span role="separator" aria-hidden="true">&lt;/span>' );
	}
	?>
	&lt;a class="message" href="http://startpage.zhuanjie.ltd/" target="_blank">本网站由转接搭建&lt;/a>
	&lt;br/>
	&lt;a class="icp" href="https://beian.miit.gov.cn/" target="_blank">
	
	京ICP备2021028872号-1
	&lt;/a>
&lt;/div>&lt;!-- .site-info --></pre>
<!-- /wp:preformatted -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date><![CDATA[2022-02-16 22:48:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-16 14:48:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-16 22:48:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-16 14:48:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[blogconfig]]></wp:post_name>
		<wp:status><![CDATA[private]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[test]]></title>
		<link>https://blog.zhuanjie.ltd/?p=631</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=631</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>test</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>631</wp:post_id>
		<wp:post_date><![CDATA[2022-05-29 14:53:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-05-29 14:53:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						</item>
					<item>
		<title><![CDATA[第3章 数据链路层]]></title>
		<link>https://blog.zhuanjie.ltd/?p=820</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=820</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 id="第三章-数据链路层">第三章 数据链路层</h1>
<p>#计算机网络</p>
<h2 id="名词解释">名词解释</h2>
<ol>
<li>结点：主机、路由器</li>
<li>链路：网络中两个节点之间的物理通道，<strong>传输介质有双绞线、光纤和微波</strong>，分为有线链路和无线链路</li>
<li>数据链路：网络中两个结点的逻辑通道，把实现控制传输协议的硬件和软件加在链路上就构成了数据链路</li>
<li>帧：链路层协议数据单元，封装网络层数据报</li>
<li>MTU：最大传送送单元。指的是帧数据部分的上限 ^ed55c4</li>
</ol>
<h2 id="数据链路层的功能">数据链路层的功能</h2>
<p>负责通过一条链路，从一个结点向另一个物理链路直接相连的相邻结点传送数据报</p>
<ol>
<li>为网络层提供服务<ol>
<li>无确认、无连接服务（实时通信、误码率较低的通信信道。<em>如：以太网</em>）</li>
<li>有确认无连接的服务（误码率较高的通信信道。<em>如：无线通信</em>）</li>
<li>有确认面向连接的服务（通信实时性、可靠性较高的场合）<blockquote>
<p>有连接就一定有确认</p>
</blockquote>
</li>
</ol>
</li>
<li>链路管理：连接的建立维持和释放</li>
<li>组帧：帧定界、帧同步和透明传输
透明传输：不管传送的数据是怎样的比特组合都能在链路上传输</li>
<li>流量控制</li>
<li>差错控制：帧错/位错</li>
</ol>
<h2 id="组帧的方式（常用比特填充法和违规编码法）">组帧的方式（常用比特填充法和违规编码法）</h2>
<ol>
<li><p>字符计数法
在帧头部使用一个计数字段来标明帧内字符数（包括自己本身）
<img src="%E5%AD%97%E7%AC%A6%E8%AE%A1%E6%95%B0%E6%B3%95.png" alt="字符计数法.png"></p>
</li>
<li><p>字符填充法
用特定的字符来定界帧的开始与结束，若信息中出现特殊字符则在特殊字符前填充一个转义字符（ESC来区分）
SOH：Start Of Header
EOT：End Of Transmission
<img src="%E5%AD%97%E8%8A%82%E5%A1%AB%E5%85%85%E6%B3%95.png" alt="字节填充法.png"></p>
</li>
<li><p>零比特填充法
用01111110来标志帧的开始与结束。发送方如果在信息中碰到连续的5个1时自动在后面插入一个0，接收方在信息中每收到5个连续的1自动删除后面紧跟着的0</p>
<blockquote>
<p>零比特填充法比字符填充法更易于用硬件实现，固性能更优</p>
</blockquote>
</li>
<li><p>违规编码法（IEEE802采用此种组帧方式）
如曼彻斯特编码就是将1编码为前高后低，将0编码为前低后高，则使用前高后高和前低后低用来帧定界</p>
</li>
</ol>
<h2 id="差错控制（检错纠错）（比特错）">差错控制（检错/纠错）（比特错）</h2>
<p>差错由噪声引起
噪声的性质</p>
<ol>
<li>全局性：线路的电器特性差生，随机噪声</li>
<li>局部性：外界冲击噪声</li>
</ol>
<pre><code class="language-tree">└─差错
   ├─位错
   └─帧错
      ├─丢失
      ├─重复
      └─失序
</code></pre>
<blockquote>
<p><strong>在物理层中：编码仅针对单个比特，解决比特在传输中的同步问题</strong>
<strong>在数据链路层中：编码针对一组比特检验差错</strong></p>
</blockquote>
<ol>
<li>检错编码<ol>
<li>奇偶校验码（及n-1位信息元与1位校验元组成奇/偶个1）（<strong>只能检验出奇数个错误</strong>）</li>
<li>循环冗余码（CRC）（r位的FCS（帧检验序列）=&gt;r+1位的多项式） <blockquote>
<p>模二除法：同0亦1
r位的FCS&lt;=&gt;r+1位的多项式&lt;=&gt;多项式阶数为r&lt;=&gt;多项式为aX<sup>r</sup>+bX<sup>r-1</sup>+...+yX+zX<sup>0</sup>（共r+1位）（a~z为r+1位）</p>
</blockquote>
</li>
</ol>
</li>
</ol>
<p>计算循环冗余码：（硬件实现）
<img src="%E5%BE%AA%E7%8E%AF%E5%86%97%E4%BD%99%E7%A0%81%E8%AE%A1%E7%AE%97.png" alt="循环冗余码计算.png"></p>
<p>接收端将接受到的数据除以r+1位的多项式，余数为0则接受，否则丢弃。</p>
<blockquote>
<p>ATT：数据链路层对于帧的无差错接受是<strong>非可靠传输</strong>，因为有传输错误的帧被丢弃了
def.<strong>可靠传输：发送端发送的数据=接收端接收的数据</strong></p>
</blockquote>
<ol start="2">
<li>纠错编码（海明码）</li>
</ol>
<blockquote>
<p>海明距离：两个合法编码（码字）的对应比特取值不同的比特数，称这两个码字的海明距离（码距），一个编码集中，任意两个合法编码（码字）的海明距离称为该码集的海明距离（码距）
如果要检测出n位错误，码距最少为n+1；若要纠正n位置错误，码距最少为2n+1
两个编码之间的码距为不同字符的位数，编码集中码距表示任意两个码距的最小值</p>
</blockquote>
<p>eg. 100和111之间码距为1；000，001，010，011，100，101，110，111之间码距为1</p>
<ul>
<li>以1100为例</li>
</ul>
<ol>
<li><p>确定海明码的位数（数据n位，校验码k位（校验码有2<sup>k</sup>种取值））</p>
<blockquote>
<p>海明不等式：n+k≤2<sup>k</sup>-1</p>
</blockquote>
</li>
<li><p>确定校验位的分布</p>
<blockquote>
<p>规定校验位P<sub>i</sub>在海明位号为2<sup>i-1</sup>的位置上
左边为高位，数据从高位填起</p>
</blockquote>
</li>
</ol>
<table>
<thead>
<tr>
<th align="center">序号</th>
<th align="center">7</th>
<th align="center">6</th>
<th align="center">5</th>
<th align="center">4</th>
<th align="center">3</th>
<th align="center">2</th>
<th align="center">1</th>
</tr>
</thead>
<tbody><tr>
<td align="center">序号对应二进制</td>
<td align="center">111</td>
<td align="center">110</td>
<td align="center">101</td>
<td align="center">100</td>
<td align="center">011</td>
<td align="center">010</td>
<td align="center">001</td>
</tr>
<tr>
<td align="center">值</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">x<sub>4</sub></td>
<td align="center">0</td>
<td align="center">x<sub>2</sub></td>
<td align="center">x<sub>1</sub></td>
</tr>
</tbody></table>
<ol start="3">
<li><p>分组以形成校验关系
根据序号对应二进制可以看出对</p>
<ul>
<li>x<sub>4</sub>校验码负责4、5、6、7的校验</li>
<li>x<sub>2</sub>校验码负责2、3、6、7的校验</li>
<li>x<sub>1</sub>校验码负责1、3、5、7的校验<blockquote>
<p>分组内通常采用偶校验</p>
</blockquote>
</li>
</ul>
</li>
<li><p>校验位取值
偶校验即x<sub>4</sub>=0；x<sub>2</sub>=0；x<sub>1</sub>=1
即完整海明码：1100001</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>7</th>
<th>6</th>
<th>5</th>
<th>4</th>
<th>3</th>
<th>2</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td>序号对应二进制</td>
<td>111</td>
<td>110</td>
<td>101</td>
<td>100</td>
<td>011</td>
<td>010</td>
<td>001</td>
</tr>
<tr>
<td>值</td>
<td>1</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
</tr>
</tbody></table>
<ol start="5">
<li>海明码校验原理
计算校验方法：<ol>
<li>手算校验码，若出错找差并集</li>
<li>求满足：
  a⊕x<sub>4</sub>⊕x<sub>5</sub>⊕x<sub>6</sub>⊕x<sub>7</sub>=0
  b⊕x<sub>2</sub>⊕x<sub>3</sub>⊕x<sub>6</sub>⊕x<sub>7</sub>=0
  c⊕x<sub>1</sub>⊕x<sub>3</sub>⊕x<sub>5</sub>⊕x<sub>7</sub>=0
  的a、b、c，则abc对应的十进制即为出错位；abc为000则未出错
  （eg.收到的海明码为1110001；计算球得a=1，b=0，c=1，出错位为5）</li>
</ol>
</li>
</ol>
<h2 id="流量控制与可靠传输机制">流量控制与可靠传输机制</h2>
<p>链路层流量控制手段：接收方收不下就不回复
传输层流量控制手段：接收方给发送方发送一个窗口公告
链路层的流量控制是点对点的（每两个相邻结点），传输层的流量控制是端到端的（数据的传输方和接收方）</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">发送窗口</th>
<th align="center">接收窗口</th>
<th align="center">问题</th>
</tr>
</thead>
<tbody><tr>
<td align="center">停止-等待协议</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">传输效率低</td>
</tr>
<tr>
<td align="center">后退n帧协议（GBN）</td>
<td align="center">&gt;1</td>
<td align="center">1</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">选择重传协议（SR）</td>
<td align="center">&gt;1</td>
<td align="center">&gt;1</td>
<td align="center"></td>
</tr>
</tbody></table>
<blockquote>
<p>链路层的滑动窗口在传输过程中为固定值，网络层的滑动窗口在传输过程中会随之改变
滑动窗口协议中的计时器设定时间为重传时间，重传时间应该比平均RTT更长一些</p>
</blockquote>
<pre><code class="language-tree">└─滑动窗口解决
   ├─流量控制
   └─可靠传输（ARQ自动重传）
</code></pre>
<blockquote>
<p>信道利用率：在一个发送周期内，有效地发送的数据的时间占总周期的比例
信道吞吐率：信道利用率*发送方的发送速率</p>
</blockquote>
<blockquote>
<p>信道利用率=(L/c)/T（<strong>信道利用率=发送方数据发送时间/发送方数据发送时间+RTT+发送方确认帧接受时间</strong>）</p>
</blockquote>
<p>L：T内发送L比特数据
c：发送方数据传输率
T：发送周期，从开始发送数据到收到第一个确认帧</p>
<p><strong>1. 单帧滑动窗口与停止-等待协议（停止-等待协议相当于发送窗口和接收窗口大小均为1的滑动窗口协议）</strong>
由于每发送一个数据帧就停止等待，因此用1bit来编号就已足够
    1. 发送发送完数据帧时，必须在其发送缓存中保留此数据帧的副本
    2. 数据帧和确认帧必须编号</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">停止-等待协议</th>
</tr>
</thead>
<tbody><tr>
<td align="center">优点</td>
<td align="center">简单</td>
</tr>
<tr>
<td align="center">缺点</td>
<td align="center">信道利用率低</td>
</tr>
</tbody></table>
<p><strong>2. 多帧滑动窗口与后退N帧协议（GBN）</strong></p>
<ul>
<li>ACK<sub>n</sub>表示对第n号帧的确认，表示接收方已正确接收到n号帧以及以前的所有帧（<strong>累计确认</strong>）</li>
<li>若用n比特对帧编号，则其发送窗口尺寸<strong>W<sub>T</sub>应满足 1≤W<sub>T</sub>≤2<sup>n</sup>-1</strong></li>
<li>接收方只接受接下来应该收到的一个帧（expectedseqnum），不是则会丢弃；出现超时，发送方发送所有已发送但是未被确认的帧</li>
<li>GBN协议必须相应的三件事：<ol>
<li>上层的调用</li>
<li>收到一个ACK</li>
<li>超时事件</li>
</ol>
</li>
</ul>
<p><strong>3. 多帧滑动窗口与选择重传协议（SR）</strong></p>
<ul>
<li>选择重传协议的接受窗口W<sub>R</sub>尺寸和发送窗口W<sub>T</sub>尺寸都大于一</li>
<li>接收窗口W<sub>R</sub>+发送窗口W<sub>T</sub>小于等于2<sup>n</sup></li>
<li>发送窗口最好等于接受窗口，大了会溢出，小了无意义</li>
<li>W<sub>Tmax</sub>=W<sub>Rmax</sub>=2<sup>n-1</sup>（n表示序号的比特数）</li>
<li>SR协议总结：<ol>
<li>对数据帧逐一确认，收一个确认一个</li>
<li>只重传出错帧</li>
<li>接收方有缓存</li>
<li>W<sub>Tmax</sub>=W<sub>Rmax</sub>=2<sup>n-1</sup>（n表示序号的比特数）</li>
</ol>
</li>
</ul>
<h2 id="介质访问控制（静态动态划分信道）">介质访问控制（静态/动态划分信道）</h2>
<pre><code class="language-tree">└─传输数据的两种链路
   ├─点对点链路（广域网）
   │  └─ppp协议
   └─广播式链路（早期以太网、局域网）
      └─拓扑结构：逻辑上总线型，物理上总线型或星型
</code></pre>
<h3 id="信道划分介质访问控制（实质上是把广播信号变为点对点信号）">信道划分介质访问控制（实质上是把广播信号变为点对点信号）</h3>
<blockquote>
<p>静态划分信道</p>
</blockquote>
<p>信道划分介质访问控制：将使用介质的每一个设备与来自同一信道上的其他通信设备隔离开，把时域、频域资源合理的分配给网络上的设备
介质访问控制：MAC（Multiple Access Control）
多路复用：结合两条或者多条线路传输，以充分利用信道</p>
<ol>
<li>频分多路复用（FDM）（F：frequency）<strong>模拟信号</strong>
类似”并行“
优点：充分利用传输介质的带宽，系统效率较高，较容易实现
<img src="%E9%A2%91%E5%88%86%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.png" alt="频分多路复用.png"></li>
<li>时分多路复用（TDM）（T：time）<strong>数字信号</strong>
类似”并发“
统计时分多路复用（STDM）是TDM的一种改进，采用STDM帧，STDM帧并不固定分配时隙，而是动态分配时隙（时隙≤用户数量）
<img src="%E6%97%B6%E5%88%86%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.png" alt="时分多路复用.png"></li>
</ol>
<blockquote>
<p>这里的TDM帧和STDM帧不是物理层的帧，是周期的标志</p>
</blockquote>
<blockquote>
<p>TDM与FDM相比抗干扰能力强</p>
</blockquote>
<ol start="3">
<li>波分多路复用（WDM）（W:wave）
光（波）的频分多路复用</li>
<li>码分多路复用（CDM）（C：code）
码分多址：CDMA
<strong>CDMA原理：</strong></li>
</ol>
<blockquote>
<p>==TODO:CDMA原理:page91==</p>
</blockquote>
<h3 id="随机访问介质访问控制">随机访问介质访问控制</h3>
<blockquote>
<p>动态分配信道（动态媒体接入控制/多点接入）</p>
</blockquote>
<ol>
<li><p>ALOHA协议（不听就说协议）</p>
<ol>
<li>纯ALOHA协议（想发就发）
冲突检测：未收到确认帧
冲突处理：等待随机时间重传
纯ALOHA协议网络的 <strong>吞吐量（一段时间内成功发送的平均帧数）</strong> 很低
纯ALOHA协议最大网络吞吐量S为0.184</li>
<li>时隙ALOHA协议（控制了想法就发的随意性）
将各站在时间上同步起来，并且划分为一段段等长的时隙（Solt），只有在每个时隙开始才能发送一个帧<blockquote>
<p>关于ALOHA协议：</p>
<ol>
<li>纯ALOHA协议比时隙ALOHA协议吞吐量更低，效率更低</li>
<li>纯ALOHA协议想发就发、时隙ALOHA协议只有在时间片段开始时才能发</li>
</ol>
</blockquote>
</li>
</ol>
</li>
<li><p>CSMA协议（先听再说协议）
CSMA：载波监听多路访问
协议思想：发送数据帧之前监听信道</p>
<ol>
<li><strong>1-坚持CSMA</strong>
首先监听信道，如果空闲就立即发送数据，如果信道忙，就等待，同时继续监听直至信道空闲；如果<strong>发送冲突</strong>，那么随机等待一段时间后再重新开始侦听信道
优点：媒体利用率高
缺点：如果有2个或者多个站点再等待则必然发生冲突</li>
<li><strong>非坚持CSMA</strong>
如果信道空闲则立即发送数据；如果信道忙，则放弃监听，等待一个随机的时间后再重复上述过程
优点：采用随机的重发延迟时间，减少冲突
缺点：可能降低媒体利用率</li>
<li><strong>p-坚持CSMA</strong>
如果信道忙，就持续监听，直至信道空闲；如果信道空闲，则以概率p发送数据，以1-p的概率推迟到下一个时隙
优点：能减少冲突也能减少媒体空闲时间</li>
</ol>
</li>
</ol>
<table>
<thead>
<tr>
<th align="center">信道状态</th>
<th align="center">1-坚持CSMA</th>
<th align="center">非坚持CSMA</th>
<th align="center">p-坚持CSMA</th>
</tr>
</thead>
<tbody><tr>
<td align="center">空闲</td>
<td align="center">立即发送数据</td>
<td align="center">立即发送数据</td>
<td align="center">以概率p发送数据，以概率1-p推迟到下一个时隙</td>
</tr>
<tr>
<td align="center">忙</td>
<td align="center">继续坚持侦听</td>
<td align="center">放弃侦听，等待一个随机的时间后再侦听</td>
<td align="center">持续侦听，直至信道空闲</td>
</tr>
</tbody></table>
<blockquote>
<p>p-坚持CSMA协议适用于时隙信道。p-坚持中持续监听的意思是推迟到下一个时隙开始再监听</p>
</blockquote>
<ol start="3">
<li>CSMA/CD协议（先听再说，边听边说）<strong>（总线型网络，半双工网络）</strong>
<strong>CS</strong>：载波监听  <strong>MA</strong>：多点接入  <strong>CD</strong>：碰撞检测、冲突检测
以太网端到端的往返时间2τ称为争用期（或冲突窗口、碰撞窗口）
帧的传输时延至少要两倍于信号在总线中的传播时延（防止发送完帧后才发现发生冲突）；即：<strong>帧长/数据传输速率≥2τ</strong></li>
</ol>
<blockquote>
<p><strong>最小帧长=总线传播时延*数据传输速率*2</strong></p>
</blockquote>
<p>以太网最短帧长=64B
<img src="%E4%BC%A0%E6%92%AD%E6%97%B6%E5%BB%B6%E5%AF%B9%E8%BD%BD%E6%B3%A2%E7%9B%91%E5%90%AC%E7%9A%84%E5%BD%B1%E5%93%8D.png" alt="传播时延对载波监听的影响.png">
CSMA/CD协议采用<strong>二进制退避算法</strong>解决碰撞问题：
    1. 确定基本退避时间，一般取两倍总线端到端传输时延2τ（争用期）
    2. 定义参数k，重传次数小于10时k等于重传次数，否则k=10，即k=min[重传次数, 10]
    3. 从离散的整数集合[0, 1,..., 2<sup>k</sup>-1]中随机取出一个整数r，重传所需的退避时间就是r倍的基本退避时间，即：2rτ
    4. 重传达16次（<strong>最大重传次数</strong>）仍不能成功时，认为此帧永远无法正确发出，抛弃此帧并向上层报告</p>
<ol start="4">
<li>CSMA/CA协议 <strong>（无线局域网）</strong>
<strong>CA</strong>：碰撞避免<ol>
<li>CSMA/CA协议的三个手段：<ol>
<li>预约信道</li>
<li>ACK帧</li>
<li>RTS/CTS帧（可选）</li>
</ol>
</li>
<li>IFS：帧间间隔。802.11规定所有站完成发送后，必须再等待一段很短的时间（继续监听）才能发送下一帧。802.11规定了3种IFS，从短到长依次是SIFS、PIFS、DIFS</li>
<li>CSMA/CA算法：<ol>
<li>若站点最初有数据发送（非重传），且信道空闲，在等待时间DIFS后，发送整个数据帧</li>
<li>否则执行CSMA/CA退避算法，选取一个随机回退值（二进制退避算法）。一旦检测到信道忙，退避计时器保持不变。只要信道空闲，退避计时器就进行倒计时</li>
<li>当退避计时器减到0时（这时候信道只能是空闲的），站点就发送整个数据帧并等待确认</li>
<li>发送站若收到确认则已发送帧被目的站正确接收。如果发送第二帧就要从步骤2开始</li>
</ol>
</li>
<li>处理隐蔽站问题：RTS和CTS
检测空闲，若空闲则发送一个RTS，接收端接受RTS并相应CTS，发送端收到CTS后开始发送数据帧（同时预约信道）接收方接收到数据，相应ACK，发送端未接收到ACK则采用二进制退避算法来确定重传时间</li>
</ol>
</li>
</ol>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">CSMA/CD协议</th>
<th align="center">CSMA/CA协议</th>
</tr>
</thead>
<tbody><tr>
<td align="center">冲突</td>
<td align="center">可以检测冲突，但是无法避免</td>
<td align="center">发送数据的同时不能检测信道上有无冲突，本结点上没有冲突不意味接收结点没有冲突，只能尽量避免</td>
</tr>
<tr>
<td align="center">传输介质</td>
<td align="center">总线型以太网</td>
<td align="center">无线局域网802.11a/b/h/n等</td>
</tr>
<tr>
<td align="center">检测方式</td>
<td align="center">通过电缆中的电压变化来检测</td>
<td align="center">能量检测、载波检测和能量载波混合检测</td>
</tr>
<tr>
<td align="center">基本思想</td>
<td align="center">发前侦听，边发边听，一旦碰撞立马停止发送</td>
<td align="center">发送数据前告知其他结点</td>
</tr>
</tbody></table>
<h3 id="轮询访问介质访问控制令牌传递">轮询访问介质访问控制——令牌传递</h3>
<blockquote>
<p>动态分配信道（动态媒体接入控制/多点接入）</p>
</blockquote>
<pre><code class="language-tree">└─轮询访问MAC协议
   ├─轮询协议
   └─令牌传递协议
</code></pre>
<p><strong>令牌</strong>是一个特殊的MAC控制帧，它本身不包含信息，仅控制信道的使用，确保同一时刻只有一个站点独占信道。应用于<strong>令牌环网</strong>（<strong>物理上星型拓扑，逻辑上环形拓扑</strong>）。适用于负载大通信量大的网络</p>
<p>轮询协议的问题：</p>
<ol>
<li>轮询开销</li>
<li>等待开销</li>
<li>单点故障</li>
</ol>
<p>令牌传递协议的问题：</p>
<ol>
<li>令牌开销</li>
<li>等待开销</li>
<li>单点故障</li>
</ol>
<h2 id="局域网（广播信道）">局域网（广播信道）</h2>
<p>局域网的<strong>特点</strong>：</p>
<ol>
<li>地理范围小</li>
<li>传输速率高</li>
<li>通信延迟时间短，误码率低</li>
<li>各站平等关系，共享传输信道</li>
<li>采用分布式控制和广播式通信，进行广播和组网</li>
</ol>
<p>局域网的<strong>拓扑结构</strong>：</p>
<ol>
<li>星型拓扑</li>
<li>总线型拓扑</li>
<li>环型拓扑</li>
<li>树型拓扑</li>
</ol>
<p>局域网的<strong>传输介质</strong>：</p>
<ol>
<li>有线局域网：双绞线、同轴电缆、光纤</li>
<li>无线局域网：电磁波</li>
</ol>
<p>局域网的<strong>介质访问控制</strong>：</p>
<ol>
<li>CSMA/CD
总线型局域网、树型局域网</li>
<li>令牌总线
总线型局域网、树型局域网</li>
<li>令牌环
用于环形局域网</li>
</ol>
<p>局域网的<strong>分类</strong>：</p>
<ol>
<li>以太网
逻辑：总线型；物理：星型；协议：CSMA/CD</li>
<li>令牌环网
逻辑：环型；物理：星型</li>
<li>FDDI
逻辑：环型；物理：双环型</li>
<li>ATM
使用53字节进行交换</li>
<li>无线区域网（WLAN）
采用IEEE802.11标准</li>
</ol>
<h3 id="以太网与ieee8023">以太网与IEEE802.3</h3>
<p>以太网A.K.A.802.3局域网，采用CSMA/CD技术，特点：</p>
<ol>
<li>造价低廉</li>
<li>应用广泛</li>
<li>比令牌环网、ATM网便宜、简单</li>
<li>满足网络速率要求</li>
</ol>
<blockquote>
<p>IEEE802.3：以太网介质访问控制协议
IEEE802.5：令牌环网
IEEE802.8：光纤技术咨询组
IEEE802.11：无线局域网</p>
</blockquote>
<p>以太网标准：1. DIX Ethernet V2标准 2. 802.3标准</p>
<p>以太网简化通讯的方式：</p>
<ol>
<li>采用无连接的工作方式，不对发送的数据帧编号，也不要求接收方发送确认</li>
<li>发送的数据都使用曼彻斯特编码</li>
</ol>
<h4 id="以太网的传输介质与网卡">以太网的传输介质与网卡</h4>
<p>网络适配器/网卡接口
介质访问控制（MAC）地址/硬件地址/物理地址</p>
<h4 id="以太网的mac帧">以太网的MAC帧</h4>
<p><img src="%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%B8%A7%E7%BB%93%E6%9E%84.png" alt="以太网帧结构.png"></p>
<blockquote>
<p>其中类型2字节描述上层协议；46～1500来源是以太网最小帧长64B-首位18B=46B，以太网的MTU规定为1500；FCS检测帧采用CRC循环冗余码校验</p>
</blockquote>
<h4 id="高速以太网（速率≥100mbs）">高速以太网（速率≥100MB/s）</h4>
<ol>
<li>100BASE-T以太网
<strong>全双工/半双工</strong></li>
<li>吉比特以太网
<strong>全双工/半双工</strong>
光纤/双绞线</li>
<li>10吉比特以太网
<strong>全双工</strong>
光纤</li>
</ol>
<h3 id="ieee80211无线局域网">IEEE802.11无线局域网</h3>
<h4 id="无线局域网的组成（分类）">无线局域网的组成（分类）</h4>
<ol>
<li>有固定基础设施的无线局域网
中心成为接入点（AP，Access Point），在MAC层使用CSMA/CA协议
BBS：基本服务集，无线局域网的最小构件
SSID：服务集标识符，指的是使用该AP的无线局域网的名字</li>
<li>无固定基础设施移动自组织网络</li>
</ol>
<h4 id="ieee80211局域网的mac帧">IEEE802.11局域网的MAC帧</h4>
<p><img src="802.11%E5%B1%80%E5%9F%9F%E7%BD%91%E6%95%B0%E6%8D%AE%E5%B8%A7.png" alt="802.11局域网数据帧.png"></p>
<p><strong>在两个AP之间传输时，RA和TA为AP地址</strong></p>
<p><img src="802.11mac%E5%B8%A7%E5%A4%B4%E6%A0%BC%E5%BC%8F.png" alt="802.11mac帧头格式.png"></p>
<h4 id="vlan">VLAN</h4>
<p>通过虚拟局域网（Virtual LAN，VLAN），可以把一个较大的局域网分割成一些小的与地理位置无关的逻辑上的VLAN，而每个VLAN是一个较小的<strong>广播域</strong>
交换机上生成的各VLAN之间互不相通，若要通信，需借助<strong>路由器或三层交换机</strong></p>
<p><img src="802.1q%E5%B8%A7.png" alt="802.1q帧.png"></p>
<blockquote>
<p>交换机之间传送数据帧时，会将MAC帧插入4字节的VLAN标记，前两个字节表明是IEEE802.1Q帧，中间4位没用，最后1<strong>2位是VLAN标识符VID</strong>
VID的12取值可以为0～4095，但是<strong>VID的取值为1～4094</strong>（非全0或者全1）</p>
</blockquote>
<h2 id="广域网">广域网</h2>
<p><strong>广域网的子网采用分组交换技术</strong>
覆盖范围很广的长距离网络</p>
<table>
<thead>
<tr>
<th align="center"><strong>广域网与局域网的不同点</strong></th>
<th align="center">广域网</th>
<th align="center">局域网</th>
</tr>
</thead>
<tbody><tr>
<td align="center">覆盖范围</td>
<td align="center">很广，通常跨时区</td>
<td align="center">较小</td>
</tr>
<tr>
<td align="center">连接方式</td>
<td align="center">结点之间都是<strong>点到点</strong>连接，但是为了提高网络可靠性，一个结点交换机通常与多个结点交换机相连</td>
<td align="center">普遍采用<strong>多点接入</strong>技术</td>
</tr>
<tr>
<td align="center">OSI参考模型层次</td>
<td align="center">三层：物理层、数据链路层、网络层</td>
<td align="center">两层：物理层、数据链路层</td>
</tr>
<tr>
<td align="center">着重点</td>
<td align="center">资源共享</td>
<td align="center">数据传输</td>
</tr>
</tbody></table>
<p><strong>广域网与局域网的联系和相似点</strong>：</p>
<ol>
<li>广域网和局域网都是互联网的重要组成构件，从互联网角度看，二者平等</li>
<li>连接到一个广域网或一个局域网上的主机在该网内进行通信时，只需要使用其网络的物理地址</li>
</ol>
<h3 id="ppp协议（只支持全双工链路）（面向字节）">PPP协议（<strong>只支持全双工链路</strong>）（<strong>面向字节</strong>）</h3>
<p>PPP协议要求：</p>
<ol>
<li>简单</li>
<li>封装成帧</li>
<li>透明传输（异步路线：字节填充；同步路线：比特填充）</li>
<li>多种网络层协议</li>
<li>多种类型链路</li>
<li>差错检测</li>
<li>检测连接状态</li>
<li>最大传送单元MTU</li>
<li>网络层地址协商</li>
<li>数据压缩协商</li>
</ol>
<p>PPP协议的三个组成部分：</p>
<ol>
<li>链路控制协议（LCP），一种拓展链路控制协议（<strong>身份验证</strong>），用于建立、配置、测试和管理数据链路</li>
<li>网络控制协议（NCP），PPP协议允许同时采用多种网络层协议，每个不同的网络层协议要用一个相应的NCP来配置，为网络层协议建立和配置逻辑连接</li>
<li>将IP数据报封装到串行（同步/异步串行）</li>
</ol>
<p>PPP协议无需满足的要求：</p>
<ol>
<li>纠错</li>
<li>流量控制</li>
<li>序号</li>
<li>不支持多点线路</li>
</ol>
<p><img src="ppp%E5%8D%8F%E8%AE%AE%E5%B8%A7%E6%A0%BC%E5%BC%8F.png" alt="ppp协议帧格式.png"></p>
<h3 id="hdlc协议（只支持全双工链路）（面向比特）">*HDLC协议（<strong>只支持全双工链路</strong>）（<strong>面向比特</strong>）</h3>
<p>HDLC：高级数据链路控制
透明传输：0比特插入法
HDLC的站：主站，从站，复合站
3种数据操作方式：</p>
<ol>
<li>正常相应方式</li>
<li>异步平衡方式</li>
<li>异步相应方式</li>
</ol>
<p><img src="hdlc%E5%B8%A7%E6%A0%BC%E5%BC%8F.png" alt="hdlc帧格式.png"></p>
<h3 id="ppp协议与hdlc协议的异同">PPP协议与HDLC协议的异同</h3>
<p>相同：</p>
<ol>
<li>只支持全双工链路</li>
<li>透明传输（PPP协议支持异步的字节填充和同步的比特填充，HDLC只支持比特填充）</li>
<li>都有差错检测但是不纠正差错</li>
</ol>
<p>不同点：</p>
<ol>
<li><strong>PPP协议</strong>是<strong>面向字节</strong>的，<strong>HDLC</strong>是<strong>面向比特</strong>的</li>
<li>PPP协议比HDLC多一个2字节的协议字段</li>
<li><strong>PPP协议不使用序号和确认机制</strong>，<strong>HDLC协议使用了编号和确认机制，能提供可靠传输</strong></li>
</ol>
<h2 id="数据链路层设备">数据链路层设备</h2>
<h3 id="网桥">网桥</h3>
<p>网桥工作在数据链路层的MAC子层，使得隔离碰撞域（冲突域）</p>
<p>网桥的优点：</p>
<ol>
<li>过滤通信量，增大吞吐量</li>
<li>扩大了物理范围</li>
<li>提高了可靠性</li>
<li>互联不同物理层、不同MAC子层、和不同速率的以太网</li>
</ol>
<h3 id="交换机">交换机</h3>
<p>多借口网桥</p>
<p>交换机的两种模式：</p>
<ol>
<li>直通式交换机
帧接收后立马传送出去
<strong>优点</strong>：速度快
<strong>缺点</strong>：缺乏安全性，也不支持不同速率的端口的交换</li>
<li>存储转发式交换机
确认无误后通过查找表转换输出端口将该帧发送出去
<strong>优点</strong>：可靠性高，并能支持不同速率的端口间的转换
<strong>缺点</strong>：延迟较大</li>
</ol>
<p>结点交换机：在广域网中，结点之间都是点到点连接，但为了提高网络可靠性，通常一个结点交换机与多个结点交换机相连 ^nodeswitch</p>
<hr>
<p><strong>关于冲突域和广播域</strong></p>
<table>
<thead>
<tr>
<th align="center">设备</th>
<th align="center">所属层次</th>
<th align="center">能否隔离冲突域</th>
<th align="center">能否隔离广播域</th>
</tr>
</thead>
<tbody><tr>
<td align="center">集线器</td>
<td align="center">物理层</td>
<td align="center">不能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">中继器</td>
<td align="center">物理层</td>
<td align="center">不能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">交换机</td>
<td align="center">数据链路层</td>
<td align="center">能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">网桥</td>
<td align="center">数据链路层</td>
<td align="center">能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">路由器</td>
<td align="center">网络层</td>
<td align="center">能</td>
<td align="center">能</td>
</tr>
</tbody></table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>820</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:40:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:40:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%a0%94"><![CDATA[研]]></category>
						</item>
					<item>
		<title><![CDATA[第4章 网络层]]></title>
		<link>https://blog.zhuanjie.ltd/?p=822</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=822</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 id="第四章-网络层">第四章 网络层</h1>
#计算机网络

目的：在任意结点间进行数据报传输
<h2 id="网络层功能">网络层功能</h2>
把分组从源端传送的目的端

网络层的功能：
<ol>
 	<li>路由选择与分组转发（<strong>选择最佳路径</strong>）</li>
 	<li>异构网络互连</li>
 	<li>拥塞控制（宏观网络整体）
控制方法：
<ol>
 	<li>开环控制（静）（提前手动控制）</li>
 	<li>闭环控制（动）（系统自动调控）</li>
</ol>
</li>
</ol>
<h3 id="路由与转发">路由与转发</h3>
<strong>路由选择</strong>：路由器之间的路由方式（<strong>宏观</strong>）（时间短，硬件解决）

<strong>分组转发</strong>：到达输入链路之一的数据报如何传输到该路由器的输出链路之一（<strong>微观</strong>）（时间长，软件解决）

<img class="alignnone" src="/img/%E8%80%83%E7%A0%94/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%B1%82%E4%B8%A4%E5%A4%A7%E5%B9%B3%E9%9D%A2.png" alt="网络层两大平面.png" width="177" height="32" />

<strong>数据平面</strong>：对于数据处理过程中，各种具体处理转发过程
功能：根据转发表进行转发（路由器本地动作）

<strong>控制平面</strong>：控制和管理网络协议的运行，比如OSPF协议、RIP协议、BGP协议
<ol>
 	<li>传统方法（每路由方法）
路由选择算法运行在每台路由器中，每台路由器都包含转发和路由选择两种功能
<img src="/img/%E8%80%83%E7%A0%94/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BC%A0%E7%BB%9F%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.png" alt="传统控制平面.png" /></li>
 	<li>SDN（Software Define Networking）
控制平面从路由器物理上分离，路由器仅实现转发，远程控制器计算和分发转发表以供每台路由器使用
<img src="/img/%E8%80%83%E7%A0%94/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/sdn.png" alt="sdn.png" /></li>
</ol>
<strong>路由选择控制器</strong>：
<ol>
 	<li>传统：路由选择处理器<strong>执行控制平面功能</strong>。在传统的路由器中，它执行路由选择协议，维护路由选择表与关联链路状态信息，并为该路由器计算转发表</li>
 	<li>SDN：在SDN路由器中，路由选择处理器<strong>负责与远程控制器通信</strong>，目的是接收远程控制器计算的转发表项</li>
</ol>
<strong>SDN控制平面</strong>：
<ol>
 	<li>SDN控制器：维护准确的网络状态信息（远程链路、路由器和主机的状态)；为运行在控制平面中的网络控制应用程序提供这些信息（逻辑集中，在多台服务器上实现)</li>
 	<li>网络控制应用程序：根据SDN控制器提供的方法，这些应用程序通过这些方法能够监视、编程和控制下面的网络设备</li>
</ol>
<img src="/img/%E8%80%83%E7%A0%94/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/sdn%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.png" alt="sdn控制平面.png" />

<strong>SDN控制器的三个层次</strong>：
<ol>
 	<li>对于网络控制应用程序的接口：
SDN控制器通过”北向接口”与网络控制应用程序交互。该API允许网络控制应用程序在状态管理层之间读写网络状态</li>
 	<li>网络范围状态管理层：
有SDN控制平面作出的最终控制决定，将要求控制器具有有关网络的主机、链路等最新状态信息</li>
 	<li>通信层：
SDN控制器与受控网络设备之间的通信(<strong>OpenFlow协议（ATT：控制层面和数据层面之间的接口，而不是取代路由协议）</strong>)，包含“南向接口”</li>
</ol>
<img src="/img/%E8%80%83%E7%A0%94/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/sdn%E6%8E%A7%E5%88%B6%E5%99%A8%E7%9A%84%E4%B8%89%E4%B8%AA%E5%B1%82%E6%AC%A1.png" alt="sdn控制器的三个层次.png" />
<h2 id="路由算法">路由算法</h2>
最佳路由：”最佳“只能是相对于某一种特定要求下得出的较为合理的选择
<ol>
 	<li>静态路由算法（非自适应路由算法）
网络管理员手工配置路由信息
优点：简便、可靠，在负荷稳定、拓扑变化不大的网络中运行较好，用于高度安全性的军事网络和较小的商业网路
缺点：路由更新慢，不适用大型网络</li>
 	<li>动态路由算法（自适应路由算法）
路由器上路由表项是通过相互连接的路由器之间彼此交换信息，然后按照一定算法优化出来的
优点：路由更新快，适用大型网络，及时响应链路费用或网络拓扑变化
缺点：算法复杂，增加网络负担
<ol>
 	<li>全局性 链路状态路由算法OSPF
所有路由器掌握完整的网络拓扑和链路费用信息
OSPF协议每个路由器得到完整拓扑结构后使用Dijkstra算法来计算路径</li>
 	<li>分散性 距离向量路由算法RIP
路由器只掌握物理相连的邻居及链路费用</li>
</ol>
</li>
</ol>
<h3 id="路由层次">路由层次</h3>
自治系统——AS：在单一的技术管理下的一组路由器，这些路由器使用一种AS内部路由选择协议和共同度量以确定该分组在该AS内的路由，同时还使用一种AS之间的路由协议来确定AS之间的路由

路由选择协议：
<ol>
 	<li>内部网关协议IGP（一个AS内）
常用协议：RIP协议和OSPF协议</li>
 	<li>外部网关协议EGP（AS之间）
常用协议：BGP协议</li>
</ol>
<strong>网络的异构型</strong>：
指的是传输介质、数据编码方式、链路控制协议及不同的数据单元格式和转发机制，这些特点分别在物理层和数据链路层被定义

<strong>路由器互联的多个局域网中</strong>：
物理层、数据链路层、<strong>网络层</strong>协议可以不同
<h2 id="ipv4">IPv4</h2>
<h3 id="ipv4分组">IPv4分组</h3>
IP数据报格式：[[第1章 计算机网络体系结构#^475694 | （1Byte=8bit）]]
![[IP数据报格式.png]]
<pre><code class="language-tree">└─首部
   ├─固定部分（20B）
   └─可变部分
</code></pre>
<ul>
 	<li>版本：使用的IP版本号，IPv4或者IPv6</li>
 	<li>首部长度：<strong>占4位</strong>，<strong>以32位（4B）为单位</strong>。能表示最大的十进制数为15（1111<sub>(2)</sub>），首部长度==最大值==为60B（15*4B），首部长度==最小值==为20B（十进制数为5，5*4B）</li>
 	<li>区分服务：指示期望获得哪种类型的服务</li>
 	<li>总长度（首部+数据）：<strong>占16位</strong>，<strong>以单位为字节</strong>。数据报的最大长度为2<sup>16</sup>-1=65535B。IP数据报成帧时，数据报的总长度不能超过当前链路层的[[第3章 数据链路层#^ed55c4|MTU]]值</li>
 	<li>标识：<strong>占16位</strong>。它是一个计数器，每产生一个数据报就加1，并且赋值给标识字段，但是它不是序号（IP为无连接的服务）。超过[[第3章 数据链路层#^ed55c4|MTU]]的数据报要分片，分片后的多个数据报的标识相同</li>
 	<li>标志：<strong>占3位</strong>，但是只有两位有意义，中间位（DF，Don't Fragment）和低位（MF，More Fragment）
<ul>
 	<li>DF = 1 禁止分片</li>
 	<li>DF = 0 允许分片</li>
 	<li>MF = 1 该分片后面还有分片</li>
 	<li>MF = 0 该分片为最后一个分片</li>
</ul>
</li>
 	<li>片偏移：<strong>占13位</strong>，<strong>以8字节为单位</strong>。它指该分片在原分组中的相对位置。除了最后一个分组以外，其余的每个分片的分组长度一定是8B的整数倍。</li>
 	<li>生存时间（TTL，Time to Live）：<strong>占8位</strong>。防止分组在网络中循环，路由器在转发分组前会将TTL-1，如果TTL=0，则该分组必须被丢弃</li>
 	<li>协议：<strong>占8位</strong>。如TCP、UDP等。其中6表示TCP、17表示UDP</li>
 	<li>首部校验和：<strong>占16位</strong>。只校验首部，不校验数据部分</li>
 	<li>原地址：<strong>占4B</strong>。表示发送方IP</li>
 	<li>目的地址：<strong>占4B</strong>。表示接收方IP</li>
 	<li>填充：补0，使首部字段长为4B的整数倍</li>
</ul>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">占用空间</th>
<th align="center">单位</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">版本</td>
<td align="center">4位</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">首部长度</td>
<td align="center">4位</td>
<td align="center">4B</td>
</tr>
<tr>
<td align="center">总长度</td>
<td align="center">16位</td>
<td align="center">1B</td>
</tr>
<tr>
<td align="center">标识</td>
<td align="center">16位</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">标志</td>
<td align="center">3位</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">片偏移</td>
<td align="center">13位</td>
<td align="center">8B</td>
</tr>
<tr>
<td align="center">生存时间</td>
<td align="center">8B</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">协议</td>
<td align="center">8B</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">首部校验和</td>
<td align="center">16B</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">原地址</td>
<td align="center">4B</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">目的地址</td>
<td align="center">4B</td>
<td align="center"></td>
</tr>
</tbody>
</table>
^4dbf24

==一种八片的首饰==
1总，8片，首4（单位B）
<h3 id="ipv4地址与nat">IPv4地址与NAT</h3>
<h4 id="ipv4地址（点分十进制）">IPv4地址（点分十进制）</h4>
![[分类的IP地址.png]]

3类常见的IP地址使用范围：
<table>
<thead>
<tr>
<th align="center">网络类别</th>
<th align="center">最大可用网络数</th>
<th align="center">第一份可用的网络号</th>
<th align="center">最后一个可用的网络号</th>
<th align="center">每个网络中的最大主机数（除去全0和全1）</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">A</td>
<td align="center">2<sup>7</sup>-2（除去全0和127）</td>
<td align="center">1</td>
<td align="center">126</td>
<td align="center">2<sup>24</sup>-2</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">2<sup>14</sup>-1（除去128.0）</td>
<td align="center">128.1</td>
<td align="center">191.255</td>
<td align="center">2<sup>16</sup>-2</td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">2<sup>21</sup>-1（除去192.0.0）</td>
<td align="center">192.0.1</td>
<td align="center">223.255.255</td>
<td align="center">2<sup>8</sup>-2</td>
</tr>
</tbody>
</table>
特殊IP地址：

![[特殊IP地址.png]]

私有IP地址：
<table>
<thead>
<tr>
<th align="center">网络类别</th>
<th align="center">地址范围</th>
<th align="center">网段数</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">A</td>
<td align="center">10.0.0.0～10.255.255.255</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">172.16.0.0～172.31.255.255</td>
<td align="center">16</td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">192.168.0.0～192.168.255.255</td>
<td align="center">256</td>
</tr>
</tbody>
</table>
<h4 id="网络地址转换nat">网络地址转换NAT</h4>
网络地址转换是通过将专用网路地址转换为公用网络地址而对外隐藏内部管理的IP地址

NAT表项需要管理员添加，这样才能控制内网到外网的网络连接。如果主机发送的分组在NAT中找不到表项，则服务器不会转发该分组

典型的NAT转换表：
<table>
<thead>
<tr>
<th align="center">WAN端</th>
<th align="center">LAN端</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">138.76.29.7， 50001</td>
<td align="center">192.168.0.2， 1234</td>
</tr>
<tr>
<td align="center">138.76.29.7， 5002</td>
<td align="center">192.168.0.3， 2345</td>
</tr>
<tr>
<td align="center">WAN端IP， 端口</td>
<td align="center">LAN端IP， 端口</td>
</tr>
<tr>
<td align="center">...</td>
<td align="center">...</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody>
</table>
<h3 id="子网划分、子网掩码、cidr">子网划分、子网掩码、CIDR</h3>
<h4 id="子网划分">子网划分</h4>
子网划分是单位内部是的事情，单位对外表现为没有划分子网的网络

![[子网划分.png]]
二级IP地址：IP地址={&lt;网络号&gt;，&lt;主机号&gt;}
三级IP地址：IP地址={&lt;网络号&gt;，&lt;子网号&gt;，&lt;主机号&gt;}
<blockquote>对IPv4地址进行子网划分时，子网号不能为全0或全1，但是随着CIDR的使用，全0和全1的地址也能被指派</blockquote>
<h4 id="子网掩码">子网掩码</h4>
IP地址与其子网掩码进行“与”运算能得出网络号（“与”运算：同“1”为1，其余为0）
<table>
<thead>
<tr>
<th>八位二进制</th>
<th>十进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>10000000</td>
<td>128</td>
</tr>
<tr>
<td>11000000</td>
<td>192</td>
</tr>
<tr>
<td>11100000</td>
<td>224</td>
</tr>
<tr>
<td>11110000</td>
<td>240</td>
</tr>
<tr>
<td>11111000</td>
<td>248</td>
</tr>
<tr>
<td>11111100</td>
<td>252</td>
</tr>
<tr>
<td>11111110</td>
<td>254</td>
</tr>
<tr>
<td>11111111</td>
<td>255</td>
</tr>
</tbody>
</table>
路由器中路由表记录有：
<ol>
 	<li>目的网络地址</li>
 	<li>目的网络子网掩码</li>
 	<li>下一跳地址</li>
</ol>
<strong>路由器转发分组的算法</strong>：
<ol>
 	<li>提取目的IP地址</li>
 	<li>是否能直接交付</li>
 	<li>特定主机路由</li>
 	<li>检测路由表中有无路径</li>
 	<li>默认路由 0.0.0.0</li>
 	<li>TTL等于0，丢弃报告转发分组出错</li>
</ol>
<h4 id="无分类编址cidr">无分类编址CIDR</h4>
==CIDR是一种归并网络技术，CIDR技术就是将小的网络汇聚成大的超网==

![[CIDR划分网络.png]]

CIDR记法：斜线记法（CIDR记法），IP地址后面写上”/“，再写上网络前缀的位数。
e.g. 192.168.31.2/24

CIDR地址块：网络前缀都相同的连续IP地址组成的

CIDR中地址掩码=子网划分中的子网掩码

构成超网（路由聚合）：将网络前缀缩短（将路由表中，同一个接口的表项合并，降低路由表中的行数）

最长前缀匹配：在查找路由表时会得到不止一个匹配结果，此时，应从匹配结果中选择具有最长网络前缀的路由，因为网络前缀越长，地址块越小，路由越具体
<h3 id="arp、dhcp与icmp">ARP、DHCP与ICMP</h3>
<h4 id="地址解析协议arp">地址解析协议ARP</h4>
RARP：逆地址解析协议

由于在实际链路传输数据帧时，最终必须要使用MAC地址

ARP协议：完成主机或路由器IP地址到MAC地址的映射（解决下一跳走哪里的问题）

ARP的使用过程：
<ul>
 	<li>检查ARP高速缓存，有对应表项则从表中获取MAC地址写入MAC帧，没有则将目的地址填为FF-FF-FF-FF-FF-FF的帧封装并==广播ARP请求分组==，目的主机收到请求会向源主机==单播一个ARP相应分组==源主机收到后将映射写入ARP高速缓存（10~20min更新一次）</li>
</ul>
ARP协议4种典型情况：
<ol>
 	<li>同局域网主机A发送给主机B：ARP寻找B的MAC地址</li>
 	<li>不同局域网主机A发送给主机B：ARP寻找本网络一个路由器（网关）的硬件地址</li>
 	<li>局域网内路由器发送给主机A：ARP寻找A的MAC地址</li>
 	<li>局域网1中路由器发送给局域网2主机B：用ARP找B的网关的地址</li>
</ol>
ARP请求与响应：（局域网内IP3为目的地址，局域网外IP3为网关IP地址）
![[ARP请求与响应.png]]
数据报中在链路层封装的目的MAC地址，局域网内填写目的主机MAC地址，局域网外填写网关MAC地址，待到数据到达网关后向WAN网转发数据报前会解封装，将数据链路层的目的MAC地址替换为下一跳的MAC地址
<blockquote>==源IP地址和目的IP地址不会因为转发分组重新封装而变换，只有源MAC地址和目的MAC地址会变化==
路由器在接到分组后，剥离该分组的数据链路层协议头，然后在分组被转发之前给分组加上一个新的链路层协议头（需要重新封装源硬件地址和目的硬件地址）</blockquote>
<h4 id="动态主机配置协议dhcp">动态主机配置协议DHCP</h4>
[[第1章 计算机网络体系结构#OSI参考模型|DHCP]]协议是==[[第6章 应用层|应用层]]==协议，使用的是==客户/服务器==方式，客户和服务器之间通过==<strong>广播</strong>==进行交互，基于==<strong>UDP</strong>==

DHCP提供即插即用的联网机制，主机可以从服务器动态获取IP地址、子网掩码、默认网关、DNS服务器名称与IP地址，允许<strong>地址重用</strong>，支持<strong>移动用户加入网络</strong>，支持<strong>再用地址续租</strong>

DHCP服务器和DHCP客户端的信息交换过程：
<ol>
 	<li>主机广播==DHCP发现报文==：试图找到网络中的DHCP服务器来获得IP地址</li>
 	<li>DHCP服务器广播==DHCP提供报文==：服务器拟分配一个IP及相关配置，当有多个服务器时，先到先得</li>
 	<li>主机广播==DHCP请求报文==：主机向服务器请求IP地址</li>
 	<li>DHCP服务器广播==DHCP确认报文==：正式将IP分配给主机</li>
</ol>
<h4 id="网际控制报文协议icmp">网际控制报文协议ICMP</h4>
ICMP支持主机和路由器
产生差错（异常）-&gt;发送特定ICMP报文

ICMP数据报：

![[ICMP数据报.png]]

ICMP报文分为两种：
<ol>
 	<li>ICMP差错报文</li>
 	<li>ICMP询问报文</li>
</ol>
<h5 id="icmp差错报文">ICMP差错报文</h5>
<strong>ICMP差错报文用于以下5种情况</strong>：
<ol>
 	<li>终点不可达：(无法交付)</li>
 	<li>源点抑制：(拥塞导致丢数据)（abandoned）</li>
 	<li>时间超过：(TTL=0)</li>
 	<li>参数问题：(首部字段出错)</li>
 	<li>改变路由（重定向）：(可通过更好的路由)</li>
</ol>
ICMP差错报文数据字段：
![[ICMP差错报文数据字段.png]]

<strong>==不发送==ICMP差错报文的情况</strong>：
<ol>
 	<li>对ICMP差错报文不再发送ICMP差错报文</li>
 	<li>对第一个分片的数据报片的所有后续数据报片都不发送ICMP差错报告报文</li>
 	<li>对具有组播地址的数据报都不发送ICMP差错报告报文</li>
 	<li>对具有特殊地址（e.g. 127.0.0.1或0.0.0.0）的数据报不发送ICMP差错报告报文</li>
</ol>
<blockquote>==127.0.0.1是回环地址，以它为目的IP地址的数据会立即被返回本机==
==0.0.0.0/32可作为本主机在本网络上的源地址==</blockquote>
<h5 id="icmp询问报文">ICMP询问报文</h5>
<strong>ICMP询问报文有以下4种</strong>：
<ol>
 	<li>回送请求和回答报文（测试目的站是否可达以及了解其相关状态）</li>
 	<li>时间戳请求和回答报文（用来进行时钟同步和测量时间）</li>
 	<li>地址掩码请求和回答报文（abandoned）</li>
 	<li>路由器询问和通告报文（abandoned）</li>
</ol>
<h5 id="icmp的应用">ICMP的应用</h5>
<ol>
 	<li>PING：测试两个主机之间的连通性，使用了ICMP回送请求和回答报文</li>
 	<li>Traceroute：跟踪一个分组从源点到终点的路径，使用了ICMP时间超过差错报告报文</li>
</ol>
<h2 id="ipv6">IPv6</h2>
从根本上解决地址耗尽问题

解决IP地址耗尽问题的措施：
<ol>
 	<li>采用无分类编址CIDR汇聚小网络</li>
 	<li>采用网络地址转换NAT方法以节省全球IP地址</li>
 	<li>使用IPv6</li>
</ol>
IPv6数据报：
![[IPv6数据报.png]]

IPv6数据报格式：
![[IPv6数据报格式.png]]
<pre><code class="language-tree">└─IPv6数据报格式
   ├─基本首部（40B）
   └─有效载荷
</code></pre>
<ul>
 	<li>版本：指明了IP协议版本号，总为6</li>
 	<li>优先级：区分数据报的类别和优先级</li>
 	<li>流标签：从一个主机发往另一个主机的所有数据报都具有相同的流标签</li>
 	<li>有效载荷长度：拓展首部和数据部分长度</li>
 	<li>下一个首部：标志下一个扩展首部嚯上层协议的首部</li>
 	<li>跳数限制：相当于IPv4中的TTL</li>
 	<li>有效载荷：扩展首部+数据，相当于IPv4首部中的可变部分移到IPv6的有效载荷中</li>
</ul>
<h3 id="ipv6的特点">IPv6的特点</h3>
<ol>
 	<li>地址空间从IPv4的32位（4B）增长到128位（16B）</li>
 	<li>改进首部格式</li>
 	<li>能快速处理/转发</li>
 	<li>支持QOS（Quality of Service）</li>
 	<li>支持即插即用（自动配置，无需DHCP）</li>
 	<li>支持资源预分配</li>
 	<li>只允许在源点进行分片</li>
 	<li>IPv6的首部长必须是8B的整数倍，[[第4章 网络层#^4dbf24|IPv6的首部必须是4B的整数倍]]</li>
 	<li>增大了安全性</li>
 	<li>ICMPv6附加新增报文类型，分组过大</li>
</ol>
<h3 id="ipv6地址">IPv6地址</h3>
<ol>
 	<li>一般形式：冒号十六进制e.g. fe80:0000:0000:0000:76ca:2a9b:000a:10f5</li>
 	<li>压缩形式：删除多余的0，保证每组最少有一个数字e.g. fe80:0:0:0:76ca:2a9b:a:10f5</li>
 	<li>0压缩形式：一连串的0可以用双冒号表示（::）一个IPv6地址中只能用一次双冒号e.g. fe80::76ca:2a9b:a:10f5</li>
</ol>
<h3 id="ipv6基本地址类型">IPv6基本地址类型</h3>
<ol>
 	<li>单播：一对一通信，可作为源地址和目的地址</li>
 	<li>多播：一对多通信，可作为目的地址</li>
 	<li>任播：一对多中的一个通信，可作为目的地址（一对多通信，最先收到的接受消息）</li>
</ol>
<h3 id="ipv4与ipv6过渡协议">IPv4与IPv6过渡协议</h3>
<ol>
 	<li><strong>双栈协议</strong>：双协议栈技术就是指在一台设备上==同时启用Pv4协议栈和Pv6协议栈==。这样的话，这台设备既能和Pv4网络通信，又能和Pv6网络通信。如果这台设备是一个路由器，那么这台路由器的不同接口上，分别配置了IPv4地址和IPv6地址，并很可能分别连接了IPv4网络和IPv6网络。如果这台设备是一个计算机，那么它将同时拥有IPv4地址和Pv6地址，并具备同时处理这两个协议地址的功能</li>
 	<li><strong>隧道技术</strong>：通过使用互联网络的基础设施在网络之间传递数据的方式。使用隧道传递的数据（或负载）可以是不同协议的数据帧或包。隧道协议将其它协议的数据帧或包==重新封装==然后通过隧道发送
将IPv6的数据报作为数据部分加上IPv4的首部，即可在IPv4链路上传播</li>
</ol>
<h2 id="路由协议">路由协议</h2>
<h3 id="路由信息协议rip">路由信息协议RIP</h3>
<blockquote><strong>==应用层协议==基于==UDP数据报==</strong>
RIP是一种分布式的基于距离向量的路由选择协议，其最大的==优点就是简单==</blockquote>
RIP规定：
<ol>
 	<li>网络中每个路由器都要维护它自身到其他每个目的网络的最佳距离</li>
 	<li>距离，也称跳数，规定一个路由器直连一个网络，其跳数为1，每经过一个路由器，跳数加1</li>
 	<li>RIP认为好的路由就是通过路由器的数量少，优先选择跳数少的路径</li>
 	<li>RIP允许一条路径上最多只能包含15个路由器，即==距离为16时表示网络不可达==^RIP16bukeda</li>
 	<li>RIP默认在==任意两个相邻的RIP路由器之间每30秒广播一次RIP路由更新信息==，==交换的信息是自己的路由表==，以便自动建立并维护路由表（动态维护）</li>
</ol>
<strong>RIP协议中，RIP路由器每30秒仅和相邻的路由器交换自己的路由表</strong>
<h4 id="距离向量算法">距离向量算法</h4>
执行步骤：
<ol>
 	<li>修改相邻路由器发来的RIP报文中所有表项
对地址为X的相邻路由器发来的RIP报文，修改此报文中的所有项目：把“下一跳”字段中的地址改为X,并把所有的“距离”字段+1。</li>
 	<li>对修改后的RIP报文中的每一个项目，进行以下步骤：
<ol>
 	<li>R1路由表中若没有Net3,则把该项目填入R1路由表</li>
 	<li>R1路由表中若有Net3,则查看下一跳路由器地址：
若下一跳是，则用收到的项目替换源路由表中的项目；
若下一跳不是X,原来距离比从走的距离远则更新，否则不作处理</li>
</ol>
</li>
 	<li>若180s还没收到相邻路由器X的更新路由表，则把X记为不可达的路由器，即把距离设置为16</li>
 	<li>返回</li>
</ol>
RIP报文格式：
![[RIP报文格式.png]]
<ul>
 	<li>RIP是[[第6章 应用层|应用层]]协议，使用的是UDP传输数据</li>
 	<li>一个RIP报文最多可以包含25个路由，如果超过则要再用一个RIP报文传输</li>
</ul>
RIP的缺点：
<ol>
 	<li>RIP限制了网络规模，[[第4章 网络层#^RIP16bukeda|最大距离为15（16表示不可达）]]</li>
 	<li>==RIP协议好消息传得快，坏消息传得慢==,当网络出现故障时，要经过比较长的时间（例如数分钟）才能将此信息传送到所有的路由器，“慢收敛”</li>
</ol>
<h3 id="开放最短路径优先协议ospf">开放最短路径优先协议OSPF</h3>
<blockquote><strong>==网络层协议==基于==IP数据报==</strong>
使用<strong>Dijkstra</strong>的<strong>最短路径算法SPF</strong>
主要特征：使用了分布式链路状态协议</blockquote>
OSPF的特点： （1. 和谁交换信息，2. 交换什么信息，3. 什么时候交换信息）
<ol>
 	<li>使用洪泛法向自治系统内<strong>所有路由器</strong>发送信息，即路由器通过输出端口向所有相邻的路由器发送信息，而每一个相邻路由器又再次将此信息发往其所有的相邻路由器==（广播）==
<ul>
 	<li>最终整个区域内所有路由器都得到了这个信息的一个副本。</li>
</ul>
</li>
 	<li>发送的信息就是与本路由器<strong>相邻的所有路由器的链路状态</strong>（本路由器和哪些路由器相邻，以及该链路的度量/代价一一费用、距离、时延、带宽等)</li>
 	<li>只有<strong>当链路状态发生变化时</strong>，路由器才向所有路由器洪泛发送此信息
<ul>
 	<li>最后，所有路由器都能建立一个<strong>链路状态数据库</strong>，即<strong>全网拓扑图</strong></li>
</ul>
</li>
 	<li>每隔30min,要刷新一次数据库中的链路状态</li>
 	<li>由于一个路田器的链路状态只涉及到与相邻路由器的连通状态，因而与整个互联网的规模并无直接关系。因此当<strong>互联网规模很大</strong>时，OSPF协议要比距离向量协议RIP好得多</li>
 	<li>OSPF不存在坏消息传的慢的问题，它的<strong>收敛速度很快</strong></li>
</ol>
<h4 id="链路状态路由算法">链路状态路由算法</h4>
<ol>
 	<li>每个路由器发现它的邻居结点【==HELLO问候分组==】，并了解邻居节点的网络地址，同时使用HELLO分组保持与其邻居的连接</li>
 	<li>设置到它的每个邻居的成本度量==<strong>metric</strong>==</li>
 	<li>构造【==DD数据库描述分组==】，向邻站给出自己的链路状态数据库中的所有链路状态项目的摘要信息</li>
 	<li>如果DD分组中的摘要自己都有，则邻站不做处理；如果有没有的或者是更新的，则发送【==LSR链路状态请求分组==】请求自己没有的和比自己更新的信息</li>
 	<li>收到邻站的LSR分组后，发送【==LSU链路状态更新分组==】进行更新</li>
 	<li>更新完毕后，邻站返回一个【==LSAck链路状态确认分组==】进行确认
<ul>
 	<li>只要一个路由器的链路状态发生变化</li>
</ul>
</li>
 	<li>泛洪发送【==LSU链路状态更新分组==】进行更新</li>
 	<li>更新完毕后，其他站返回一个【==LSAck链路状态确认分组==】进行确认</li>
 	<li>使用Dijkstra根据自己的链路状态数据库构造到其他节点间的最短路径</li>
</ol>
OSPF的区域
![[OSPF的区域.png]]

OSPF的分组
![[OSPF的分组.png]]
<h3 id="边界网关协议bgp">边界网关协议BGP</h3>
<blockquote><strong>==应用层协议==基于==TCP数据报==</strong></blockquote>
BGP协议的特点： （1. 和谁交换信息，2. 交换什么信息，3. 什么时候交换信息）
<ol>
 	<li>与其他AS的邻站BGP发言人交换信息</li>
 	<li>交换的网络可达性的信息，即要到达某个网络所要经过的一系列AS（BGP发言人交换路径向量）</li>
 	<li>发生变化时更新有变化的部分</li>
 	<li>BGP支持==CIDR==,因此BGP的路由表也就应当包括目的网络前缀、下一跳路由器，以及到达该目的网络所要经过的各个自治系统序列</li>
 	<li>在BGP刚刚运行时，BGP的邻站是交换整个的BGP路由表。但以后==只需要在发生变化时更新有变化的部分==。这样做对节省网络带宽和减少路由器的处理开销都有好处</li>
</ol>
BGP协议交换信息的过程：
BGP所交换的网络可达性的信息就是要==到达某个网络所要经过的一系列AS==。当BGP发言人互相交换了网络可达性的信息后，各BGP发言人就根据所米用的策略从收到的路由信息中找出到达各AS的较好路由

BGP协议报文格式：
一个BGP发言人与其他自治系统中的BGP发言人要交换路由信息，就要先建立TCP连接，即通过TCP传送，然后在此连接上交换BGP报文以建立BGP会话(session),利用BGP会话交换路由信息
![[BGP协议报文格式.png]]

BGP-4的四种报文：
<ol>
 	<li>OPEN(打开)报文：用来与相邻的另一个BGP发言人建立关系，并认证发送方</li>
 	<li>UPDATE(更新)报文：通告新路径或撤销原路径</li>
 	<li>KEEPALIVE(保活)报文：在无UPDATEI时，周期性证实邻站的连通性；也作为OPEN的确认（确认存活报文）</li>
 	<li>NOTIFICATION(通知)报文：报告先前报文的差错；也被用于关闭连接</li>
</ol>
<h3 id="三种路由协议的比较">三种路由协议的比较</h3>
<strong>RIP</strong>是一种分布式的基于距离向量的内部网关路由选择协议，通过广播UDP报文来交换路由信息
<strong>OSPF</strong>是一个内部网关协议，要交换的信息量较大，应使报文的长度尽量短，所以不使用传输层协议（如UDP或TCP),而是直接采用IP
<strong>BGP</strong>是一个外部网关协议，在不同的自治系统之间交换路由信息，由于网络环境复杂，需要保证可靠传输，所以采用TCP
<table>
<thead>
<tr>
<th align="center">协议</th>
<th align="center">RIP</th>
<th align="center">OSPF</th>
<th align="center">BGP</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">类型</td>
<td align="center">内部</td>
<td align="center">内部</td>
<td align="center">外部</td>
</tr>
<tr>
<td align="center">路由算法</td>
<td align="center">距离-向量</td>
<td align="center">链路状态</td>
<td align="center">路径-向量</td>
</tr>
<tr>
<td align="center">传递协议</td>
<td align="center">UDP</td>
<td align="center">IP</td>
<td align="center">TCP</td>
</tr>
<tr>
<td align="center">路径选择</td>
<td align="center">跳数最少</td>
<td align="center">代价最低</td>
<td align="center">较好，非最佳</td>
</tr>
<tr>
<td align="center">交换结点</td>
<td align="center">和本结点相邻的路由器</td>
<td align="center">网络中的所有路由器</td>
<td align="center">和本结点相邻的路由器</td>
</tr>
<tr>
<td align="center">交换内容</td>
<td align="center">当前本路由器知道的全部信息，即自己的路由表</td>
<td align="center">与本路由器相邻的所有路由器的链路状态</td>
<td align="center">首次和整个路由表交换，非首次交换有变化的部分</td>
</tr>
</tbody>
</table>
<h2 id="ip组播">IP组播</h2>
IP数据报的三种传输方式：
<ol>
 	<li>单播：==一对一==，单播用于发送数据包到单个目的地，且每发送一份单播报文都使用一个单播IP地址作为目的地址。是一种点对点传输方式。</li>
 	<li>广播：==一对多==，广播是指发送数据包到同一广播域或子网内的所有设备的一种数据传输方式，是一种点对多点传输方式。</li>
 	<li>组播：==一对多==，当网络中的某些用户需要特定数据时，组播数据发送者仅发送一次数据，借助组播路由协议为组播数据包建立组播分发树，被传递的数据到达距离用户端尽可能近的节点后才开始复制和分发，是一种点对多点传输方式。</li>
</ol>
<blockquote>能够运行组播协议的路由器被称为<strong>组播路由器</strong></blockquote>
<h3 id="ip组播地址">IP组播地址</h3>
IP组播地址让源设备能够将分组发送给一组设备。属于多播组的设备将被分配一个组播组IP地址
一群共同需求主机的相同标识
组播使用地址范围为[[第4章 网络层#IPv4地址（点分十进制）|D类地址]]，224.0.0.0~239.255.255.255，只能作为==<strong>目的地址</strong>==，源地址只能为单播地址
特点：
<ol>
 	<li>组播数据报也是“尽最大努力交付”，不提供可靠交付，应用于==<strong>UDP</strong>==。</li>
 	<li>对组播数据报不产生ICMP差错报文。</li>
 	<li>并非所有D类地址都可以作为组播地址。</li>
</ol>
IP组播分为：
<ol>
 	<li>因特网范围内组播</li>
 	<li>硬件组播</li>
</ol>
<h4 id="基于硬件组播的d类ip地址和组播物理地址映射：">基于硬件组播的D类IP地址和组播物理地址映射：</h4>
同单播地址一样，组播IP地址也需要相应的组播MAC地址在本地网络中实际传送帧。组播MAC地址以十六进制值01-00-5E打头，余下的6个十六进制位是根据IP组播组地址的最后23位转换得到的。
TCP/IP协议使用的以太网多播地址的范围是:
从01-00-5E-00-00-00到01-00-5E-7F-FF-FF
![[D类IP地址和组播物理地址映射.png]]
由于组播IP中中存在5位IP不映射到物理地址上，所以映射关系不唯一，则可能导致两个不同的组播IP映射到同一个物理地址，所以<strong>收到多播数据报的主机</strong>，还要<strong>在IP层利用软件进行过滤</strong>，<strong>把不是本主机要接收的数据报丢弃</strong>。
<h3 id="igmp与组播路由算法">IGMP与组播路由算法</h3>
<ul>
 	<li>IGMP在一个路由器所管辖的局域网内</li>
 	<li>组播路由算法是在多个路由器之间、</li>
</ul>
<h4 id="igmp">IGMP</h4>
IGMP协议让路由器知道本局域网上是否有主机(的进程)参加或退出了某个组播组。
[[第4章 网络层#网际控制报文协议ICMP|ICMP]]和IGMP都使用IP数据报传递报文

IGMP工作的两个过程：（组播路由器知道的成员关系只是所连接的局域网中有无组播组的成员）
<ol>
 	<li>某主机要<strong>加入</strong>组播组时，该主机<strong>向组播组的组播地址</strong>发送一个lGMP报文，声明自己要称为该组的成员。本地组播路由器收到lGMP报文后，要利用组播路由选择协议把这组成员关系发给因特网上的其他组播路由器。
<ul>
 	<li>向组播组的组播地址发送一个lGMP报文：路由器和组播组中的主机知道新加入的主机</li>
</ul>
</li>
 	<li>本地组播路由器周期性探询本地局域网上的主机，以便知道这些主机是否还是组播组的成员。只要有一个主机对某个组响应，那么组播路由器就认为这个组是活跃的；如果经过几次探询后没有一个主机响应，组播路由器就认为本网络上的没有此组播组的主机，因此就不再把这组的成员关系发给其他的组播路由器。（响应方式类似IPv6的任播）</li>
</ol>
<h4 id="组播路由算法">组播路由算法</h4>
组播路由协议目的是找出==<strong>以源主机为根节点的组播转发树</strong>==
构造树可以避免在路由器之间兜圈子
对不同的多播组对应于不同的多播转发树；同一个多播组，对不同的源点也会有不同的多播转发树

组播路由选择协议常使用的三种算法:
<ol>
 	<li>基于链路状态的路由选择</li>
 	<li>基于距离-向量的路由选择</li>
 	<li>协议无关的组播（PIM）（稀疏/密集）</li>
</ol>
<h2 id="移动ip">移动IP</h2>
移动IP技术是移动结点(计算机/服务器等)以固定的网络IP地址，实现跨越不同网段的漫游功能，并保证了基于网络IP的网络权限在漫游过程中不发生任何改变。

基本概念：
<ul>
 	<li>移动结点：具有永久IP地址的移动设备</li>
 	<li>归属代理（本地代理）：一个移动结点的永久“居所”称为归属网络，在归属网络中代表移动节点执行移动管理功能的实体叫做归属代理。</li>
 	<li>永久地址（归属地址/主地址）：移动站点在归属网络中的原始地址。</li>
 	<li>外部代理（外地代理）：在外部网络中帮助移动节点完成移动管理功能的实体称为外部代理。</li>
 	<li>转交地址（辅地址）：可以是外部代理的地址或动态配置的一个地址。</li>
</ul>
移动IP通信过程：
![[移动IP图示.png]]
A刚进入外部网络：
<ol>
 	<li>获得外部代理的转交地址(外部代理广播报文)</li>
 	<li>移动节点通过外部代理发送注册报文给归属代理（包含永久地址&amp;转交地址）</li>
 	<li>归属代理接收请求，并将移动节点的永久地址和转交地址绑定（以后到达该归属代理的数据报且要发往移动节点的数据报将被封装并以隧道方式发给转交地址)，并返回一注册响应报文</li>
 	<li>外部代理接收注册响应，并转发给移动节点</li>
</ol>
A移动到了下一个网络：
<ol>
 	<li>在新外部代理登记注册一个转交地址</li>
 	<li>新外部代理给本地代理发送新的转交地址（覆盖旧的）</li>
 	<li>通信（同刚进入外部网络）</li>
</ol>
A回到了归属网络:
<ol>
 	<li>A向本地代理注销转交地址</li>
 	<li>按原始方式通信</li>
</ol>
<h2 id="网络层设备">网络层设备</h2>
<h3 id="冲突域和广播域">冲突域和广播域</h3>
<ol>
 	<li>冲突域指的是连接到同一物理介质上的所有结点集合，这些结点之间存在介质征用的现象</li>
 	<li>广播域指的是接收同样广播消息的结点集合</li>
</ol>
[[第1章 计算机网络体系结构#^b35684|隔离冲突域和广播域的设备]]以及三次设备的区别
<table>
<thead>
<tr>
<th align="center">设备</th>
<th align="center">所属层次</th>
<th align="center">能否隔离冲突域</th>
<th align="center">能否隔离广播域</th>
<th align="center"></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">[[第2章 物理层#物理层设备|集线器]]</td>
<td align="center">[[第2章 物理层|物理层]]</td>
<td align="center">不能</td>
<td align="center">不能</td>
<td align="center">不能互联两个物理层不同的网段</td>
</tr>
<tr>
<td align="center">[[第2章 物理层#物理层设备|中继器]]</td>
<td align="center">[[第2章 物理层|物理层]]</td>
<td align="center">不能</td>
<td align="center">不能</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">[[第3章 数据链路层#交换机|交换机]]</td>
<td align="center">[[第3章 数据链路层|数据链路层]]</td>
<td align="center">能</td>
<td align="center">不能</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">[[第3章 数据链路层#网桥|网桥]]</td>
<td align="center">[[第3章 数据链路层|数据链路层]]</td>
<td align="center">能</td>
<td align="center">不能</td>
<td align="center">可以互联两个物理层和链路层不同的网段</td>
</tr>
<tr>
<td align="center">[[第4章 网络层#路由器的组成和功能|路由器]]</td>
<td align="center">[[第4章 网络层|网络层]]</td>
<td align="center">能</td>
<td align="center">能</td>
<td align="center">可以互联两个不同网络层协议的网段</td>
</tr>
</tbody>
</table>
路由器与[[第3章 数据链路层#^nodeswitch|结点交换机]]的区别：
路由器用来互连不同的网络（能在多个网络转发分组），结点交换机只是<strong>在一个特定的网络中工作</strong>（能在单个网络中转发分组）
<h3 id="路由器的组成和功能">路由器的组成和功能</h3>
路由器是一种具有多个输入端口和多个输出端口的专用计算机，其任务是转发分组

路由器：
![[路由器.png]]

路由器分为路由选择部分（控制部分）和分组转发部分
<ul>
 	<li>路由选择部分：根据所选定的路由选择协议构造出路由表，同时经常或定期地和相邻路由器交换路由信息而不断地更新和维护路由表</li>
 	<li>分组转发部分分为输入端口、交换结构、输出部分
<ul>
 	<li>交换结构：根据转发表（由路由表得来）对分组进行转发
<ul>
 	<li>若收到RIP/OSPF分组等，则把分组送往路由选择处理机；若收到数据分组，则查找转发表并输出</li>
</ul>
</li>
</ul>
</li>
</ul>
转发与路由选择：
<ul>
 	<li>转发：将一个分组从一个端口转发到另一个端口（==微观上==）</li>
 	<li>路由选择：在路由器之间选择一个合适的路径把一个信息从源主机发送到目的主机（==宏观==）</li>
</ul>
输入端口对线路上收到的分组处理：
![[输入端口对线路上收到的分组处理.png]]
输入端口中的查找和转发功能在路由器的交换功能中是最重要的

输出端口将交换结构传送来的分组发送到线路：
![[输出端口将交换结构传送来的分组发送到线路.png]]
若路由器处理分组的速率赶不上分组进入队列的速率，则队列的存储空间最终必定减少到零，这就使后面再进入队列的分组由于没有存储空间而只能被丢弃

<strong>==路由器中的输入或输出队列产生溢出是造成分组丢失的重要原因==</strong>
<h3 id="路由表与路由转发">路由表与路由转发</h3>
<h4 id="路由表">路由表</h4>
路由表根据路由选择算法得出的，主要用途是路由选择，总用==软件==来实现
![[路由表.png]]
==默认路由的IP和掩码都是0.0.0.0==
<h4 id="转发表">转发表</h4>
转发表由路由表得来，==可以用软件实现，也可以用特殊的硬件来实现==。转发表必须包含完成转发功能所必需的信息，在转发表的每一行必须包含从要到达的目的网络到输出端口和某些MA地址信息的映射]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>822</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:46:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:46:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%a0%94"><![CDATA[研]]></category>
						</item>
					<item>
		<title><![CDATA[第5章 传输层]]></title>
		<link>https://blog.zhuanjie.ltd/?p=824</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=824</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 id="第五章-传输层">第五章 传输层</h1>
<p>#计算机网络 </p>
<p>只有主机才有的层次</p>
<h2 id="传输层提供的服务">传输层提供的服务</h2>
<h3 id="传输层的功能：">传输层的功能：</h3>
<ol>
<li>提供进程和进程之间的逻辑通信（端到端通信）</li>
<li>复用和分用<ul>
<li>复用：发送方不同的应用进程都可使用同一个传输层协议传送数据</li>
<li>分用：接收方的传输层在剥去报文的首部后能够把这些数据正确交付到目的应用进程</li>
</ul>
</li>
<li>传输层对收到的报文进行差错检测（首部和数据部分）</li>
<li>提供两种不同的传输协议<ul>
<li>TCP：面向连接，传送单元为报文段，==可靠，面向连接，时延大，适用于大文件==<ul>
<li>传送数据之前必须建立连接，数据传送结束后要释放连接。不提供广播或多播服务。由于TCP要提供可靠的面向连接的传输服务，因此不可避免增加了许多开销：确认、流量控制、计时器及连接管理等</li>
<li>面向连接的服务可以保证数据的可靠和顺序交付</li>
</ul>
</li>
<li>UDP：无连接，传送单元为用户数据报，==不可靠，无连接，时延小，适用于小文件==<ul>
<li>传送数据之前不需要建立连接，收到UDP报文后也不需要给出任何确认</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>==<strong>如果一个协议使用确认机制对传输数据进行确认，则认为它是一个可靠的协议</strong>==</p>
<h3 id="传输层的寻址与端口">传输层的寻址与端口</h3>
<p>复用：应用层所有的应用进程都可以通过传输层再传输到网络层。 
分用：传输层从网络层收到数据后交付指明的应用进程</p>
<p>端口：这里的端口是逻辑端口（又称软件端口），是传输层的[[第1章 计算机网络体系结构#^690d1a|SAP]]，标识主机中的应用进程
端口号只有本地意义，在因特网中不同计算机的相同端口是没有联系的
端口号长度为16bit，能表示65536个不同的端口号</p>
<pre><code class="language-tree">└─按照范围划分端口
   ├─服务端使用的端口号
   | ├─熟知端口号：给TCP/IP最重要的一些应用程序，让所有用户知道（0~1023）
   | └─登记端口号：为没有熟知端口号的应用程序使用（1024~49151）
   └─客户端使用的端口号：仅在客户进程运行时才动态选择（49152~65535）（操作系统分配）
</code></pre>
<p>一些常用的熟知端口号：</p>
<table>
<thead>
<tr>
<th align="center">应用程序</th>
<th align="center">FTP</th>
<th align="center">TELNET</th>
<th align="center">SMTP</th>
<th align="center">DNS</th>
<th align="center">TFTP</th>
<th align="center">HTTP</th>
<th align="center">SNMP</th>
</tr>
</thead>
<tbody><tr>
<td align="center">熟知端口号</td>
<td align="center">21</td>
<td align="center">23</td>
<td align="center">25</td>
<td align="center">53</td>
<td align="center">69</td>
<td align="center">80</td>
<td align="center">161</td>
</tr>
<tr>
<td align="center">![[熟知端口号.png]]</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h3 id="套接字">套接字</h3>
<p>在网络中采用发送方和接收方的套接字组合来识别端点，<strong>套接字</strong>唯一标识了网络中的一个主机和它上面的一个进程
套接字 Socket=（主机IP地址：端口号）</p>
<h2 id="udp协议">UDP协议</h2>
<p>[[第5章 传输层#^80407d|UDP是面向报文的]]</p>
<h3 id="udp数据报">UDP数据报</h3>
<p>UDP只在IP数据报服务之上增加了很少功能，即复用分用和差错检测功能</p>
<h4 id="udp特点：">UDP特点：</h4>
<ol>
<li>UDP是<strong>无连接</strong>的，减少开销和发送数据之前的时延</li>
<li>UDP使用最大努力交付，即<strong>不保证可靠交付</strong><ul>
<li>可靠交付交给应用层实现</li>
</ul>
</li>
<li>UDP是<strong>面向报文</strong>的，适合一次性传输少量数据的网络应用 ^80407d<ul>
<li>面向报文：应用层给UDP多长的报文，UDP就照样发送，即一次发一个完整报文 ，不拆分应用层传下来的报文</li>
</ul>
</li>
<li>UDP<strong>无拥塞控制</strong>，适合很多实时应用</li>
<li>UDP首部开销小，占8B（TCP首部占20B）</li>
</ol>
<h4 id="udp首部格式">UDP首部格式</h4>
<p>![[UDP首部格式.png]]</p>
<ul>
<li>首部字段（8B）：<ul>
<li>源端口：在需要对方回信时选用。不需要可用全0</li>
<li>目的端口：在终点交付时需要用到</li>
<li>长度：UDP数据报长度（包括首部和数据），最小值为8</li>
<li>校验和：检测udp数据报是否有错</li>
</ul>
</li>
<li>数据字段：如果没有可为空</li>
</ul>
<p>分用时，找不到对应的目的端口号，就丢弃报文，并给发送方发送IMP“端口不可达”差错报告报文</p>
<h3 id="udp校验">UDP校验</h3>
<blockquote>
<p>UDP的校验和不是必须的，如果不使用校验和，那么将校验和字段设置为0，如果校验和的计算结果恰好为0，那么将校验和字段置为全1</p>
</blockquote>
<p>UDP数据报：
![[UDP数据报.png]] </p>
<ul>
<li>伪首部只有在计算检验和时才出现，不向下传送也不向上递交</li>
<li>17:封装UDP报文的IP数据报首部协议字段是17</li>
<li>UDP长度：UDP首部8B+数据部分长度（不包括伪首部）</li>
</ul>
<p>UDP校验计算：
![[UDP校验计算.png]]</p>
<p><strong>在发送端</strong>：</p>
<ol>
<li>填上伪首部</li>
<li>全0填充检验和字段</li>
<li>全0填充数据部分（UDP数据报要看成许多4B的字串接起来）</li>
<li>伪首部+首部+数据部分采用二进制反码求和</li>
<li>把==和求<strong>反码</strong>==填入检验和字段</li>
<li>去掉伪首部，发送</li>
</ol>
<p><strong>在接收端</strong>：</p>
<ol>
<li>填上伪首部</li>
<li>伪首部+首部+数据部分采用二进制反码求和</li>
<li>结果==<strong>全为1则无差错</strong>==，否则丢弃数据报/交给应用层附上出差错的警告</li>
</ol>
<h2 id="tcp协议">TCP协议</h2>
<p>[[第5章 传输层#^e13772|TCP是面向字节流]]</p>
<h3 id="tcp协议的特点">TCP协议的特点</h3>
<ol>
<li>TCP是面向连接（虚连接）的传输层协议</li>
<li>每一条TCP连接只能有两个端点，每一条TCP连接只能是点对点的</li>
<li>TCP提供可靠交付的服务，无差错、不丢失、不重复、按序到达==（可靠有序，不丢不重）==</li>
<li>TCP提供全双工通信<ul>
<li>发送缓存准备发送的数据&amp;已发送但尚未收到确认的数据</li>
<li>接收缓存按序到达但尚未被接受应用程序读取的数据&amp;不按序到达的数据</li>
</ul>
</li>
<li>TCP面向字节流，TCP把应用程序交下来的数据看成仅仅是一连串的==无结构的字节流== ^e13772<ul>
<li>流：流入到进程或从进程流出的字节序列</li>
</ul>
</li>
</ol>
<h3 id="tcp报文">TCP报文</h3>
<p>![[TCP报文.png]]</p>
<ul>
<li>序号：在一个TCP连接中传送的字节流中的每一个字节都按顺序编号，本字段表示本报文段所发送数据的<strong>第一个字节的序号</strong> ^1eb565</li>
<li>确认号：<strong>期望</strong>收到对方下一个报文段的第一个数据字节的序号。若确认号为N,则证明到序号N-1为止的所有数据都已正确收到</li>
<li>数据偏移（==<strong>首部长度</strong>==）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以==4B位单位==，即1个数值是4B</li>
<li>6个控制位：<ul>
<li>==URG紧急位==：URG=1时，标明此报文段中有紧急数据，是高优先级的数据，应尽快传送（在发送缓存里插队），不用在缓存里排队，配合紧急指针字段使用</li>
<li>==ACK确认位==：ACK=1时确认号有效，在连接建立后所有传送的报文段都必须把ACK置为1</li>
<li>PSH推送位：PSH=1时，接收方尽快交付接收应用进程，不再等到缓存填满再向上交付</li>
<li>RST复位：RST=1时，表明TCP连接中出现严重差错，必须释放连接，然后再重新建立传输链接，也可用来拒绝一个非法报文段或拒绝打开一个连接</li>
<li>==SYN同步位==：SYN=1时，表明是一个连接请求/连接接受报文</li>
<li>==FIN终止位==：FIN=1时，表明此报文段发送方数据已发完，要求释放连接</li>
</ul>
</li>
<li>窗口：指的是发送本报文段的一方的接收窗口，即现在允许对方发送的数据量，单位字节 ^f8f907</li>
<li>检验和：检验首部+数据，检验时要加上12B伪首部，第四个字段为6</li>
<li>紧急指针：URG=1时才有意义，指出本报文段中紧急数据的字节数<ul>
<li>紧急数据在数据报数据部最前面，即前多少位为紧急数据</li>
</ul>
</li>
<li>选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认…<ul>
<li>MSS是TCP报文段中==数据字段==的最大长度</li>
</ul>
</li>
</ul>
<h3 id="tcp连接管理">TCP连接管理</h3>
<p>TCP连接的建立采用客户服务器方式，主动发起连接建立的应用进程叫做客户，而被动等待连接建立的应用进程叫服务器</p>
<h4 id="tcp的连接建立">TCP的连接建立</h4>
<p>![[TCP的连接建立.png]]</p>
<ol>
<li>客户端发送连接请求报文段，无应用层数据<ul>
<li>SYN=1，seq=x(随机)</li>
</ul>
</li>
<li>服务器端为该TCP连接分配缓存和变量，并向客户端返回确认报文段，允许连接，无应用层数据<ul>
<li>SYN=1，ACK=1，seq=y(随机)，ack=x+1</li>
<li>ACK为1同时要有ack（下个期望收到的序列）的值</li>
</ul>
</li>
<li>客户端为该TCP连接分配缓存和变量，并向服务器端返回确认的确认，可以携带数据<ul>
<li>SYN=0，ACK=1，seq=x+1，ack=y+1</li>
</ul>
</li>
</ol>
<blockquote>
<p>SYN洪泛攻击：SYN是TCP三次握手中的第一个数据包，客户机一直发送第一次握手，而不对服务器的确认进行确认，导致大量TCP连接被挂起
解决方案：SYN cookie</p>
</blockquote>
<h4 id="tcp的连接释放">TCP的连接释放</h4>
<p>![[TCP的连接释放.png]]</p>
<ol>
<li>客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接<ul>
<li>FIN=1，seq=u</li>
</ul>
</li>
<li>服务器端回送一个确认报文段，客户到服务器这个方向的连接就释放了一一半关闭状态<ul>
<li>ACK=1，seq=v，ack=u+1</li>
</ul>
</li>
<li>服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接<ul>
<li>FIN=1，ACK=1，seg=w，ack=u+1</li>
</ul>
</li>
<li>客户端回送一个确认报文段，再等到时间等待计时器设置的2MSL(最长报文段寿命)后，连接彻底关闭<ul>
<li>ACK=1，seq=u+1，ack=W+1</li>
</ul>
</li>
</ol>
<h4 id="tcp的可靠传输">TCP的可靠传输</h4>
<p>可靠传输：保证接收方进程从缓存区读出的字节流与发送方发出的字节流是完全一样的</p>
<p>TCP实现可靠传输的机制：</p>
<ol>
<li>校验：<ul>
<li>与UDP一样增加伪（IP）首部（17代表UDP，6代表TCP），计算校验和</li>
</ul>
</li>
<li>序号：<ul>
<li>一个字节占一个序号</li>
<li>[[第5章 传输层#^1eb565|序号字段]]指的是一个报文段第一个字节的序号</li>
</ul>
</li>
<li>确认：<ul>
<li>TCP默认使用累计确认</li>
</ul>
</li>
<li>重传：<ol>
<li>超时重传<ul>
<li>确认重传不分家，TCP的发送方在规定的时间内没有收到确认就要重传已发送的报文段</li>
<li>重传时间：TCP采用自适应算法，动态改变重传时间RTTs(加权平均往返时间)</li>
</ul>
</li>
<li>冗余ACK（冗余确认）<ul>
<li>每当比期望序号大的失序报文段到达时，发送一个冗余AK,指明下一个期待字节的序号</li>
<li>当发送方收到对同一个报文段的==<strong>3个冗余ACK</strong>==时，就可以认为跟在这个被确认报文段之后的报文段已丢失（快速重传）</li>
</ul>
</li>
</ol>
</li>
</ol>
<h4 id="tcp的流量控制">TCP的流量控制</h4>
<p>为了让接收方来得及接收数据，让发送方发慢一点</p>
<p>TCP利用<strong>滑动窗口</strong>机制实现流量控制</p>
<p>在通信过程中，接收方根据自己<strong>接收缓存的大小</strong>，动态地调整发送方的发送窗口大小，即[[第5章 传输层#^rwrdcwrd|接收窗口rwnd]]（接收方设置确认报文段的<strong>窗口字段</strong>来将rwnd通知给发送方），发送方的<strong>发送窗口</strong>取[[第5章 传输层#^rwrdcwrd|接收窗口rwnd和拥塞窗口cwnd]]的最小值（==发送方的发送窗口=min{接收窗口rwnd，拥塞窗口cwnd}==）（发送窗口可以动态变化）</p>
<p>接收窗口rwrd可由接收方的确认报文传回</p>
<p>rwrd设置为0时：禁止发送方发送数据</p>
<ul>
<li>TCP为每一个连接设有一个持续计时器，只要TCP连接的一方收到对方的零窗口通知，就启动持续计时器</li>
<li>若持续计时器设置的时间到期，就发送一个零窗口探测报文段，接收方收到探测报文段时给出现在的窗口值</li>
<li>若窗口仍然是0，那么发送方就重新设置持续计时器</li>
</ul>
<h4 id="tcp的拥塞控制">TCP的拥塞控制</h4>
<p>出现拥塞的条件：</p>
<ul>
<li>对资源需求的总和&gt;可用资源</li>
<li>网络中有许多资源同时呈现供应不足=&gt;网络性能变坏=&gt;网络吞吐量将随输入负荷增大而下降</li>
</ul>
<h5 id="拥塞控制四种方法">拥塞控制四种方法</h5>
<ol>
<li>慢开始</li>
<li>拥塞避免</li>
<li>快重传</li>
<li>快恢复</li>
</ol>
<p>==<strong>假定：</strong>==</p>
<ol>
<li>数据单方向传送，而另一个方向只传送确认</li>
<li>接收方总是有足够大的缓存空间，因而发送窗口大小取决于拥塞程度</li>
</ol>
<p>发送窗口=min{接收窗口rwnd，拥塞窗口cwnd}</p>
<p>接收窗口rwrd：接收方根据接受缓存设置的值，并告知给发送方，反映接收方容量
拥塞窗口cwrd：发送方根据自己估算的网络拥塞程度而设置的窗口值，反映网络当前容量 ^rwrdcwrd</p>
<blockquote>
<p>[[第5章 传输层#^f8f907|窗口单位为字节]]，发送窗口为1000即为收到确认前最多发1000B数据</p>
</blockquote>
<p>慢开始和拥塞避免：
![[慢开始和拥塞避免.png]]</p>
<p>一个传输轮次：</p>
<ul>
<li>发送了一批报文段并收到它们的确认的时间</li>
<li>一个往返时延RTT</li>
<li>开始发送一批拥塞窗口内的报文段到开始发送下一批拥塞窗口内的报文段的时间</li>
</ul>
<p>ssthresh：满开始门限</p>
<p>快重传和快恢复：
![[快重传和快恢复.png]]</p>
<h5 id="流量控制和拥塞控制的区别">流量控制和拥塞控制的区别</h5>
<ul>
<li>流量控制：<ul>
<li>点到点控制</li>
<li>发送方的速率过快导致这个接收方它接收缓存不够或者说它的接收窗口不够</li>
</ul>
</li>
<li>拥塞控制：<ul>
<li>全局性问题</li>
<li>因为这个网络发生了堵塞导致很多发送方发送来的数据到不了接收方</li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>824</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:40:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:40:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%a0%94"><![CDATA[研]]></category>
						</item>
					<item>
		<title><![CDATA[第6章 应用层]]></title>
		<link>https://blog.zhuanjie.ltd/?p=826</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=826</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 id="第六章-应用层">第六章 应用层</h1>
<p>#计算机网络 </p>
<p>对应用程序的通信提供服务</p>
<p>应用层协议定义：</p>
<ul>
<li>应用进程交换的报文类型，请求还是响应？</li>
<li>各种报文类型的语法，如报文中的各个字段及其详细描述</li>
<li>字段的语义，即包含在字段中的信息的含义</li>
<li>进程何时、如何发送报文，以及对报文进行响应的规则</li>
</ul>
<p>应用层功能：</p>
<ol>
<li>文件传输、访问和管理</li>
<li>电子邮件</li>
<li>虚拟终端</li>
<li>查询服务和远程作业登录</li>
</ol>
<p>重要协议：FTP、SMTP、POP3、HTTP、DNS</p>
<h2 id="网络应用模型">网络应用模型</h2>
<h3 id="客户服务器模型">客户/服务器模型</h3>
<p>服务器：<strong>提供计算服务</strong>的设备</p>
<ol>
<li>永久提供服务</li>
<li>永久性访问地址/域名</li>
</ol>
<p>客户机：<strong>请求计算服务</strong>的主机</p>
<ol>
<li>与服务器通信，使用服务器提供的服务</li>
<li>间歇性接入网络</li>
<li>可能使用动态IP地址</li>
<li>不与其他客户机直接通信</li>
</ol>
<p>应用：Web,文件传输FTP,远程登录，电子邮件</p>
<h3 id="p2p模型">P2P模型</h3>
<p>特点：</p>
<ul>
<li>不存在永远在线的服务器</li>
<li>每个主机既可以<strong>提供服务</strong>，也可以<strong>请求服务</strong></li>
<li>任意端系统/节点之间可以<strong>直接通讯</strong></li>
<li>节点间歇性接入网络</li>
<li>节点可能改变IP地址</li>
<li>可扩展性好</li>
<li>网络健壮性强</li>
</ul>
<h2 id="域名系统dns">域名系统DNS</h2>
<p>DNS在[[第5章 传输层|传输层]]采用无连接的[[第5章 传输层#UDP协议|UDP]]服务</p>
<h3 id="层次域名空间">层次域名空间</h3>
<pre><code class="language-tree">└─根 .
  ├─顶级域名
  |  ├─国家顶级域名cn,us,uk
  |  ├─通用顶级域名com,net,org,gov,int,aero,museum,travel
  |  └─基础结构域名/反向域名arpa（从IP到域名）
  ├─二级域名
  |  ├─类别域名ac,com,edu,gov,mil,net,org
  |  └─行政区域名用于我国各省、自治区、直辖市bjjs
  ├─三级域名
  └─四级域名
</code></pre>
<p>![[域名.png]]</p>
<h3 id="域名服务器">域名服务器</h3>
<ol>
<li>根域名服务器<ul>
<li>因特网上有13个根渔民服务器（从a.rootservers.net~m.rootservers.net）</li>
</ul>
</li>
<li>顶级域名服务器</li>
<li>授权（权限）域名服务器</li>
<li>本地域名服务器</li>
</ol>
<p>域名服务器层次</p>
<ul>
<li>根域名服务器</li>
<li>顶级域名服务器</li>
<li>授权（权限）域名服务器</li>
</ul>
<blockquote>
<p>本地域名服务器不属于应服务器层次</p>
</blockquote>
<h3 id="域名解析过程">域名解析过程</h3>
<p>递归查询、迭代查询：
![[递归查询、迭代查询.png]]</p>
<h2 id="文件传输协议ftp">文件传输协议FTP</h2>
<p>基于[[第5章 传输层#TCP协议|TCP]]，提供不同种类主机系统（硬、软件体系等都可以不同）之间的文件传输能力
FTP传输控制信息使用的是数据连接外的控制连接，**==即FTP的控制信息是外带传送的==**
FTP并<code>不</code>适合两个计算机之间==共享读写文件==
FTP提供交互式访问，允许客户指明文件的类型与格式，并允许文件具有存取权限</p>
<p>文件传输协议：</p>
<ul>
<li>文件传输协议FTP=&gt;基于TCP</li>
<li>简单文件传输协议TFTP=&gt;基于UDP</li>
</ul>
<p>FTP是基于客户/服务器(C/S)的协议
用户通过一个客户机程序连接至在远程计算机上运行的服务器程序
依照FTP协议提供服务，进行文件传送的计算机就是FTP服务器
连接FTP服务器，遵循FTP协议与服务器传送文件的电脑就是FTP客户端</p>
<h3 id="工作原理">工作原理</h3>
<ul>
<li>登陆：ftp地址、用户名&amp;密码<ul>
<li>匿名登录：互连网中有很大一部分FTP服务器被称为“匿名”（Anonymous）FTP服务器。这类服务器的目的是向公众提供文件拷贝服务，不要求用户事先在该服务器进行登记注册，也不用取得FTP服务器的授权。Anonymous（匿名文件传输）能够使用户与远程主机建立连接并以匿名身份从远程主机上拷贝文件，而不必是该远程主机的注册用户。用户使用特殊的用户名“anonymous”登录FTP服务，就可访问远程主机上公开的文件</li>
</ul>
</li>
<li>传输：==控制连接始终保持==、==数据连接保持一会（传输完毕数据就关闭）==<ul>
<li>![[FTP工作原理.png]]</li>
</ul>
</li>
</ul>
<p>==是否使用TCP20端口建立数据连接与传输模式有关==</p>
<ul>
<li>主动方式使用TCP20端口</li>
<li>被动方式由服务器和客户端自行协商决定（端口&gt;1024）</li>
</ul>
<h3 id="ftp传输模式">FTP传输模式</h3>
<ul>
<li>文本模式：ASCI模式，以文本序列传输数据</li>
<li>二进制模式：Binary模式，以二进制序列传输数据</li>
</ul>
<h2 id="电子邮件">电子邮件</h2>
<h3 id="概述">概述</h3>
<h4 id="信息格式">信息格式</h4>
<pre><code>└─电子邮件
  ├─信封：xxxx@xxxx.xxx
  └─内容
     ├─首部（from、to、主题、时间等）
     └─主体（信件内容）
</code></pre>
<h4 id="组成结构">组成结构</h4>
<ul>
<li>用户代理<ul>
<li>功能：<ol>
<li>撰写</li>
<li>显示</li>
<li>处理</li>
<li>通信</li>
</ol>
</li>
</ul>
</li>
<li>邮件服务器<ul>
<li>C/S</li>
<li>功能：<ol>
<li>发送&amp;接收邮件</li>
<li>向发件人报告邮件传送结果</li>
</ol>
</li>
</ul>
</li>
<li>协议</li>
</ul>
<p>电子邮件系统组成结构：
![[电子邮件系统组成结构.png]]</p>
<h3 id="协议">协议</h3>
<h4 id="smtp">SMTP</h4>
<p>基于[[第5章 传输层#TCP协议|TCP]]，端口号25，采用C/S模式，==发送邮件中所使用的协议==</p>
<p>SMTP规定了在两个相互通信的SMTP进程之间应如何交换信息。
负责发送邮件的SMTP进程就是SMTP客户，负责接收邮件的进程就是SMTP服务器。
SMTP规定了14条命令（几个字母）和21种应答信息（三位数字代码+简单文字说明）。</p>
<p>SMTP通信的三个阶段：</p>
<ol>
<li><code>连接建立</code><ul>
<li>SMTP客户端（两个邮件服务器通信过程时为发起连接的为客户端）跟SMTP服务器端建立TCP连接</li>
<li>SMTP服务器端返回给SMTP客户端返回220 Service ready表示可以接收邮件</li>
<li>SMTP客户端发送一个HELLO命令，等待SMTP服务器端返回<ul>
<li>若服务器端有能力接收邮件，返回“250 OK”即可继续</li>
<li>否则返回“421 Service not available”</li>
</ul>
</li>
</ul>
</li>
<li><code>邮件传送</code><ul>
<li>SMTP客户端发送一个MAIL命令</li>
<li>SMTP服务器端若准备好，就返回“250 OK”，否则返回数字加英文信息，如451等（判断SMTP服务器是否已经准备好接收邮件）</li>
<li>SMTP客户端发送一个或多个RCPT命令（收件人命令）</li>
<li>SMTP服务器端对应每一个RCPT返回信息<ul>
<li>用户存在返回“250 OK”</li>
<li>用户不存在返回“550 No such user here”</li>
</ul>
</li>
<li>SMTP服务器返回“250 OK”后SMTP客户端发送一个DATA命令（声明开始传输数据）</li>
<li>SMTP服务器返回“354 start mail input;end with&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;”SMTP服务器同意传输</li>
<li>SMTP客户端开始传输文件</li>
<li>SMTP服务器接收完成返回“250 OK”</li>
</ul>
</li>
<li><code>连接释放</code><ul>
<li>邮件发完，SMTP客户发送QUIT命令，SMTP服务器返回“221”，表示同意释放TCP连接</li>
</ul>
</li>
</ol>
<p>SMTP的缺点：</p>
<ol>
<li>SMTP不能传送可执行文件或者其他二进制对象。</li>
<li>SMTP仅限于传送7位ASCI码，不能传送其他非英语国家的文字。</li>
<li>SMTP服务器会拒绝超过一定长度的邮件。</li>
</ol>
<blockquote>
<p>SMTP的缺点的解决方案——[[第6章 应用层#MIME|MIME]]</p>
</blockquote>
<h4 id="pop3">POP3</h4>
<p>基于[[第5章 传输层#TCP协议|TCP]]，端口号25，采用C/S模式，==读取邮件中所使用的协议==
POP3协议在传输层是使用明文传输密码的，并不对密码进行加密</p>
<p>POP3的工作方式：</p>
<ol>
<li>下载并保留（在服务器处保留）</li>
<li>下载并删除（在服务器处删除）</li>
</ol>
<h4 id="imap">IMAP</h4>
<p>网际报文存取协议IMAP——==读取邮件中所使用的协议==
IMAP协议比POP协议复杂。当用户Pc上的IMAP客户程序打开MAP服务器的邮箱时，用户可以看到邮箱的首部，若用户需要打开某个邮件，该邮件才上传到用户的计算机上
MAP可以让用户在不同的地方使用不同的计算机随时上网阅读处理邮件，还允许只读取邮件中的某一个部分(先看正文，有WiFi的时候再下载附件)</p>
<h4 id="mime">MIME</h4>
<p>使电子邮件系统可以支持声音、图像、视频、多种国家语言等等
使得传输内容丰富多彩
![[MIME.png]]</p>
<h3 id="基于万维网的电子邮件">基于万维网的电子邮件</h3>
<p>最大特点：方便</p>
<p>![[基于万维网的电子邮件.png]]</p>
<h2 id="万维网www">万维网WWW</h2>
<p>万维网WWW(World Wide Web)是一个大规模的、联机式的信息储藏所/资料空间，是无数个网络站点和网页的集合
资源：文字、视频、音频
==统一资源定位符URL==唯一表示资源
URL的一般形式：&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt;
万维网以==客户/服务器==方式工作，用户使用的浏览器就是万维网客户程序，万维网文档所驻留的主机运行服务器程序
万维网使用超文本标记语言==HTML==,使得万维网页面设计者可以很方便地从一个界面的链接转到另一个界面，并能够在自己的屏幕上显示出来</p>
<h3 id="超文本传输协议http">超文本传输协议HTTP</h3>
<p>HTTP协议定义了浏览器（万维网客户进程）怎样向万维网服务器请求万维网文档，以及服务器怎样把文档传送给浏览器</p>
<p>![[超文本传输协议.png]]</p>
<h4 id="http传输的具体过程">HTTP传输的具体过程</h4>
<ol>
<li>浏览器分析URL</li>
<li>浏览器向DNS请求解析IP地址</li>
<li>DNS解析出IP地址</li>
<li>浏览器与服务器建立TCP连接</li>
<li>浏览器发出取文件命令</li>
<li>服务器响应</li>
<li>释放TCP连接</li>
<li>浏览器显示</li>
</ol>
<h4 id="http协议的特点">HTTP协议的特点</h4>
<ul>
<li>HTTP协议是无状态的<ul>
<li>万维网站点可以使用Cookie（Cookie是存储在用户主机中的文本文件，记录一段时间内某用户的访问记录以提供个性化服务）识别用户</li>
</ul>
</li>
<li>HTTP采用[[第5章 传输层#TCP协议|TCP]]作为运输层协议，但==HTTP协议本身是无连接==的（通信双方在交换HTTP报文之前不需要先建立HTTP连接）</li>
</ul>
<h4 id="http的连接方式">HTTP的连接方式</h4>
<ol>
<li>持久连接——<code>Keep-alive</code><ul>
<li>HTTP1.1支持![[持久连接.png]]</li>
</ul>
<ol>
<li>非流水线</li>
<li>流水线（HTTP1.1默认）</li>
</ol>
</li>
<li>非持久连接——<code>Close</code><ul>
<li>![[非持久连接.png]]</li>
</ul>
</li>
</ol>
<h4 id="http报文结构">HTTP报文结构</h4>
<p>HTTP报文是==面向文本==的，因此在报文中的每一个字段都是一些ASCII码串</p>
<p>HTTP报文：HTTP请求报文、HTTP响应报文
![[HTTP报文.png]]</p>
<ul>
<li>开始行：用于区分是请求报文还是响应报文。在请求报文中的开始行称为请求行，而在响应报文中的开始行称为状态行</li>
<li>首部行：说明浏览器、服务器和报文主体的一些信息</li>
<li>实体主题：在请求报文中一般不用这个字段，而在响应报文中也可能没有这个字段</li>
</ul>
<p>状态码：  </p>
<ul>
<li>1xx表示通知信息的，如请求收到了或正在处理</li>
<li>2xx表示成功，如接受或知道了</li>
<li>3xx表示重定向，如要完成请求还必须采取进一步的行动</li>
<li>4xx表示客户的差错，如请求中有错误的语法或不能完成</li>
<li>5xx表示服务器的差错，如服务器失效无法完成请求</li>
</ul>
<p>HTTP请求报文中常用的几个方法：</p>
<table>
<thead>
<tr>
<th align="center">方法（操作）</th>
<th align="center">意义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">GET</td>
<td align="center">请求读取由URL标识的信息</td>
</tr>
<tr>
<td align="center">HEAD</td>
<td align="center">请求读取由URL标识的信息的首部</td>
</tr>
<tr>
<td align="center">POST</td>
<td align="center">给服务器添加信息（如注释）</td>
</tr>
<tr>
<td align="center">CONNECT</td>
<td align="center">用于代理服务器</td>
</tr>
</tbody></table>
<h1 id="应用层常用协议">应用层常用协议</h1>
<table>
<thead>
<tr>
<th align="center">应用程序</th>
<th align="center">FTP数据连接</th>
<th align="center">FTP控制连接</th>
<th align="center">TELNET</th>
<th align="center">SMTP</th>
<th align="center">DNS</th>
<th align="center">TFTP</th>
<th align="center">HTTP</th>
<th align="center">POP3</th>
<th align="center">SNMP</th>
</tr>
</thead>
<tbody><tr>
<td align="center">使用协议</td>
<td align="center">TCP</td>
<td align="center">TCP</td>
<td align="center">TCP</td>
<td align="center">TCP</td>
<td align="center">UDP</td>
<td align="center">UDP</td>
<td align="center">TCP</td>
<td align="center">TCP</td>
<td align="center">UDP</td>
</tr>
<tr>
<td align="center">熟知端口号</td>
<td align="center">20</td>
<td align="center">21</td>
<td align="center">23</td>
<td align="center">25</td>
<td align="center">53</td>
<td align="center">69</td>
<td align="center">80</td>
<td align="center">110</td>
<td align="center">161</td>
</tr>
</tbody></table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>826</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:41:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:41:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%a0%94"><![CDATA[研]]></category>
						</item>
					<item>
		<title><![CDATA[Social - 登录]]></title>
		<link>https://blog.zhuanjie.ltd/login-2/</link>
		<pubDate>Tue, 18 Oct 2022 11:37:31 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/login-2/</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_login]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1010</wp:post_id>
		<wp:post_date><![CDATA[2022-10-18 19:37:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-18 11:37:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-18 19:37:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-18 11:37:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[login-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Social - 注册]]></title>
		<link>https://blog.zhuanjie.ltd/register/</link>
		<pubDate>Tue, 18 Oct 2022 11:37:31 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/register/</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_register]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1011</wp:post_id>
		<wp:post_date><![CDATA[2022-10-18 19:37:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-18 11:37:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-18 19:37:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-18 11:37:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[register]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/register.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Social - 找回密码]]></title>
		<link>https://blog.zhuanjie.ltd/findpassword-2/</link>
		<pubDate>Tue, 18 Oct 2022 11:37:31 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/findpassword-2/</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_findpassword]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1012</wp:post_id>
		<wp:post_date><![CDATA[2022-10-18 19:37:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-18 11:37:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-18 19:37:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-18 11:37:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[findpassword-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Social - 登录]]></title>
		<link>https://blog.zhuanjie.ltd/login-3/</link>
		<pubDate>Mon, 05 Dec 2022 07:51:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?page_id=1014</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_login]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1014</wp:post_id>
		<wp:post_date><![CDATA[2022-12-05 15:51:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:51:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-05 15:51:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-05 07:51:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[login-3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/login.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Social - 注册]]></title>
		<link>https://blog.zhuanjie.ltd/register-2/</link>
		<pubDate>Mon, 05 Dec 2022 07:51:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?page_id=1015</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_register]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1015</wp:post_id>
		<wp:post_date><![CDATA[2022-12-05 15:51:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:51:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-05 15:51:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-05 07:51:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[register-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/register.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Social - 找回密码]]></title>
		<link>https://blog.zhuanjie.ltd/findpassword-3/</link>
		<pubDate>Mon, 05 Dec 2022 07:51:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://50.93.205.205/?page_id=1016</guid>
		<description></description>
		<content:encoded><![CDATA[[xh_social_page_findpassword]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1016</wp:post_id>
		<wp:post_date><![CDATA[2022-12-05 15:51:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-05 07:51:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-05 15:51:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-05 07:51:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[findpassword-3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[account/findpassword.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[基于V]]></title>
		<link>https://blog.zhuanjie.ltd/?p=1084</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=1084</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1084</wp:post_id>
		<wp:post_date><![CDATA[2023-01-30 13:47:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-01-30 13:47:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-01-30 05:47:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						</item>
					<item>
		<title><![CDATA[21春数据库系统设计小学期——大学实验材料管理信息系统数据库设计]]></title>
		<link>https://blog.zhuanjie.ltd/2021/07/02/shujvkuxiaoxueqi/</link>
		<pubDate>Thu, 01 Jul 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p><strong>由于服务器系统更新问题，项目后端数据库已经移植，下载后的程序无法连接到数据库，可重构项目并且自行搭建数据库</strong></p>
<!-- /wp:paragraph -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:paragraph -->
<p>需要代码请评论或者与我联系！</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>项目成品下载</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="http://startpage.zhuanjie.ltd/download/dxssyclxxglxt.zip" target="_blank" rel="noreferrer noopener">链接1(直接下载)</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="http://gitlab.zhuanjie.ltd/Randall/University-experimental-material-management-information-system/-/releases">链接2(发布 · Randall Chu / 大学实验材料管理信息系统数据库设计 · GitLab )</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="课程设计内容要求"><strong>课程设计内容要求</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>设计一个小型数据库（使用Microsoft SQL Server ）<br>（1）数据库来源于对现实世界的抽象和概括，要求设计科学、规范、合理，符合现实情况和实际需求；<br>（2）数据表的设计要求：关系模式至少要满足第三范式，既具有较低的冗余度，又具有较高的访问效率。要求有六个及以上的表，根据实际操作需要定义合理的索引；<br>（3）数据库设计的安全性要求：配置SQL Server以支持SQL Server用户身份验证方式，根据实际需要定义合理的用户权限以及用户视图；<br>（4）数据库设计的完整性要求：要求根据实际需要定义合理的完整性约束（实体完整性、参照完整性以及用户自定义完整性等）；<br>（5）根据实际情况定义合理的存储过程和触发器；<br>（6）数据展示系统设计：选择自己熟悉的界面开发工具，将设计的数据库功能（增加、删除、修改、查询）展示出来。<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="前言"><strong>前言</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>这次课设我的选题是大学实验材料管理信息系统。简单的人工管理和文件系统已经无法应付繁杂的实验材料信息，难以高效整合实验材料信息。简单的人工管理和文件系统不仅使实验材料管理费时费力，往往还难以取得理想的效果。而数据库刚好可以弥补人工管理和文件系统的不足。数据库具有许多优点：数据结构化、数据的共享度高，冗余度低、数据独立性高、数据安全性高和便于管理和控制。因此设计大学实验材料管理信息系统进行实验材料管理是十分有意义的。<br>数据库设计主要是设计出一个对于学生材料的管理系统。通过分析，规划，该系统分为五大模块。分别为登录页面、注册页面、学生页面、管理员页面、游客页面。其中：登录界面分为学生登录和管理员登录，登录方式可选择姓名登录、学号登录和游客登录；注册界面分为学生注册跟管理员注册（注册的时候要核查数据库内部是否有相同学号工号的用户，如果存在相同值，显示无法注册）；学生界面可以显示信息、借用材料、归还材料和修改账户设置；管理员界面可以显示、修改、添加和删除各个表里的信息；游客界面只能显示目前未借用材料的信息。<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="需求分析"><strong>需求分析</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>大学实验材料管理信息系统需要设计出两类人（学生和管理）登录、注册和使用操作的系统。学生要完成获取信息，借用材料，归还材料等操作。管理员要完成对于各个表的管理和修改。<br>大学实验材料管理信息系统分别为登录页面、注册页面、学生页面、管理员页面、游客页面。其中：登录界面分为学生登录和管理员登录，登录方式可选择姓名登录、学号登录和游客登录；注册界面分为学生注册跟管理员注册（注册的时候要核查数据库内部是否有相同学号工号的用户，如果存在相同值，显示无法注册）；学生界面可以显示信息、借用材料、归还材料和修改账户设置；管理员界面可以显示、修改、添加和删除各个表里的信息；游客界面只能显示目前未借用材料的信息。<br></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="概要结构设计"><strong>概要结构设计</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>大学实验材料管理信息系统分别为登录页面、注册页面、学生页面、管理员页面、游客页面。其中：登录界面分为学生登录和管理员登录，登录方式可选择姓名登录、学号登录和游客登录；注册界面分为学生注册跟管理员注册（注册的时候要核查数据库内部是否有相同学号工号的用户，如果存在相同值，显示无法注册）；学生界面可以显示信息、借用材料、归还材料和修改账户设置；管理员界面可以显示、修改、添加和删除各个表里的信息；游客界面只能显示目前未借用材料的信息。<br>实验材料管理信息系统数据库在设计功能时,应该从用户的易用性、数据库的安全性和管理员的管理三个方面入手。<br>用户对于实验材料的借用以及余量的查询，要易于查看，符合直觉设计。拒绝用户删除、修改材料余量、借用历史和借用中等数据。只允许用户更改本人信息。并且要求测试边界条件以防暑假错误损坏数据库。<br>注册过程分为用户注册和管理员注册。实验材料应该由实验管理员进行管理，为了确保数据库的访问对象时材料管理员，应该设计相应的界面完成登录功能，防止数据库信息被非管理者修改和破坏。<br>为了更好地进行实验材料的管理，管理员可以查看、修改材料的信息和材料使用的信息。因而要设计材料信息查看、修改和删除功能。材料归实验室所属，而实验室的使用者是班级的学生。为了更好的了解材料的使用情况，应该掌握学生和实验室的信息，通过数据库了解实验室的使用情况。<br>除此之外，在借用和归还时，应该只可以选择可以操作的材料，更符合设计美学跟使用直觉。</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/img_convert/b879f1770b20bcf9e39c785cd00198d2.png" alt="在这里插入图片描述" /><figcaption>大学材料信息管理功能分析</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="数据库字典"><strong>数据库字典</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3 id="ms表-材料信息">MS表（材料信息）</h3>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>列名</th><th>数据类型</th><th>允许NULL值</th><th>备注</th></tr></thead><tbody><tr><td>MSNA</td><td>nchar(10)</td><td>√</td><td>材料名称</td></tr><tr><td>MSNO</td><td>nchar(10)</td><td>√</td><td>材料编号</td></tr><tr><td>MSNU</td><td>int</td><td>√</td><td>材料库存量</td></tr><tr><td>MSLNA</td><td>nchar(10)</td><td>√</td><td>实验室名称</td></tr><tr><td>MSLNO</td><td>nchar(10)</td><td>√</td><td>实验室编号</td></tr><tr><td>MSDP</td><td>tinyint</td><td>√</td><td>是否需要归还：1需要归还；0不需要归还</td></tr></tbody></table><figcaption> MS表（材料信息）</figcaption></figure>
<!-- /wp:table -->

<!-- wp:heading {"level":3} -->
<h3 id="msl表-实验室信息">MSL表（实验室信息）</h3>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>列名</th><th>数据类型</th><th>允许NULL值</th><th>备注</th></tr></thead><tbody><tr><td>MSLNA</td><td>nchar(10)</td><td>√</td><td>实验室名称</td></tr><tr><td>MSLNO</td><td>nchar(10)</td><td>√</td><td>实验室编号</td></tr><tr><td>ADNA</td><td>nchar(10)</td><td>√</td><td>管理员姓名</td></tr><tr><td>ADNO</td><td>nchar(10)</td><td>√</td><td>管理员工号</td></tr></tbody></table><figcaption>MSL表（实验室信息）</figcaption></figure>
<!-- /wp:table -->

<!-- wp:heading {"level":3} -->
<h3 id="st表-学生信息">ST表（学生信息）</h3>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>列名</th><th>数据类型</th><th>允许NULL值</th><th>备注</th></tr></thead><tbody><tr><td>STNA</td><td>nchar(10)</td><td>√</td><td>学生姓名</td></tr><tr><td>STNO</td><td>nchar(10)</td><td>√</td><td>学生学号</td></tr><tr><td>STKE</td><td>nchar(64)</td><td>√</td><td>学生密码</td></tr></tbody></table><figcaption> ST表（学生信息） </figcaption></figure>
<!-- /wp:table -->

<!-- wp:heading {"level":3} -->
<h3 id="ad表-管理员信息">AD表（管理员信息）</h3>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>列名</th><th>数据类型</th><th>允许NULL值</th><th>备注</th></tr></thead><tbody><tr><td>ADNA</td><td>nchar(10)</td><td>√</td><td>管理员姓名</td></tr><tr><td>ADNO</td><td>nchar(10)</td><td>√</td><td>管理员工号</td></tr><tr><td>ADKE</td><td>nchar(64)</td><td>√</td><td>管理员密码</td></tr></tbody></table><figcaption> AD表（管理员信息） </figcaption></figure>
<!-- /wp:table -->

<!-- wp:heading {"level":3} -->
<h3 id="bo表-借用中信息表">BO表（借用中信息表）</h3>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>列名</th><th>数据类型</th><th>允许NULL值</th><th>备注</th></tr></thead><tbody><tr><td>STNO</td><td>nchar(10)</td><td>√</td><td>学生学号</td></tr><tr><td>MSLNO</td><td>nchar(10)</td><td>√</td><td>实验室编号</td></tr><tr><td>MSNO</td><td>nchar(10)</td><td>√</td><td>材料编号</td></tr><tr><td>BONU</td><td>int</td><td>√</td><td>借用数量</td></tr><tr><td>BODA</td><td>nchar(10)</td><td>√</td><td>借用日期</td></tr><tr><td>RTDA</td><td>nchar(10)</td><td>√</td><td>预计归还日期</td></tr><tr><td>CODE</td><td>nchar(10)</td><td>√</td><td>核验码</td></tr></tbody></table><figcaption> BO表（借用中信息表） </figcaption></figure>
<!-- /wp:table -->

<!-- wp:heading {"level":3} -->
<h3 id="re表-借用历史表">RE表（借用历史表）</h3>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>列名</th><th>数据类型</th><th>允许NULL值</th><th>备注</th></tr></thead><tbody><tr><td>STNO</td><td>nchar(10)</td><td>√</td><td>学生学号</td></tr><tr><td>MSLNO</td><td>nchar(10)</td><td>√</td><td>实验室编号</td></tr><tr><td>MSNO</td><td>nchar(10)</td><td>√</td><td>材料编号</td></tr><tr><td>BONU</td><td>int</td><td>√</td><td>借用数量</td></tr><tr><td>BODA</td><td>nchar(10)</td><td>√</td><td>借用日期</td></tr><tr><td>RTDA</td><td>nchar(10)</td><td>√</td><td>归还日期</td></tr></tbody></table><figcaption>RE表（借用历史表）</figcaption></figure>
<!-- /wp:table -->

<!-- wp:heading -->
<h2 id="e-r图">E-R图</h2>
<!-- /wp:heading -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210705102826100.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70#pic_center" alt="" /><figcaption>E-R图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="数据流图">数据流图：</h2>
<!-- /wp:heading -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/img_convert/6e9f83d7f5c761f73ead85c305dbf70e.png" alt="" /><figcaption>数据流图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="代码界面部分-采用vs2019c-语言编写"><strong>代码界面部分（采用VS2019C#语言编写）</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3 id="1-login-cs">1.login.cs</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * 21数据库系统设计小学期——大学实验材料管理信息系统数据库设计
 * 
 * 修改时间：2021/7/20
 * 
 * 版本：2.0.2
 * 
 * 作者：转接R
 * 
 * 21.7.20更新日志：
 * 1.优化数据库，删除部分无用数据库列
 * 2.增加密码加密算法，通过sha256加密算法加密用户密码，将加密后的密码存入数据库
 * 3.更新数据库部分列的表示意义和属性
 * 4.添加了错误操作窗口抖动
 * 
 * 21.7.22更新日志：
 * 1.修复了修改密码报错新旧密码重复的问题
 * 2.利用云端服务器数据库替代本地数据库
 * 
 */

using System;
using System.Data.SqlClient;
using System.Drawing;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;


namespace 大学实验材料管理信息系统数据库设计
{
    public partial class login : Form
    {
        public static string connectket= "server=/*服务器ip*/;port=1433/*端口*/;user=/*用户名*/;password=/*密码*/;database=大学实验材料管理信息系统数据库设计";
        public login()
        {
            InitializeComponent();
            SqlConnection conn = new(connectket);
            try
            {
                conn.Open();//打开通道，建立连接
                label7.Text = "云端数据库连接成功！";
            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.Message);  //有异常
                label7.Text = "云端数据库连接失败！请检查网络设置后重新加载程序！";
            }
            conn.Close();
        }


        //全局标识符id
        public static string id;

        //获取今天日期
        public static string today = DateTime.Now.ToString("yyyyMMdd");

        //创建随机标识符
        private static char&#091;] constant = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' };
        public static string GenerateRandom(int Length)
        {
            System.Text.StringBuilder newRandom = new(62);
            Random rd = new();
            for (int i = 0; i &lt; Length; i++)
            {
                newRandom.Append(constant&#091;rd.Next(62)]);
            }
            return newRandom.ToString();
        }

        //21.7.20——SHA256算法加密密码
        public static string GetSHA256HashFromString(string strData)
        {
            byte&#091;] bytValue = System.Text.Encoding.UTF8.GetBytes(strData);
            try
            {
                SHA256 sha256 = new SHA256CryptoServiceProvider();
                byte&#091;] retVal = sha256.ComputeHash(bytValue);
                StringBuilder stringBuilder = new StringBuilder();
                for (int i = 0; i &lt; retVal.Length; i++)
                {
                    stringBuilder.Append(retVal&#091;i].ToString("x2"));
                }
                return stringBuilder.ToString();
            }
            catch (Exception ex)
            {
                throw new Exception("GetSHA256HashFromString() fail,error:" + ex.Message);
            }
        }

        private void groupBox2_Enter(object sender, EventArgs e)
        {

        }

        private void Form2_Load(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            textBox1.Text = "";//清空文本框内容
            textBox2.Text = "";
        }

        private void button6_Click(object sender, EventArgs e)
        {
            textBox3.Text = "";//清空文本框内容
            textBox4.Text = "";
        }

        private void radioButton4_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void button8_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            String UserName, Password;
            UserName = textBox1.Text;
            Password = GetSHA256HashFromString(textBox2.Text.ToString().Trim());
            SqlConnection conn = new(connectket);
            //姓名登录
            if (this.radioButton1.Checked)
            {
                String sql = $"select count(*) from ST where STNA='{this.textBox1.Text}' and STKE = '{Password}'";
                SqlCommand cmd = new(sql, conn);
                SqlDataAdapter adapter = new();
                adapter.SelectCommand = cmd;
                conn.Open();
                //查询返回结果
                int result = (int)cmd.ExecuteScalar();
                if (result == 1)
                {
                    MessageBox.Show("登录成功！");
                    SqlCommand com = new("select STNO from ST where STNA='" + textBox1.Text.Trim() + "'", conn);
                    SqlDataReader dr = com.ExecuteReader();
                    if (dr.Read())
                    {
                        id = dr&#091;0].ToString().Trim();
                    }
                    else
                    {
                        id = "none";
                    }
                    dr.Dispose();
                    com.Dispose();
                    this.Hide();
                    student form1 = new();
                    form1.Show();
                }
                else if (result == 0)
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("用户名/密码错误！");
                    textBox2.Text = "";
                }
                else
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("存在重名，请使用学号登录！");
                    textBox1.Text = "";//清空文本框内容
                }
                conn.Close();
            }
            //学号登录
            else if (this.radioButton2.Checked)
            {
                String sql = $"select count(*) from ST where STNO='{this.textBox1.Text}' and STKE = '{Password}'";
                SqlCommand cmd = new(sql, conn);
                SqlDataAdapter adapter = new();
                adapter.SelectCommand = cmd;
                conn.Open();
                //查询返回结果
                int result = (int)cmd.ExecuteScalar();
                conn.Close();
                if (result == 1)
                {
                    MessageBox.Show("登录成功。");
                    id = this.textBox1.Text.Trim();
                    this.Hide();
                    student form1 = new();
                    form1.Show();
                }
                else if (result == 0)
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("学号/密码错误！");
                    textBox2.Text = "";
                }
                else
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("数据库信息错误，请联系管理员！");
                }
            }
            //游客登录
            else if (this.radioButton3.Checked)
            {
                MessageBox.Show("登陆成功！", "提示", MessageBoxButtons.OK);
                this.Hide();
                guider form1 = new();
                form1.Show();
            }
            else
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("请选择登录方式！", "提示", MessageBoxButtons.OK);
            }
        }

        private void label5_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {
            this.Hide();
            register form1 = new();
            form1.Show();
        }

        private void button7_Click(object sender, EventArgs e)
        {
            this.Hide();
            register form1 = new();
            form1.Show();
        }

        private void button5_Click(object sender, EventArgs e)
        {
            String UserName, Password;
            UserName = textBox3.Text;
            Password = GetSHA256HashFromString(textBox4.Text.ToString().Trim());
            SqlConnection conn = new(connectket);
            //姓名登录
            if (this.radioButton4.Checked)
            {
                String sql = $"select count(1) from AD where ADNA='{this.textBox3.Text}' and ADKE = '{Password}'";
                SqlCommand cmd = new(sql, conn);
                SqlDataAdapter adapter = new();
                adapter.SelectCommand = cmd;
                conn.Open();
                //查询返回结果
                int result = (int)cmd.ExecuteScalar();
                if (result == 1)
                {
                    MessageBox.Show("登录成功！");
                    SqlCommand com = new("select ADNO from AD where ADNA='" + textBox3.Text.Trim() + "'", conn);
                    SqlDataReader dr = com.ExecuteReader();
                    if (dr.Read())
                    {
                        id = dr&#091;0].ToString().Trim();
                    }
                    else
                    {
                        id = "none";
                    }
                    dr.Dispose();
                    com.Dispose();
                    this.Hide();
                    Admin form1 = new();
                    form1.Show();
                }
                else
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("用户名/密码错误！");
                    textBox4.Text = "";
                }
                conn.Close();
            }
            //工号登录
            else if (this.radioButton5.Checked)
            {
                String sql = $"select count(1) from AD where ADNO='{this.textBox3.Text}' and ADKE = '{Password}'";
                SqlCommand cmd = new(sql, conn);
                SqlDataAdapter adapter = new();
                adapter.SelectCommand = cmd;
                conn.Open();
                //查询返回结果
                int result = (int)cmd.ExecuteScalar();
                conn.Close();
                if (result == 1)
                {
                    MessageBox.Show("登录成功！");
                    id = this.textBox3.Text.Trim();
                    this.Hide();
                    Admin form1 = new();
                    form1.Show();
                }
                else
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("用户名/密码错误！");
                    textBox4.Text = "";
                }
            }
            else
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("请选择登录方式！", "提示", MessageBoxButtons.OK);
            }
        }
    }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>登录界面分为学生登录和管理员登录。两种登录方式都分为姓名登录和ID登录，学生登录可以选择游客登录。登陆方式为获取填入文本框的ID、密码和选中的radiobutton，再将这两个值作为关键字传入选中的radiobutton对应的数据库进行比对，返回符合条件数量result。<br>如果result等于1就登陆成功，获取当前的用户ID存入当前全局静态变量ID中，跳转到radiobutton对应的窗口；如果result等于0就显示登陆失败，抖动登录窗口；对于result大于1的情况，如果姓名登录，显示要求学号/工号登录，如果ID登录，显示数据库错误，数据库信息遭到破坏，需要数据库管理员来修复数据库。</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213106304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="登录界面——学生登录" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213154354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="登录界面——管理员登录" /></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="2-register-cs">2.register.cs</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>using System;
using System.Data.SqlClient;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

namespace 大学实验材料管理信息系统数据库设计
{
    public partial class register : Form
    {
        public register()
        {
            InitializeComponent();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            textBox1.Text = "";
            textBox2.Text = "";
            textBox3.Text = "";
            textBox8.Text = "";
        }

        private void button4_Click(object sender, EventArgs e)
        {
            textBox4.Text = "";
            textBox5.Text = "";
            textBox6.Text = "";
            textBox7.Text = "";
            textBox9.Text = "";
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (textBox3.Text == textBox8.Text)
            {
                SqlConnection conn = new(login.connectket);
                String sql = $"select count(*) from ST where STNO='{this.textBox2.Text}'";
                SqlCommand cmd1 = new SqlCommand(sql, conn);
                SqlDataAdapter adapter = new SqlDataAdapter();
                adapter.SelectCommand = cmd1;
                conn.Open();
                //查询返回结果
                int result = (int)cmd1.ExecuteScalar();
                if (result == 0)
                {
                    if (textBox1.Text.Trim() != "" &amp;&amp; textBox2.Text.Trim() != "" &amp;&amp; textBox3.Text.Trim() != "" &amp;&amp; textBox8.Text.Trim() != "")   //判断文本框是否全部都是空
                    {
                        //插入文本框中输入的数据到数据库中
                        String sqlStr = "insert into ST(STNA,STNO,STKE) values ('" + textBox1.Text.Trim() + "','" + textBox2.Text.Trim() + "','" + login.GetSHA256HashFromString(textBox3.Text.ToString().Trim()) + "')";
                        SqlCommand cmd = new SqlCommand(sqlStr, conn);
                        try//异常处理
                        {
                            cmd.ExecuteNonQuery();
                            conn.Close();
                            if ((int)MessageBox.Show("注册成功，是否直接登录？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Exclamation) == 1)
                            {
                                login.id = textBox2.Text.Trim();
                                this.Hide();
                                student form1 = new student();
                                form1.Show();
                            }
                            else
                            {
                                textBox1.Text = "";
                                textBox2.Text = "";
                                textBox3.Text = "";
                                textBox8.Text = "";
                            }
                        }
                        catch (Exception ex)
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("注册失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                    }
                    else
                    {
                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                        MessageBox.Show("存在文本框为空！");
                    }
                }
                else
                {
                    if ((int)MessageBox.Show("学号已经存在，是否跳转登录？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Exclamation) == 1)
                    {
                        login.id = textBox2.Text.Trim();
                        this.Hide();
                        login form1 = new login();
                        form1.Show();
                    }
                    else
                    {
                        textBox2.Text = "";
                    }
                }
            }
            else
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("两次输入密码不一致！");
                textBox8.Text = "";
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            if (textBox6.Text.Trim() == textBox9.Text.Trim())
            {
                SqlConnection conn = new(login.connectket);
                String sql = $"select count(*) from ST where STNO='{this.textBox2.Text}'";
                SqlCommand cmd1 = new SqlCommand(sql, conn);
                SqlDataAdapter adapter = new SqlDataAdapter();
                adapter.SelectCommand = cmd1;
                conn.Open();
                //查询返回结果
                int result = (int)cmd1.ExecuteScalar();
                if (result == 0)
                {
                    if (textBox7.Text.ToString().Trim() == "adminZJ")
                    {
                        if (textBox4.Text.Trim() != "" &amp;&amp; textBox5.Text.Trim() != "" &amp;&amp; textBox6.Text.Trim() != "" &amp;&amp; textBox9.Text.Trim() != "")   //判断文本框是否全部都是空
                        {
                            //插入文本框中输入的数据到数据库中
                            String sqlStr = "insert into AD(ADNA,ADNO,ADKE) values ('" + textBox4.Text.Trim() + "','" + textBox5.Text.Trim() + "','" + login.GetSHA256HashFromString(textBox6.Text.ToString().Trim()) + "')";
                            SqlCommand cmd = new SqlCommand(sqlStr, conn);
                            try//异常处理
                            {
                                cmd.ExecuteNonQuery();
                                conn.Close();
                                if ((int)MessageBox.Show("注册成功，是否直接登录？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Exclamation) == 1)
                                {
                                    login.id = textBox5.Text.Trim();
                                    this.Hide();
                                    Admin form1 = new Admin();
                                    form1.Show();
                                }
                                else
                                {
                                    textBox4.Text = "";
                                    textBox5.Text = "";
                                    textBox6.Text = "";
                                    textBox7.Text = "";
                                    textBox9.Text = "";
                                }
                            }
                            catch (Exception ex)
                            {
                                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                MessageBox.Show("注册失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            }
                        }
                        else
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("存在文本框为空！");
                        }
                    }
                    else
                    {
                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                        MessageBox.Show("验证码错误！");
                    }
                }
                else
                {
                    if ((int)MessageBox.Show("工号已经存在，是否跳转登录？", "提示", MessageBoxButtons.OKCancel, MessageBoxIcon.Exclamation) == 1)
                    {
                        login.id = textBox5.Text.Trim();
                        this.Hide();
                        login form1 = new login();
                        form1.Show();
                    }
                    else
                    {
                        textBox5.Text = "";
                    }
                }

            }
            else
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("两次输入密码不一致！");
                textBox8.Text = "";
            }
        }

        private void button5_Click(object sender, EventArgs e)
        {
            this.Hide();
            login form1 = new login();
            form1.Show();
        }

        private void button6_Click(object sender, EventArgs e)
        {
            this.Hide();
            login form1 = new login();
            form1.Show();
        }

        private void label10_Click(object sender, EventArgs e)
        {

        }

        private void register_Load(object sender, EventArgs e)
        {

        }
    }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>注册界面分为学生注册和管理员注册。学生注册需要姓名学号密码，管理员注册需要姓名工号密码和注册验证码。<br>学生注册里的学号要独一无二，如果数据库里面有重复学号会提示已经存在学号，会询问是否直接跳转登录。注册里的两次密码要保持一致。<br>管理员注册需要注册验证码”admin”（可以修改）。以防止没有权限的人来注册管理员账户。</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213317197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="注册——学生信息注册" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213425538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="注册——管理员信息注册" /></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="3-student-cs">3.student.cs</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;
using System.Drawing;
using System.Threading;


namespace 大学实验材料管理信息系统数据库设计
{
    public partial class student : Form
    {
        public student()
        {

            SqlConnection conn = new(login.connectket);
            InitializeComponent();
            textBox1.Text = login.id;
            textBox2.Text = DateTime.Now.ToString("yyyy/MM/dd " + "ddd");
            SqlCommand com = new SqlCommand("select STNA from ST where STNO='" + login.id + "'", conn);
            conn.Open();
            SqlDataReader dr = com.ExecuteReader();
            dr.Read();
            string hello = "欢迎您" + dr&#091;0].ToString().Trim() + "!";
            label7.Text = hello;
            dr.Dispose();
            com.Dispose();
            DataSet ds1 = new DataSet();
            DataSet ds2 = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter("select distinct MSLNO from MS ", conn);
            SqlDataAdapter db = new SqlDataAdapter("select distinct MSLNO from BO where STNO = '" + login.id + "'", conn);
            da.Fill(ds1);
            db.Fill(ds2);
            comboBox1.DataSource = ds1.Tables&#091;0].DefaultView;
            comboBox1.DisplayMember = "MSLNO";
            comboBox3.DataSource = ds2.Tables&#091;0].DefaultView;
            comboBox3.DisplayMember = "MSLNO";
            int count = comboBox1.Items.Count;//获取combobox1中所有行的数量
            comboBox1.SelectedIndex = -1;
            comboBox3.SelectedIndex = -1;
            SqlDataAdapter sda = new SqlDataAdapter("select MSNA AS 材料名,MSNO AS 材料编号,MSLNA AS 实验室名称,MSLNO AS 实验室编号,MSNU AS 材料余量 from MS", conn);
            DataSet ds = new DataSet();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet
            dataGridView1.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView1.RowHeadersVisible = true;//显示行标题
            SqlCommand cmd6 = new SqlCommand("select count(*) from BO where (" + Convert.ToInt32(login.today) + "-RTDA)&gt;='" + 0 + "' AND STNO = '" + login.id + "'", conn);
            SqlDataAdapter adapter = new SqlDataAdapter();
            adapter.SelectCommand = cmd6;
            int getw = (int)cmd6.ExecuteScalar();
            if (getw &gt; 0)
            {
                MessageBox.Show("您有" + getw + "条已过期未还材料记录，请及时归还材料！", "提示");
            }
            conn.Close();
        }

        string returnday;

        private void button1_Click(object sender, EventArgs e)
        {
            this.Hide();
            login form1 = new login();
            form1.Show();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            //或者conn = new SqlConnection("Data Source= . ; Initial Catalog=jxsk; Integrated Security=True ");
            SqlDataAdapter sda = new SqlDataAdapter("select MSNA AS 材料名,MSNO AS 材料编号,MSLNA AS 实验室名称,MSLNO AS 实验室编号,MSNU AS 材料余量 from MS", conn);
            DataSet ds = new DataSet();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet
            dataGridView1.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView1.RowHeadersVisible = true;//显示行标题
            conn.Close();
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void button4_Click(object sender, EventArgs e)
        {
            dataGridView2.DataSource = null;
            SqlConnection conn = new(login.connectket);
            SqlDataAdapter sda = new SqlDataAdapter("select MSNO AS 材料编号,MSLNO AS 材料所属实验室,BONU AS 材料数量,BODA AS 借用日期,RTDA AS 预计归还日期 from BO WHERE STNO ='" + login.id + "'", conn);
            DataSet ds = new DataSet();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet
            dataGridView2.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView2.RowHeadersVisible = true;//显示行标题
            int n = dataGridView2.Rows.Count;
            for (int i = 0; i &lt; n - 1; i++)
            {
                if (Convert.ToInt32(dataGridView2.Rows&#091;i].Cells&#091;4].Value) &gt; Convert.ToInt32(login.today))
                {
                    dataGridView2.Rows&#091;i].Cells&#091;0].Style.BackColor = System.Drawing.Color.LightGreen;
                    dataGridView2.Rows&#091;i].Cells&#091;1].Style.BackColor = System.Drawing.Color.LightGreen;
                    dataGridView2.Rows&#091;i].Cells&#091;2].Style.BackColor = System.Drawing.Color.LightGreen;
                    dataGridView2.Rows&#091;i].Cells&#091;3].Style.BackColor = System.Drawing.Color.LightGreen;
                    dataGridView2.Rows&#091;i].Cells&#091;4].Style.BackColor = System.Drawing.Color.LightGreen;
                }
                else if (Convert.ToInt32(dataGridView2.Rows&#091;i].Cells&#091;4].Value) == Convert.ToInt32(login.today))
                {
                    dataGridView2.Rows&#091;i].Cells&#091;0].Style.BackColor = System.Drawing.Color.Yellow;
                    dataGridView2.Rows&#091;i].Cells&#091;1].Style.BackColor = System.Drawing.Color.Yellow;
                    dataGridView2.Rows&#091;i].Cells&#091;2].Style.BackColor = System.Drawing.Color.Yellow;
                    dataGridView2.Rows&#091;i].Cells&#091;3].Style.BackColor = System.Drawing.Color.Yellow;
                    dataGridView2.Rows&#091;i].Cells&#091;4].Style.BackColor = System.Drawing.Color.Yellow;
                }
                else
                {
                    dataGridView2.Rows&#091;i].Cells&#091;0].Style.BackColor = System.Drawing.Color.Red;
                    dataGridView2.Rows&#091;i].Cells&#091;1].Style.BackColor = System.Drawing.Color.Red;
                    dataGridView2.Rows&#091;i].Cells&#091;2].Style.BackColor = System.Drawing.Color.Red;
                    dataGridView2.Rows&#091;i].Cells&#091;3].Style.BackColor = System.Drawing.Color.Red;
                    dataGridView2.Rows&#091;i].Cells&#091;4].Style.BackColor = System.Drawing.Color.Red;
                }
            }
            conn.Close();
        }

        private void tabPage3_Click(object sender, EventArgs e)
        {

        }

        private void student_Load(object sender, EventArgs e)
        {

        }

        private void button5_Click(object sender, EventArgs e)
        {
            dataGridView2.DataSource = null;
            SqlConnection conn = new(login.connectket);
            SqlDataAdapter sday = new SqlDataAdapter("select MSNO AS 材料编号,MSLNO AS 材料所属实验室,BONU AS 材料数量,BODA AS 借用日期,RTDA AS 归还日期 from RC WHERE STNO ='" + login.id + "'", conn);
            DataSet dsy = new DataSet();//实例化DataSet对象
            sday.Fill(dsy);//使用SqlDataAdapter对象的Fill方法填充DataSet            
            dataGridView2.DataSource = dsy.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView2.RowHeadersVisible = true;//显示行标题
            conn.Close();
        }

        private void button7_Click(object sender, EventArgs e)
        {
            textBox3.Text = "";
            textBox4.Text = "";
            textBox5.Text = "";
        }

        private void button6_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            if (textBox3.Text.Trim() != "" &amp;&amp; textBox4.Text.Trim() != "" &amp;&amp; textBox5.Text.Trim() != "")
            {
                SqlCommand cmd3 = new SqlCommand("select count(*) from ST where STNO = '" + login.id + "'", conn);
                conn.Open();
                int b = (int)cmd3.ExecuteScalar();
                if (b == 1)
                {
                    SqlCommand cmd4 = new SqlCommand("select STKE from ST where STNO = '" + login.id + "'", conn);
                    string c = cmd4.ExecuteScalar().ToString().Trim();
                    string oldpwd = login.GetSHA256HashFromString(textBox3.Text.ToString().Trim());
                    string newpwd = login.GetSHA256HashFromString(textBox4.Text.ToString().Trim());
                    string dnewpwd = login.GetSHA256HashFromString(textBox5.Text.ToString().Trim());

                    if (newpwd == dnewpwd)
                    {
                        if (c == oldpwd)
                        {
                            if (oldpwd != newpwd)
                            {
                                SqlCommand cmd5 = new SqlCommand("update ST set STKE = '" + newpwd + "'where STNO = '" + login.id + "'", conn);
                                int k = (int)cmd5.ExecuteNonQuery();
                                if (k &gt; 0)
                                {
                                    MessageBox.Show("密码修改成功，请重新登录！", "提示");
                                    this.Hide();
                                    login form1 = new login();
                                    form1.Show();
                                }
                                else
                                {
                                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                    MessageBox.Show("密码修改失败！", "提示");
                                    textBox3.Text = "";
                                    textBox4.Text = "";
                                    textBox5.Text = "";
                                }
                            }
                            else
                            {
                                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                MessageBox.Show("新旧密码不能一样！", "提示");
                                textBox4.Text = "";
                                textBox5.Text = "";
                            }
                        }
                        else
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("原密码填写错误！", "提示");
                            textBox3.Text = "";
                            textBox4.Text = "";
                            textBox5.Text = "";
                        }
                    }
                    else
                    {
                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                        MessageBox.Show("两次新密码不一致！", "提示");
                        textBox4.Text = "";
                        textBox5.Text = "";
                    }
                }
                else
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("用户名不存在请重新登录！", "提示");
                    this.Hide();
                    login form1 = new login();
                    form1.Show();
                }
                conn.Close();
            }
            else
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("密码不能为空！", "提示");
            }
        }

        private void textBox4_TextChanged(object sender, EventArgs e)
        {

        }

        private void groupBox1_Enter(object sender, EventArgs e)
        {

        }

        private void label10_Click(object sender, EventArgs e)
        {

        }

        private void dateTimePicker1_ValueChanged(object sender, EventArgs e)
        {
            returnday = dateTimePicker1.Value.ToString("yyyyMMdd");
            textBox7.Text = dateTimePicker1.Value.ToString("D");
        }

        private void button9_Click(object sender, EventArgs e)
        {
            comboBox2.DataSource = null;
            comboBox1.SelectedIndex = -1;
            comboBox2.SelectedIndex = -1;
            this.numericUpDown1.DecimalPlaces = 0;
            this.numericUpDown1.Value = Decimal.Round(1, 0);
            textBox7.Text = "";
            returnday = "";
            this.dateTimePicker1.Format = DateTimePickerFormat.Custom;
            this.dateTimePicker1.CustomFormat = "";
            this.dateTimePicker1.Checked = false;

        }

        private void button8_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            if (comboBox1.Text.Trim() == "")
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("实验室编号，材料编号为空！", "提示");
            }
            else
            {
                if (comboBox2.Text.Trim() == "")
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("材料编号为空！", "提示");
                }
                else
                {
                    string labid = comboBox1.Text.Trim();//实验室编号
                    string material = comboBox2.Text.Trim();//材料编号
                    int num = Convert.ToInt32(numericUpDown1.Value.ToString().Trim());//材料数量
                    returnday = dateTimePicker1.Value.ToString("yyyyMMdd");//returnday返还日期
                    //获取材料数量
                    SqlCommand cmd4 = new SqlCommand("select MSNU from MS where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                    SqlCommand cmd5 = new SqlCommand("select MSDP from MS where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                    conn.Open();
                    int c = Convert.ToInt32(cmd4.ExecuteScalar().ToString());
                    int d = Convert.ToInt32(cmd5.ExecuteScalar().ToString());
                    conn.Close();
                    if (d == 1)
                    {
                        if (textBox7.Text.Trim() == "")
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("该材料需要归还，请填写归还日期！", "提示");
                        }
                        else if (Convert.ToInt32(login.today.Trim()) &gt; Convert.ToInt32(returnday))
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("归还日期不能早于今天！", "提示");
                            textBox7.Text = "";
                            returnday = "";
                        }
                        else
                        {
                            if (c &gt;= num)
                            {
                                SqlCommand cmd = new SqlCommand("insert into BO(STNO,MSLNO,MSNO,BONU,BODA,RTDA,CODE) values ('" + login.id + "','" + labid + "','" + material + "','" + num + "','" + login.today + "','" + returnday + "','" + login.GenerateRandom(10) + "')", conn);
                                SqlCommand cmd1 = new SqlCommand("insert into RC(STNO,MSLNO,MSNO,BONU,BODA) values ('" + login.id + "','" + labid + "','" + material + "','" + num + "','" + login.today + "')", conn);
                                try//异常处理
                                {
                                    conn.Open();
                                    cmd.ExecuteNonQuery();
                                    cmd1.ExecuteNonQuery();
                                    int res = c - num;
                                    if (res == 0)
                                    {
                                        SqlCommand cmd2 = new SqlCommand("delete from MS where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                                        try
                                        {
                                            cmd2.ExecuteNonQuery();
                                            MessageBox.Show("该材料需要归还，借用成功！");
                                        }
                                        catch (Exception ex)
                                        {
                                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                            MessageBox.Show("删除原数据失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                        }
                                    }
                                    else
                                    {
                                        SqlCommand cmd2 = new SqlCommand("update MS set MSNU = '" + res + "'where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                                        try
                                        {
                                            cmd2.ExecuteNonQuery();
                                            MessageBox.Show("该材料需要归还，借用成功！");
                                            this.Hide();
                                            student form1 = new student();
                                            form1.Show();
                                        }
                                        catch (Exception ex)
                                        {
                                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                            MessageBox.Show("删除原数据失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                        }
                                    }
                                    conn.Close();
                                }
                                catch (Exception ex)
                                {
                                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                    MessageBox.Show("借用失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                }
                            }
                            else
                            {
                                MessageBox.Show("材料数量最多为" + c + "，请重新填写！", "提示");
                                numericUpDown1.Text = c.ToString();
                            }
                        }

                    }
                    else if (d == 0)
                    {
                        if (c &gt;= num)
                        {
                            SqlCommand cmd1 = new SqlCommand("insert into RC(STNO,MSLNO,MSNO,BONU,BODA,RTDA) values ('" + login.id + "','" + labid + "','" + material + "','" + num + "','" + login.today + "','无需归还')", conn);
                            try//异常处理
                            {
                                conn.Open();
                                cmd1.ExecuteNonQuery();
                                int res = c - num;
                                if (res == 0)
                                {
                                    SqlCommand cmd2 = new SqlCommand("delete from MS where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                                    try
                                    {
                                        cmd2.ExecuteNonQuery();
                                        MessageBox.Show("该材料不需要归还，借用成功！");
                                    }
                                    catch (Exception ex)
                                    {
                                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                        MessageBox.Show("删除原数据失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    }
                                }
                                else
                                {
                                    SqlCommand cmd2 = new SqlCommand("update MS set MSNU = '" + res + "'where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                                    try
                                    {
                                        cmd2.ExecuteNonQuery();
                                        MessageBox.Show("该材料不需要归还，借用成功！");
                                        this.Hide();
                                        student form1 = new student();
                                        form1.Show();
                                    }
                                    catch (Exception ex)
                                    {
                                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                        MessageBox.Show("删除原数据失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    }
                                }
                                conn.Close();
                                conn.Close();
                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show("借用失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                            }
                        }
                        else
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("材料数量最多为" + c + "，请重新填写！", "提示");
                            numericUpDown1.Text = c.ToString();
                        }
                    }
                    else
                    {
                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                        MessageBox.Show("数据库信息错误，请联系管理员！");
                    }
                }

            }
        }

        private void tabPage5_Click(object sender, EventArgs e)
        {

        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            comboBox2.DataSource = null;
            comboBox2.SelectedIndex = -1;
            comboBox2.Items.Clear();
            SqlConnection conn = new(login.connectket);
            conn.Open();
            DataSet ds1 = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter("select distinct MSNO from MS WHERE MSLNO = '" + comboBox1.Text + "'", conn);
            da.Fill(ds1);
            comboBox2.DataSource = ds1.Tables&#091;0].DefaultView;
            comboBox2.DisplayMember = "MSNO";
            conn.Close();
            comboBox2.SelectedIndex = -1;
        }

        private void numericUpDown1_ValueChanged(object sender, EventArgs e)
        {

        }

        private void button10_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            if (comboBox2.Text.Trim() == "")
            {
                MessageBox.Show("请选择材料！", "提示");
            }
            else
            {
                string labid = comboBox1.Text.Trim();//实验室编号
                string material = comboBox2.Text.Trim();//材料编号
                SqlCommand cmd5 = new SqlCommand("select MSDP from MS where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn); conn.Open();
                int d = Convert.ToInt32(cmd5.ExecuteScalar().ToString());
                conn.Close();
                if (d == 1)
                {
                    MessageBox.Show("材料" + comboBox2.Text.Trim() + "需要归还！", "提示");
                }
                else
                {
                    MessageBox.Show("材料" + comboBox2.Text.Trim() + "不需要归还！", "提示");
                }
            }
        }

        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)
        {
            comboBox4.DataSource = null;
            comboBox4.SelectedIndex = -1;
            comboBox4.Items.Clear();
            SqlConnection conn = new(login.connectket);
            conn.Open();
            DataSet ds1 = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter("select distinct MSNO from BO WHERE MSLNO = '" + comboBox3.Text + "'", conn);
            da.Fill(ds1);
            comboBox4.DataSource = ds1.Tables&#091;0].DefaultView;
            comboBox4.DisplayMember = "MSNO";
            conn.Close();
            comboBox4.SelectedIndex = -1;
        }

        private void button11_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            if (comboBox3.Text.Trim() == "")
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("实验室编号为空！", "提示");
            }
            else
            {
                if (comboBox4.Text.Trim() == "")
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("材料编号为空！", "提示");
                }
                else
                {
                    string labid = comboBox3.Text.Trim();//实验室编号
                    string material = comboBox4.Text.Trim();//材料编号
                    int num = Convert.ToInt32(numericUpDown2.Value.ToString().Trim());//材料数量

                    //获取材料数量
                    SqlCommand cmd4 = new SqlCommand("select BONU from BO where MSNO = '" + material + "' AND MSLNO = '" + labid + "' AND STNO = '" + login.id + "'", conn);
                    SqlCommand cmd5 = new SqlCommand("select BODA from BO where MSNO = '" + material + "' AND MSLNO = '" + labid + "' AND STNO = '" + login.id + "'", conn);
                    SqlCommand cmd6 = new SqlCommand("select MSNU from MS where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                    SqlCommand cmd9 = new SqlCommand("select count(*) from MS where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                    SqlCommand cmd11 = new SqlCommand("select CODE from BO where MSNO = '" + material + "' AND MSLNO = '" + labid + "' AND STNO = '" + login.id + "'", conn);
                    conn.Open();
                    int orinum;
                    int b = (int)cmd9.ExecuteScalar();
                    string code = cmd11.ExecuteScalar().ToString();
                    SqlDataReader dr = cmd5.ExecuteReader();
                    dr.Read();
                    string borrday = dr&#091;0].ToString().Trim();
                    dr.Dispose();
                    cmd5.Dispose();
                    int c = (int)cmd4.ExecuteScalar();
                    if (b == 0)
                    {
                        orinum = 0;
                    }
                    else
                    {
                        SqlDataReader dr1 = cmd6.ExecuteReader();
                        dr1.Read();
                        orinum = Convert.ToInt32(dr1&#091;0].ToString());
                        dr1.Dispose();
                    }
                    conn.Close();
                    if (orinum &gt; 0)
                    {
                        if (c &gt;= num)
                        {
                            conn.Open();
                            int res = c - num;
                            if (res == 0)
                            {
                                int x = orinum + num;
                                SqlCommand cmd2 = new SqlCommand("delete from BO where MSNO = '" + material + "' AND MSLNO = '" + labid + "' AND BONU = '" + num + "' AND STNO = '" + login.id + "'AND CODE = '" + code + "'", conn);
                                SqlCommand cmd3 = new SqlCommand("update RC set RTDA ='" + login.today + "'where MSNO = '" + material + "' AND MSLNO = '" + labid + "' AND BONU = '" + num + "' AND STNO = '" + login.id + "'", conn);
                                SqlCommand cmd7 = new SqlCommand("update MS set MSNU = '" + x + "'where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                                try
                                {
                                    cmd2.ExecuteNonQuery();
                                    cmd3.ExecuteNonQuery();
                                    cmd7.ExecuteNonQuery();
                                    MessageBox.Show("材料归还成功！");
                                }
                                catch (Exception ex)
                                {
                                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                    MessageBox.Show("操作失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                }
                            }
                            else
                            {
                                int x = orinum + num;
                                SqlCommand cmd2 = new SqlCommand("update BO set BONU = '" + res + "'where STNO = '" + login.id + "' AND MSLNO = '" + labid + "' AND BODA = '" + borrday + "' AND STNO = '" + login.id + "'AND CODE = '" + code + "'", conn);
                                SqlCommand cmd7 = new SqlCommand("update MS set MSNU = '" + x + "'where MSNO = '" + material + "' AND MSLNO = '" + labid + "'", conn);
                                try
                                {
                                    cmd2.ExecuteNonQuery();
                                    cmd7.ExecuteNonQuery();
                                    MessageBox.Show("部分材料归还成功！");
                                    this.Hide();
                                    student form1 = new student();
                                    form1.Show();
                                }
                                catch (Exception ex)
                                {
                                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                    MessageBox.Show("操作失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                }
                            }
                            conn.Close();
                        }
                        else
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("材料数量最多为" + c + "，请重新填写！", "提示");
                            numericUpDown2.Text = c.ToString();
                        }
                    }
                    else
                    {
                        if (c &gt;= num)
                        {
                            conn.Open();
                            int res = c - num;
                            if (res == 0)
                            {
                                int x = orinum + num;
                                SqlCommand cmd2 = new SqlCommand("delete from BO where MSNO = '" + material + "' AND MSLNO = '" + labid + "' AND BONU = '" + num + "' AND STNO = '" + login.id + "'", conn);
                                SqlCommand cmd3 = new SqlCommand("update RC set RTDA ='" + login.today + "'where MSNO = '" + material + "' AND MSLNO = '" + labid + "' AND BONU = '" + num + "' AND STNO = '" + login.id + "'", conn);
                                SqlCommand cmd7 = new SqlCommand("insert into MS(MSNO,MSNU,MSLNO,MSDP) values ('" + material + "','" + x + "','" + labid + "','" + 1 + "')", conn);
                                try
                                {
                                    cmd2.ExecuteNonQuery();
                                    cmd3.ExecuteNonQuery();
                                    cmd7.ExecuteNonQuery();
                                    MessageBox.Show("材料归还成功！");
                                }
                                catch (Exception ex)
                                {
                                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                    MessageBox.Show("操作失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                }
                            }
                            else
                            {
                                int x = orinum + num;
                                SqlCommand cmd2 = new SqlCommand("update BO set BONU = '" + res + "'where STNO = '" + login.id + "' AND MSLNO = '" + labid + "' AND BONU = '" + c + "' AND STNO = '" + login.id + "'", conn);
                                SqlCommand cmd3 = new SqlCommand("insert into RC(STNO,MSLNO,MSNO,BONU,BODA,RTDA) values ('" + login.id + "','" + labid + "','" + material + "','" + num + "','" + borrday + "','" + login.today + "')", conn);
                                SqlCommand cmd7 = new SqlCommand("insert into MS(MSNO,MSNU,MSLNO,MSDP) values ('" + material + "','" + x + "','" + labid + "','" + 1 + "')", conn);
                                try
                                {
                                    cmd2.ExecuteNonQuery();
                                    cmd3.ExecuteNonQuery();
                                    cmd7.ExecuteNonQuery();
                                    MessageBox.Show("部分材料归还成功！");
                                    this.Hide();
                                    student form1 = new student();
                                    form1.Show();
                                }
                                catch (Exception ex)
                                {
                                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                    MessageBox.Show("操作失败！失败原因：" + ex.Message.ToString(), "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                }
                            }
                            conn.Close();
                        }
                        else
                        {
                            MessageBox.Show("材料数量最多为" + c + "，请重新填写！", "提示");
                            numericUpDown2.Text = c.ToString();
                        }
                    }
                }
            }
        }

        private void button12_Click(object sender, EventArgs e)
        {
            comboBox4.DataSource = null;
            comboBox3.SelectedIndex = -1;
            comboBox4.SelectedIndex = -1;
            this.numericUpDown2.DecimalPlaces = 0;
            this.numericUpDown2.Value = Decimal.Round(1, 0);
            returnday = "";
        }

        private void button13_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            SqlCommand cmd6 = new SqlCommand("select count(*) from BO where (" + Convert.ToInt32(login.today) + "-RTDA)&gt;='" + 0 + "' AND STNO = '" + login.id + "'", conn);
            SqlDataAdapter adapter = new SqlDataAdapter();
            adapter.SelectCommand = cmd6;
            int getw = (int)cmd6.ExecuteScalar();
            if (MessageBox.Show("确认删除？", "提示信息", MessageBoxButtons.YesNo) == DialogResult.Yes)
            {
                if (MessageBox.Show("最后一次确认删除？", "提示信息", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    if (getw &gt; 0)
                    {
                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                        MessageBox.Show("您有" + getw + "条已过期未还材料记录，请及时归还材料后进行注销操作！", "提示");
                    }
                    else
                    {
                        SqlCommand cmd1 = new SqlCommand("delete from ST where STNO = '" + login.id + "'", conn);
                        SqlCommand cmd2 = new SqlCommand("delete from BO where STNO = '" + login.id + "'", conn);
                        cmd1.ExecuteNonQuery();
                        cmd2.ExecuteNonQuery();
                        MessageBox.Show("注销账户成功", "提示");
                        this.Hide();
                        login form1 = new login();
                        form1.Show();
                    }
                }
            }
            conn.Close();
        }

        private void label15_Click(object sender, EventArgs e)
        {

        }

    }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>学生界面分为材料信息查询、借用信息查询、借用历史查询、借用、归还、修改个人密码。学生界面在加载的时候获取当前用户ID，用户姓名，系统时间，同时查询借用历史表中有多少未归还已过期材料记录。如果查询数量大于0，显示提示框提示需要归还。<br>材料信息查询只能让用户刷新读取数据，不允许用户修改删除数据。借用历史，借用中数据只允许查看，刷新；借用中数据被查询出来后，会标记背景颜色。如果材料当天到期，标黄，如果已经过期，表红，借用中且未到归还日期就标绿。<br>借用和归还操作分别需要两个combobox，第一个combobox的数据源在加载窗口的时候就已经设置好了，第二个combobox的数据源由第一个combobox里面的选项为关键字筛选出。借用、归还的数量都需要选择数量，数量不能超过源里的最大数量。如果超过就弹出提示框，并且自动将数据调到最大。<br>修改个人信息只允许修改密码，修改密码前要校对老密码是否正确和两次输入的新密码是否一致。</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/2021070221360132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="学生——材料余量" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213639697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="学生——借用查询" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213714397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="学生——操作——借用" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213742980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="学生——操作——归还" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/2021070221380825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="学生——用户信息设置" /></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="4-admin-cs">4.Admin.cs</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>(这里的A需要大写，admin在C#里算已经定义的字符):</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>using System;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

namespace 大学实验材料管理信息系统数据库设计
{
    public partial class Admin : Form
    {
        public Admin()
        {
            InitializeComponent();
            SqlConnection conn = new(login.connectket);
            textBox1.Text = login.id;
            textBox2.Text = DateTime.Now.ToString("yyyy/MM/dd " + "ddd");
            SqlCommand com = new("select ADNA from AD where ADNO='" + login.id + "'", conn);
            conn.Open();
            SqlDataReader dr = com.ExecuteReader();
            dr.Read();
            string hello = "欢迎您" + dr&#091;0].ToString().Trim() + "!";
            label3.Text = hello;
            dr.Dispose();
            com.Dispose();
        }

        private void groupBox1_Enter(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            this.Hide();
            login form1 = new();
            form1.Show();
        }

        private void admin_Load(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            conn.Open();
            SqlDataAdapter sda = new("select MSNA AS 材料名称,MSNO AS 材料编号,MSLNA AS 实验室名称,MSLNO AS 实验室编号,MSNU AS 材料余量,MSDP AS 是否需要归还 from MS", conn);
            DataSet ds = new();
            sda.Fill(ds);
            dataGridView1.DataSource = ds.Tables&#091;0];
            dataGridView1.RowHeadersVisible = true;
            SqlDataAdapter sda1 = new("select STNA AS 学生姓名,STNO AS 学号 from ST", conn);
            DataSet ds1 = new();
            sda1.Fill(ds1);
            dataGridView2.DataSource = ds1.Tables&#091;0];
            dataGridView2.RowHeadersVisible = true;
            SqlDataAdapter sda2 = new("select STNO AS 学生学号,MSNO AS 材料编号,MSLNO AS 实验室编号,BONU AS 借用数量,BODA AS 借用日期,RTDA AS 预计归还日期,CODE AS 核验码 from BO", conn);
            DataSet ds2 = new();
            sda2.Fill(ds2);
            dataGridView3.DataSource = ds2.Tables&#091;0];
            dataGridView3.RowHeadersVisible = true;
            SqlDataAdapter sda3 = new("select MSLNA AS 实验室名称,MSLNO AS 实验室编号,ADNA AS 管理员姓名,ADNO AS 管理员编号 from MSL", conn);
            DataSet ds3 = new();
            sda3.Fill(ds3);
            dataGridView4.DataSource = ds3.Tables&#091;0];
            dataGridView4.RowHeadersVisible = true;
            conn.Close();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            //实例化SqlConnection变量conn，连接数据库
            SqlConnection conn = new(login.connectket);
            conn.Open();
            //实例化SqlDataAdapter对象
            SqlDataAdapter sda = new("select MSNA AS 材料名称,MSNO AS 材料编号,MSLNA AS 实验室名称,MSLNO AS 实验室编号,MSNU AS 材料余量,MSDP AS 是否需要归还 from MS", conn);
            DataSet ds = new();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet            
            dataGridView1.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView1.RowHeadersVisible = true;//禁止显示行标题
            conn.Close();
        }

        private void button8_Click(object sender, EventArgs e)
        {
            //实例化SqlConnection变量conn，连接数据库
            SqlConnection conn = new(login.connectket);
            conn.Open();
            //实例化SqlDataAdapter对象
            SqlDataAdapter sda = new("select STNA AS 学生姓名,STNO AS 学号 from ST", conn);
            DataSet ds = new();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet            
            dataGridView2.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView2.RowHeadersVisible = true;//禁止显示行标题
            conn.Close();
        }

        private void button11_Click(object sender, EventArgs e)
        {
            //实例化SqlConnection变量conn，连接数据库
            SqlConnection conn = new(login.connectket);
            conn.Open();
            //实例化SqlDataAdapter对象
            SqlDataAdapter sda = new("select STNO AS 学生学号,MSNO AS 材料编号,MSLNO AS 实验室编号,BONU AS 借用数量,BODA AS 借用日期,RTDA AS 预计归还日期,CODE AS 核验码 from BO", conn);
            DataSet ds = new();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet            
            dataGridView3.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView3.RowHeadersVisible = true;//禁止显示行标题
            conn.Close();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            conn.Open();
            SqlCommand cmd = new("select MSNA AS 材料名称,MSNO AS 材料编号,MSLNA AS 实验室名称,MSLNO AS 实验室编号,MSNU AS 材料余量,MSDP AS 是否需要归还 from MS", conn);
            SqlDataAdapter sda = new();
            sda.SelectCommand = cmd;
            DataSet ds = new();//实例化DataSet对象            
            sda.Fill(ds, "cs");
            DataTable dt = ds.Tables&#091;"cs"];
            DataRow dr = ds.Tables&#091;"cs"].NewRow();//新建一个数据行
            int r = dataGridView1.CurrentRow.Index;//获得当前行的索引
            //数据行赋值
            dr&#091;0] = dataGridView1.Rows&#091;r].Cells&#091;0].Value;
            dr&#091;1] = dataGridView1.Rows&#091;r].Cells&#091;1].Value;
            dr&#091;2] = dataGridView1.Rows&#091;r].Cells&#091;2].Value;
            dr&#091;3] = dataGridView1.Rows&#091;r].Cells&#091;3].Value;
            dr&#091;4] = dataGridView1.Rows&#091;r].Cells&#091;4].Value;
            dr&#091;5] = dataGridView1.Rows&#091;r].Cells&#091;5].Value;
            String str = this.dataGridView1.CurrentRow.Cells&#091;"材料编号"].Value.ToString();
            String sql1 = "delete from MS where MSNO ='" + str + "'";
            cmd = new SqlCommand(sql1, conn);
            cmd.ExecuteNonQuery();
            ds.Tables&#091;"cs"].Rows.Add(dr);
            //批量更新数据库
            SqlCommandBuilder cmdbuilder = new(sda);
            if (ds.Tables&#091;"cs"].GetChanges() != null)
            {
                sda.Update(ds, "cs");
                ds.AcceptChanges();
            }
            MessageBox.Show("修改成功！");
            conn.Close();
        }

        private void button9_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            //判断用户是否选择一行数据，true为没选择，false为选择
            if (this.dataGridView3.Rows&#091;this.dataGridView3.CurrentRow.Index].Cells&#091;"核验码"].Value.ToString() == "")
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("请选择一项进行删除！");
            }
            else
            {  //判断用户是否点击确定按钮，true为点击，false为没有点击
                if (MessageBox.Show("确认删除？", "提示信息", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    String str = this.dataGridView3.CurrentRow.Cells&#091;6].Value.ToString();
                    String sql = "delete from BO where CODE ='" + str + "'";
                    SqlCommand cmd = new(sql, conn);
                    conn.Open();
                    cmd.ExecuteNonQuery();
                    this.dataGridView3.Rows.Remove(this.dataGridView3.CurrentRow);
                    MessageBox.Show("此行删除成功！");
                }
            }
            conn.Close();
        }

        private void button10_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            conn.Open();
            SqlCommand cmd = new("select STNO AS 学生学号,MSNO AS 材料编号,MSLNO AS 实验室编号,BONU AS 借用数量,BODA AS 借用日期,RTDA AS 预计归还日期,CODE AS 核验码 from BO", conn);
            SqlDataAdapter sda = new();
            sda.SelectCommand = cmd;
            DataSet ds = new();//实例化DataSet对象            
            sda.Fill(ds, "cs");
            DataTable dt = ds.Tables&#091;"cs"];
            DataRow dr = ds.Tables&#091;"cs"].NewRow();//新建一个数据行
            int r = dataGridView3.CurrentRow.Index;//获得当前行的索引
            //数据行赋值
            dr&#091;0] = dataGridView3.Rows&#091;r].Cells&#091;0].Value;
            dr&#091;1] = dataGridView3.Rows&#091;r].Cells&#091;1].Value;
            dr&#091;2] = dataGridView3.Rows&#091;r].Cells&#091;2].Value;
            dr&#091;3] = dataGridView3.Rows&#091;r].Cells&#091;3].Value;
            dr&#091;4] = dataGridView3.Rows&#091;r].Cells&#091;4].Value;
            dr&#091;5] = dataGridView3.Rows&#091;r].Cells&#091;5].Value;
            dr&#091;6] = dataGridView3.Rows&#091;r].Cells&#091;6].Value;
            String str = this.dataGridView3.CurrentRow.Cells&#091;"核验码"].Value.ToString();
            String sql1 = "delete from BO where CODE ='" + str + "'";
            cmd = new SqlCommand(sql1, conn);
            cmd.ExecuteNonQuery();
            ds.Tables&#091;"cs"].Rows.Add(dr);
            //批量更新数据库
            SqlCommandBuilder cmdbuilder = new(sda);
            if (ds.Tables&#091;"cs"].GetChanges() != null)
            {
                sda.Update(ds, "cs");
                ds.AcceptChanges();
            }
            MessageBox.Show("修改成功！");
            conn.Close();
        }

        private void button5_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            //判断用户是否选择一行数据，true为没选择，false为选择
            if (this.dataGridView1.Rows&#091;this.dataGridView1.CurrentRow.Index].Cells&#091;"材料编号"].Value.ToString() == "")
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("请选择一项进行删除！");
            }
            else
            {  //判断用户是否点击确定按钮，true为点击，false为没有点击
                if (MessageBox.Show("确认删除？", "提示信息", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    String str = this.dataGridView1.CurrentRow.Cells&#091;1].Value.ToString();
                    String sql = "delete from MS where MSNO ='" + str + "'";
                    SqlCommand cmd = new(sql, conn);
                    conn.Open();
                    cmd.ExecuteNonQuery();
                    this.dataGridView1.Rows.Remove(this.dataGridView1.CurrentRow);
                    MessageBox.Show("此行删除成功！");
                }
            }
            conn.Close();
        }

        private void button6_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            //判断用户是否选择一行数据，true为没选择，false为选择
            if (this.dataGridView2.Rows&#091;this.dataGridView2.CurrentRow.Index].Cells&#091;"学号"].Value.ToString() == "")
            {
                MessageBox.Show("请选择一项进行删除！");
            }
            else
            {  //判断用户是否点击确定按钮，true为点击，false为没有点击
                if (MessageBox.Show("确认删除？", "提示信息", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    String str = this.dataGridView2.CurrentRow.Cells&#091;1].Value.ToString();
                    String sql = "delete from ST where STNO ='" + str + "'";
                    SqlCommand cmd = new(sql, conn);
                    conn.Open();
                    cmd.ExecuteNonQuery();
                    this.dataGridView2.Rows.Remove(this.dataGridView2.CurrentRow);
                    MessageBox.Show("此行删除成功！");
                }
            }
            conn.Close();
        }

        private void button12_Click(object sender, EventArgs e)
        {
            textBox3.Text = "";
            textBox4.Text = "";
            textBox5.Text = "";
        }

        private void button13_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            if (textBox3.Text.Trim() != "" &amp;&amp; textBox4.Text.Trim() != "" &amp;&amp; textBox5.Text.Trim() != "")
            {
                SqlCommand cmd3 = new("select count(*) from AD where ADNO = '" + login.id + "'", conn);
                conn.Open();
                int b = (int)cmd3.ExecuteScalar();
                if (b == 1)
                {
                    SqlCommand cmd4 = new("select ADKE from AD where ADNO = '" + login.id + "'", conn);
                    string c = cmd4.ExecuteScalar().ToString().Trim();
                    string oldpwd = login.GetSHA256HashFromString(textBox3.Text.ToString().Trim());
                    string newpwd = login.GetSHA256HashFromString(textBox4.Text.ToString().Trim());
                    string dnewpwd = login.GetSHA256HashFromString(textBox5.Text.ToString().Trim());

                    if (newpwd == dnewpwd)
                    {
                        if (c == oldpwd)
                        {
                            if (oldpwd != newpwd)
                            {
                                SqlCommand cmd5 = new("update AD set ADKE = '" + newpwd + "'where ADNO = '" + login.id + "'", conn);
                                int k = (int)cmd5.ExecuteNonQuery();
                                if (k &gt; 0)
                                {
                                    MessageBox.Show("密码修改成功，请重新登录！", "提示");
                                    this.Hide();
                                    login form1 = new();
                                    form1.Show();
                                }
                                else
                                {
                                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                    MessageBox.Show("密码修改失败！", "提示");
                                    textBox3.Text = "";
                                    textBox4.Text = "";
                                    textBox5.Text = "";
                                }
                            }
                            else
                            {
                                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                                MessageBox.Show("新旧密码不能一样！", "提示");
                                textBox4.Text = "";
                                textBox5.Text = "";
                            }

                        }
                        else
                        {
                            this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                            MessageBox.Show("原密码填写错误！", "提示");
                            textBox3.Text = "";
                            textBox4.Text = "";
                            textBox5.Text = "";
                        }
                    }
                    else
                    {
                        this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                        MessageBox.Show("两次新密码不一致！", "提示");
                        textBox4.Text = "";
                        textBox5.Text = "";
                    }
                }
                else
                {
                    this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                    MessageBox.Show("用户名不存在请重新登录！", "提示");
                    this.Hide();
                    login form1 = new();
                    form1.Show();
                }
                conn.Close();
            }
            else
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("密码不能为空！", "提示");
            }
        }

        private void button16_Click(object sender, EventArgs e)
        {
            //实例化SqlConnection变量conn，连接数据库
            SqlConnection conn = new(login.connectket);
            conn.Open();
            //实例化SqlDataAdapter对象
            SqlDataAdapter sda = new("select MSLNA AS 实验室名称,MSLNO AS 实验室编号,ADNA AS 管理员姓名,ADNO AS 管理员编号 from MSL", conn);
            DataSet ds = new();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet            
            dataGridView4.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView4.RowHeadersVisible = true;//禁止显示行标题
            conn.Close();
        }

        private void button15_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            conn.Open();
            SqlCommand cmd = new("select MSLNA AS 实验室名称,MSLNO AS 实验室编号,ADNA AS 管理员姓名,ADNO AS 管理员编号 from MSL", conn);
            SqlDataAdapter sda = new();
            sda.SelectCommand = cmd;
            DataSet ds = new();//实例化DataSet对象            
            sda.Fill(ds, "cs");
            DataTable dt = ds.Tables&#091;"cs"];
            DataRow dr = ds.Tables&#091;"cs"].NewRow();//新建一个数据行
            int r = dataGridView4.CurrentRow.Index;//获得当前行的索引
            //数据行赋值
            dr&#091;0] = dataGridView4.Rows&#091;r].Cells&#091;0].Value;
            dr&#091;1] = dataGridView4.Rows&#091;r].Cells&#091;1].Value;
            dr&#091;2] = dataGridView4.Rows&#091;r].Cells&#091;2].Value;
            dr&#091;3] = dataGridView4.Rows&#091;r].Cells&#091;3].Value;
            String str = this.dataGridView4.CurrentRow.Cells&#091;"实验室编号"].Value.ToString();
            String sql1 = "delete from MSL where MSLNO ='" + str + "'";
            cmd = new SqlCommand(sql1, conn);
            cmd.ExecuteNonQuery();
            ds.Tables&#091;"cs"].Rows.Add(dr);
            //批量更新数据库
            SqlCommandBuilder cmdbuilder = new(sda);
            if (ds.Tables&#091;"cs"].GetChanges() != null)
            {
                sda.Update(ds, "cs");
                ds.AcceptChanges();
            }
            MessageBox.Show("修改成功！");
            conn.Close();
        }

        private void button14_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            //判断用户是否选择一行数据，true为没选择，false为选择
            if (this.dataGridView4.Rows&#091;this.dataGridView4.CurrentRow.Index].Cells&#091;"实验室编号"].Value.ToString() == "")
            {
                this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top - 10); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left + 10, this.Top); Thread.Sleep(1); this.Location = new Point(this.Left, this.Top + 10); Thread.Sleep(1); this.Location = new Point(this.Left - 10, this.Top);
                MessageBox.Show("请选择一项进行删除！");
            }
            else
            {  //判断用户是否点击确定按钮，true为点击，false为没有点击
                if (MessageBox.Show("确认删除？", "提示信息", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {
                    String str = this.dataGridView4.CurrentRow.Cells&#091;1].Value.ToString();
                    String sql = "delete from MSL where MSLNO ='" + str + "'";
                    SqlCommand cmd = new(sql, conn);
                    conn.Open();
                    cmd.ExecuteNonQuery();
                    this.dataGridView4.Rows.Remove(this.dataGridView4.CurrentRow);
                    MessageBox.Show("此行删除成功！");
                }
            }
            conn.Close();
        }
    }
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>管理员可以查询、添加、修改、删除材料信息，除去密码以外的个人信息，实验室信息，借用信息，以及个人信息。<br>修改个人信息只允许修改密码，修改密码前要校对老密码是否正确和两次输入的新密码是否一致。</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702213924402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="管理员——材料管理" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702214009781.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="管理员——学生信息" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702214054434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="管理员——借用中信息管理" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702214127351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="管理员——实验室设置" /></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702214147818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="管理员——用户信息设置" /></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3 id="5-guider-cs">5.guider.cs</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace 大学实验材料管理信息系统数据库设计
{
    public partial class guider : Form
    {
        public guider()
        {
            InitializeComponent();
            textBox2.Text = DateTime.Now.ToString("yyyy/MM/dd " + "ddd");
        }

        private void button2_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            this.Hide();
            login form1 = new login();
            form1.Show();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            SqlConnection conn = new(login.connectket);
            SqlDataAdapter sda = new SqlDataAdapter("select MSNA AS 材料名,MSNO AS 材料编号,MSLNA AS 实验室名称,MSLNO AS 实验室编号,MSNU AS 材料余量 from MS", conn);
            DataSet ds = new DataSet();//实例化DataSet对象
            sda.Fill(ds);//使用SqlDataAdapter对象的Fill方法填充DataSet            
            dataGridView1.DataSource = ds.Tables&#091;0];//设置dataGridView1控件的数据源
            dataGridView1.RowHeadersVisible = true;//显示行标题
            conn.Close();
        }

        private void guider_Load(object sender, EventArgs e)
        {

        }

        private void groupBox1_Enter(object sender, EventArgs e)
        {

        }
    }
}


</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>以保证公开透明的原则游客登录只允许查看材料信息表</p>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210702214301994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="游客登录" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="总结"><strong>总结</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本实验采用的是实验指导书中实验7、8的方法去做的，过程会稍显复杂。在实验期间主要心得与收获如下：</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>实验本身并不是很难，因为大多的实现方法就是增、删、查、改四项，真正有问题的是实现部分，因为要考虑到各个组件和界面的交互操作；</li><li>代码本身不难写，难的是数据库的设计和界面的美工，这两个方面是这么久一直没有涉及过的，尤其是界面的美工。数据库的设计也是，要详细分析好各个数据项的数据类型，否则编写代码的时候会出现很严重的类型匹配错误；</li><li>学生窗口中的借用选项卡和归还选项卡中的combobox都从数据库中获取信息，当选择第一个combobox中的数据后第二个combobox才会加载信息源；</li><li>借用中记录表BO里面可能会出现相同借用的情况（即同一个人在同一天借了相同数量的相同物品），我创建了一个生成十位核验码的方法GenerateRandom(int Length) 每次借用东西的时候都会自动生成一个核验码来确定唯一行；</li><li>我使用的是VS2019里的C#窗体应用，目标框架使用的是.NET5.0；</li><li>完成题目所要求的功能花了两天加一个通宵，很多时候网上的代码不能使用，我只能代码进行重构，这个过程很痛苦，因为有些地方改了之后就会报错，花费很多时间来换条路进行重构。但是结局是开心的，因为最后完成了我的目标，使得代码的整洁度、可读性都得到了不小的提升。</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="写在最后"><strong>写在最后</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3 id="7-3">7.3</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>这次的小学期就很离谱。老师王学伟就全程不管我们班，问她问题也不耐烦。当她刚刚给女生看完数据库，我们男生想给她看一下我们的数据库设计的怎么样她就不想看，说到时候一起看。我们还去问了好几遍，就是不看。最后在今天下午她不耐烦的花了两分钟来看了我操作程序（只演示了登录，学生页面显示信息和借用）的同时问我问题（算是答辩），最后说不用演示了直接给我了分数。这个程序在她这里就花了两分钟不到就完成答辩和评分。我自认为我从0开始（没学过C#和SSMS）写了两天加一个通宵的东西比人家花了半天时间复制粘贴弄出来什么技术含量没有的框架好，但是人家就是分数比我高？以后的北印信工的同学一定要避坑，别选某些老师的课，真就恶心人，太离谱！！！</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="7-5更改">7.5更改</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>室友问了整个数据库系统设计的评分标准。评高分的标准——使用的语言是否为Java、设计是否插入背景图片（ps：我们都没学过Java连接数据库，C#连接数据库也只是在最后的两个实验里有，她关于用Java或者C#连接数据库一点没说），你这高分全是美观要求为啥不去教设计艺术学院？来嚯嚯我们信工？我们翻遍了整个实验的题目与要求，没有找到一点跟她说的相关的评分标准。我个人认为作为一个老师这样不咋地。你小学期每天在我们实验室待的时间不超过十分钟。在上课时间出去接孩子。一直在隔壁班，有什么通知只跟隔壁班说。再强调一下以后的北印信工的同学在选课的时候一定要避坑，别选某些老师的课，这某些老师太恶心人，越想越离谱！！！</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="7-20优化程序算法">7.20优化程序算法</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>优化数据库，删除部分无用数据库列；</li><li>增加密码加密算法，通过sha256加密算法加密用户密码，将加密后的密码存入数据库；</li><li>更新数据库部分列的表示意义和属性；</li><li>添加了错误操作窗口抖动。</li></ol>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3 id="21-7-22更新日志">21.7.22更新日志：</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>修复了修改密码报错新旧密码重复的问题</li><li>利用云端服务器数据库替代本地数据库</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="附数据库系统设计题目与要求"><em>附数据库系统设计题目与要求</em></h2>
<!-- /wp:heading -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210705104517191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="数据库系统设计题目与要求1" /><figcaption><em>数据库系统设计题目与要求1</em></figcaption></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://img-blog.csdnimg.cn/20210705104604327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="数据库系统设计题目与要求2" /><figcaption><em> 数据库系统设计题目与要求2</em></figcaption></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date><![CDATA[2021-07-02 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-07-01 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-02 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-01 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shujvkuxiaoxueqi]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>1</wp:is_sticky>
										<category domain="category" nicename="c-3"><![CDATA[C#]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[21%e6%98%a5%e6%95%b0%e6%8d%ae%e5%ba%93%e7%b3%bb%e7%bb%9f%e8%ae%be%e8%ae%a1%e5%b0%8f%e5%ad%a6%e6%9c%9f-%e5%a4%a7%e5%ad%a6%e5%ae%9e%e9%aa%8c%e6%9d%90%e6%96%99%e7%ae%a1%e7%90%86%e4%bf%a1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-05]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[258]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[算法分析与设计大作业——期末测试]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/20/finaltest/</link>
		<pubDate>Wed, 19 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p> 需要代码请评论或者与我联系！ </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>问题描述</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>助教小明给期末测验出了n道算法题目。他希望在即将到来的期末测验试卷中使用其中k道题目。每道算法题目都有一个难度等级。如果一次测验中的所有k道题目都有不同的难度等级，那么这次期末测试就是有区分度的。计算小明可以设计多少种有区分度的期末试卷。<br>注：两份测验试卷当且仅当一份试卷中存在某一题目p，而另一份试卷中不存在这个题p，这两份试卷才有区别。<br>输出结果对998,244,353取余。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>输入形式</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>输入第一行包括两个用空格分隔开的整数n和k，1≤k≤n≤1000<br>输入第二行n个用空格分开隔的整数li，表示不同题目的难度，Li≤109</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>输出形式</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>一个整数，表示可设计的有区分度的期末试卷数目。结果对998,244,353取余</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>样例输入</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>5 2<br>1 2 3 4 5</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>样例输出</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>10</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>分析</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>该题可采用动态规划算法来进行求解。首先将题目进行整理，按照题目难度排序后整理出不同难度的题目的个数，最后利用列表格动态规划求解出最终结果。或者利用递归和数学计算的方式求解，但是这种方式对于计算机计算需要大量的空间，解法不是最优。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>流程图</strong></h2>
<!-- /wp:heading -->

<!-- wp:image {"align":"center"} -->
<figure class="wp-block-image aligncenter"><img src="https://img-blog.csdnimg.cn/20210520201132837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhbmRhbGxDaHU=,size_16,color_FFFFFF,t_70" alt="" /><figcaption>流程图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><strong>伪代码</strong></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>枚举i=1~count{
		枚举j=0~i{
			如果j=0成立{
				sheet&#091;i]&#091;j]=number&#091;i]&#091;1]+sheet&#091;i-1]&#091;j];
			}
			如果i==j成立{
				sheet&#091;i]&#091;j]=(number&#091;i]&#091;1]*sheet&#091;i-1]&#091;j-1]) %998244353;
			}
			否则{
				sheet&#091;i]&#091;j]=(sheet&#091;i-1]&#091;j]+sheet&#091;i-1]&#091;j-1]*number&#091;i]&#091;1]) %998244353;
			}
		}
	}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2><strong>代码（C++）</strong></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;iostream&gt;
#include &lt;algorithm&gt;

using namespace std;

long long number&#091;1000]&#091;2];

int main(){
	long long n,k;
	cin &gt;&gt; n;
	cin &gt;&gt; k;
	long long data&#091;n];
	for(long long i=0;i&lt;n;i++){
		cin &gt;&gt; data&#091;i];
	}
	sort(data, data+n);
	number&#091;0]&#091;0]=data&#091;0];
	number&#091;0]&#091;1]=1;
	long long  count=1;
	for(long long i=1;i&lt;n;i++){
		if(data&#091;i]==data&#091;i-1]){
			number&#091;count-1]&#091;1]++;
		}
		else{
			number&#091;count]&#091;0]=data&#091;i];
			number&#091;count]&#091;1]=1;
			count++;
		}
	}
	
	for(long long i=0;i&lt;count;i++){
		cout &lt;&lt; number&#091;i]&#091;0] &lt;&lt; " " &lt;&lt;  number&#091;i]&#091;1] &lt;&lt;endl;
	}
	
	if(count&lt;k){
		cout &lt;&lt; "0";
		return 0;		
	}
	
	long long sheet&#091;count]&#091;k];
	sheet&#091;0]&#091;0]=number&#091;0]&#091;1];
	
	for(long long i=1;i&lt;count;i++){
		for(long long j=0;j&lt;k;j++){
			if(j==0){
				sheet&#091;i]&#091;j]=number&#091;i]&#091;1]+sheet&#091;i-1]&#091;j];
			}
			else if(i==j){
				sheet&#091;i]&#091;j]=(number&#091;i]&#091;1]*sheet&#091;i-1]&#091;j-1])%998244353;
			}
			else{
				sheet&#091;i]&#091;j]=(sheet&#091;i-1]&#091;j]+sheet&#091;i-1]&#091;j-1]*number&#091;i]&#091;1])%998244353;
			}
		}
	}
	
	long long suma=sheet&#091;count-1]&#091;k-1];
	
//	long long sum=jc(count)/(jc(k)*jc(count-k));
//
//	for(long long i=0;i&lt;count;i++){
//		sum=sum*(long long)number&#091;i]&#091;1];
//	}
//	cout &lt;&lt; sum &lt;&lt; endl;
	
	suma=suma%998244353; 
	cout &lt;&lt; suma;
}

</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2><strong>总结</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本算法对规定范围下不同的输入数据能够得出满足要求的结构，对于精心选择的典型、苛刻而带有刁难性的输入数据能够得出满足要求的结果，对于一切合法的输入数据都产生满足要求的结果。本算法要求考虑到边界条件当不同难度的算法题目数量小于要求。本算法的边界条件就是不同难度的题目数量可能会小于所需求的k，本程序以及提前判断出相关大小情况。<br>核心代码问题：求解sheet表中第一列就是上一行的数值加上number[i][1]的值；求解sheet表中左上到右下的对角线上的格子的值sheet[i][j]就是number[i][1]乘上sheet[i-1][j-1]；求解其他的格子中的值就是sheet[i-1][j]加上sheet[i-1][j-1]乘以number[i][1]（n类里面挑选k个的个数等同于n-1类里挑选k个的个数或者n-1类里挑选k-1个，再在第n类挑选一个）。</p>
<!-- /wp:paragraph -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>&nbsp;</td><td>1</td><td>2</td><td>…</td><td>k-1</td><td>k</td><td>…</td></tr><tr><td>1</td><td>number[1][1]</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>2</td><td>sheet[1][1]+number[1][1]</td><td>sheet[1][1]*number[2][1]</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;&nbsp;</td><td>&nbsp;</td></tr><tr><td>…</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;&nbsp;</td><td>&nbsp;</td></tr><tr><td>n-1</td><td>sheet[n-1][1]</td><td>sheet[n-1][2]</td><td></td><td>sheet[n-1][k-1]</td><td>sheet[n-1][k]</td><td>&nbsp;</td></tr><tr><td>n</td><td>sheet[n-1][1]+number[n][1]</td><td>sheet[n-1][2]+sheet[n-1][1]* number[n][1]</td><td>&nbsp;</td><td>sheet[n-1][k-1]+ sheet[n-1][k-2]* number[n][1]</td><td>sheet[n-1][k]+ sheet[n-1][k-1]* number[n][1]</td><td>&nbsp;&nbsp;&nbsp;</td></tr><tr><td>…</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table></figure>
<!-- /wp:table --></div>
<!-- /wp:group -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date><![CDATA[2021-05-20 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-19 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-20 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-19 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[finaltest]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e7%ae%97%e6%b3%95%e5%88%86%e6%9e%90%e4%b8%8e%e8%ae%be%e8%ae%a1%e5%a4%a7%e4%bd%9c%e4%b8%9a-%e6%9c%9f%e6%9c%ab%e6%b5%8b%e8%af%95]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-05]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[137]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[算法分析与设计大作业——截止日期]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/20/deadline/</link>
		<pubDate>Wed, 19 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2><strong>问题描述：</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>某学科老师布置了n个题目，每个题目都有相应的分数及截止日期。各个题目的分数及截止日期可能并不相同。对某题目而言，如果在该题目的截止日期前完成则可获得对应的分数，否则无法得分。假设每个题目均需要花费一天的时间来完成，这期间无法完成其他题目。请你设计算法指定题目的完成计划，从而使总的得分最大。 下面给出一个包含了7个题目及相应的分数、截止日期的实例：<br></p>
<!-- /wp:paragraph -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th class="has-text-align-center" data-align="center">题目</th><th class="has-text-align-center" data-align="center">1</th><th class="has-text-align-center" data-align="center">2</th><th class="has-text-align-center" data-align="center">3</th><th class="has-text-align-center" data-align="center">4</th><th class="has-text-align-center" data-align="center">5</th><th class="has-text-align-center" data-align="center">6</th><th class="has-text-align-center" data-align="center">7</th></tr></thead><tbody><tr><td class="has-text-align-center" data-align="center">分数</td><td class="has-text-align-center" data-align="center">6</td><td class="has-text-align-center" data-align="center">7</td><td class="has-text-align-center" data-align="center">2</td><td class="has-text-align-center" data-align="center">1</td><td class="has-text-align-center" data-align="center">4</td><td class="has-text-align-center" data-align="center">5</td><td class="has-text-align-center" data-align="center">1</td></tr><tr><td class="has-text-align-center" data-align="center">截止日期（天）</td><td class="has-text-align-center" data-align="center">1</td><td class="has-text-align-center" data-align="center">1</td><td class="has-text-align-center" data-align="center">3</td><td class="has-text-align-center" data-align="center">3</td><td class="has-text-align-center" data-align="center">2</td><td class="has-text-align-center" data-align="center">2</td><td class="has-text-align-center" data-align="center">4</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:paragraph -->
<p>对该实例而言，得分最大的作业完成方案为花费4天时间依次完成题目2,6,3,7。得分为15。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>【输入形式】<br>输入数据第一行为一个整数n (0 &lt;= n &lt;= 10000), 表示题目数目 之后n行各有两个整数, 第i行为 pi, di (1 &lt;= pi, di &lt;= 10000)，分别表示第i个题目的分数和截止时间<br>【输出形式】<br>一个整数, 为当前条件下的最大得分<br>【样例输入】<br>4<br>50 2<br>10 1<br>20 2<br>30 1<br>【样例输出】<br>80</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>分析</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本题适合用贪心算法来求解，先按照任务价值从大到小排序，然后依次取出后对任务进行判断。如果取出任务截至当天未被占用，则将该任务价值加入总价值后将当天标记为占用。如果之前判断的时间被占用，则往前推算一天后再进行判断。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>伪代码</strong></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>对于i = 0 ~ n{
		如果任务i截止日期当天没有被占用{
			结果加上第i个任务的分数
			任务i截止日期当天标记为已被占用;
		}
		如果任务截止日期当天被占用{
			对于j = 任务i截止日期-1 ~ 0){
				如果第j天被占用{
					结果加上第i个任务的分数
					第j天标记为已被占用
					跳出循环
				}
			}
		}

</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2><strong>代码（JAVA1）</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>deadline类：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public class deadline {
	int score;
	int day;
	public deadline(int score,int day) {
		this.score = score;
		this.day = day;
	}
	public int getScore() {
		return score;
	}
}

</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>test类：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class test{
	public static void Sort(deadline&#091;] overdays) {
		Arrays.sort(overdays, new Comparator&lt;deadline&gt;() {
			   public int compare(deadline o1, deadline o2) {
			    return (int) (o2.getScore() - o1.score);
			   }
			  });
	}
	public static void main(String args&#091;]) {
		int n,a,b,number=0,count=0;
		Scanner input = new Scanner(System.in);
		n=input.nextInt();
		if(n==0){
			System.out.println("0");

		}
		deadline&#091;] overdays = new deadline&#091;n];
		for (int i=0;i&lt;n;i++){
			overdays&#091;i]=new deadline(input.nextInt(),input.nextInt());
		}
		input.close();
		Sort(overdays);
		int max=overdays&#091;0].day;
		for (int i=1;i&lt;n;i++){	
			if(max&lt;overdays&#091;i].day)
				max=overdays&#091;i].day;
		}
		int&#091;] days = new int&#091;max+1];
		for (int i=0;i &lt;= max;i++)
			days&#091;i]=1;
		for (int i=0;i&lt;n;i++){
			if(days&#091;overdays&#091;i].day]==1){
				number+=overdays&#091;i].score;
				days&#091;overdays&#091;i].day]=0;
			}
			else{
				for(int j=overdays&#091;i].day-1;j&gt;0;j--){
					if(days&#091;j]==1)
					{
						number+=overdays&#091;i].score;
						days&#091;j]=0;
						break;
					}
				}
			}
		}
		System.out.println(number);
	}
}

</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>代码（JAVA2）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import java.util.Scanner;

public class deadline {
	public static int maxinarr(int&#091;] a,int len) {
		int max = a&#091;0];
		for(int i=0;i&lt;len;i++){
			if(max&lt;a&#091;i])
				max = a&#091;i];
		}
		return max;
	}
	public static void swaparr(int a&#091;], int b&#091;], int len) {
		int k;
		for(int i=0;i&lt;len;i++){
			for(int j=0;j&lt;len-1;j++){
				if(a&#091;j]&lt;a&#091;j+1]){
					k=a&#091;j];
					a&#091;j]=a&#091;j+1];
					a&#091;j+1]=k;
					k=b&#091;j];
					b&#091;j]=b&#091;j+1];
					b&#091;j+1]=k;
				}
			}
		}
	}
	public static boolean judge(int day&#091;], int data&#091;], int n) {
		boolean ret = false;
		for(int i=data&#091;n]-1;i&gt;=0;i--){
			if(day&#091;i]==0){
				day&#091;i]=1;
				ret = true;
				break;
			}
		}
		return ret;
	}
	public static void main(String&#091;] args) {
		int n;
		Scanner input = new Scanner(System.in);
		n = input.nextInt();
		int&#091;] score = new int&#091;n];//成绩 
		int&#091;] data = new int&#091;n];//截止日期 
		for(int i=0;i&lt;n;i++){
			score&#091;i] = input.nextInt();
			data&#091;i] = input.nextInt();
		}
		input.close();
		swaparr(score, data, n);
		int a=maxinarr(data,n); 
		int allscore=0;
		int&#091;] day = new int&#091;a];//每天任务情况
		for(int i=0;i&lt;a;i++){
			day&#091;i]=0;
		}
		
		for(int i=0;i&lt;n;i++){
			if(judge(day,data,i)){
				allscore += score&#091;i];
				a--;
				if(a==-1)
					break;
			}
		}
		System.out.println(allscore);
	}
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>代码（C++1）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;iostream&gt; 
using namespace std;

//定义结构体用来存放题目分数及截止日期
struct sdata{
	int score;
	int deadline;
};

//用来给结构体内数据按照成绩排序 
void arrSort(sdata* pData, int length){
	sdata temp;
	for (int i = 0; i &lt; length; i++){
		for (int j = 0; j &lt; length-1; j++){
			if (pData&#091;j].score &lt; pData&#091;j+1].score){
	   			temp = pData&#091;j];
	   			pData&#091;j] = pData&#091;j+1];
	   			pData&#091;j+1] = temp;
	  		}
	 	}
	}
}
 
int main(){
	int n,a,b;
	int answer = 0;
	int x = 0;
	
	cin &gt;&gt; n;
	//输入值n总天数如果为0则不需要计算 
	if(n==0){
		cout &lt;&lt; "0";
		return 0;
	}
	sdata *Data = new sdata&#091;n];
	for (int i = 0; i &lt; n; i++){
		cin &gt;&gt; a;
		cin &gt;&gt; b;
		//如果题目分数或者截止日期存在0，则该条数据无效 
		if(a*b==0){
			x++;
			continue;
		}
		Data&#091;i].score=a; Data&#091;i].deadline=b;
	}
	n -= x;
	
	//排序 
	arrSort(Data, n);
	//寻需要最大时间的任务的天数max 
	int max=Data&#091;0].deadline;
	for (int i = 1; i &lt; n; i++){
		if(max&lt;Data&#091;i].deadline)
			max=Data&#091;i].deadline;
	}
	
	//根据max定义并且初始化时间表 
	int schedule&#091;max+1]; 
	for (int i = 0; i &lt;= max; i++)
		schedule&#091;i]=1;
	
	//计算过程（根据分数从大到小遍历每个任务） 
	for (int i = 0; i &lt; n; i++){
		//如果任务截止日期当天没有被占用 
		if(schedule&#091;Data&#091;i].deadline]==1){
			answer += Data&#091;i].score;
			schedule&#091;Data&#091;i].deadline]=0;
		}
		//如果任务截止日期当天被占用
		else{
			for(int j=Data&#091;i].deadline-1;j&gt;0;j--){
				if(schedule&#091;j]==1){
					answer+=Data&#091;i].score;
					schedule&#091;j]=0;
					break;
				}
			}
		}

	}
	cout &lt;&lt; answer;
	return 0;
}

</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>代码（C++2）</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;iostream&gt;

using namespace std;

//将两个数组按照前面数组的降序排列(数组a，数组b，数组长度len)
void swaparr(int a&#091;], int b&#091;], int len){
	for(int i=0;i&lt;len;i++){
		for(int j=0;j&lt;len-1;j++){
			if(a&#091;j]&lt;a&#091;j+1]){
				swap(a&#091;j],a&#091;j+1]);
				swap(b&#091;j],b&#091;j+1]);
			}
		}
	}
}

//寻找数组中数字最大值(数组a，数组a长度len) 
int maxinarr(int a&#091;],int len){
	int max = a&#091;0];
	for(int i=0;i&lt;len;i++){
		if(max&lt;a&#091;i])
			max = a&#091;i];
	}
	return max;
} 

bool judge(int day&#091;], int data&#091;], int n){
	bool ret=0;
	for(int i=data&#091;n]-1;i&gt;=0;i--){
		if(day&#091;i]==0){
			day&#091;i]=1;
			ret = 1;
			break;
		}
	}
	return ret;
}

int main(){
	int n;
	cin &gt;&gt; n;
	int score&#091;n];//成绩 
	int data&#091;n];//截止日期 
	for(int i=0;i&lt;n;i++){
		cin &gt;&gt; score&#091;i];
		cin &gt;&gt; data&#091;i];
	}
	swaparr(score, data, n);
	int a=maxinarr(data,n); 
	int allscore=0;
	int day&#091;a];//每天任务情况
	for(int i=0;i&lt;a;i++){
		day&#091;i]=0;
	}
	
	for(int i=0;i&lt;n;i++){
		if(judge(day,data,i)){
			allscore += score&#091;i];
			a--;
			if(a==-1)
				break;
		}
	}
	cout &lt;&lt; allscore;
	return 0; 
}

</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2><strong>算法正确性分析</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本算法对规定范围下不同的输入数据能够得出满足要求的结构，对于精心选择的典型、苛刻而带有刁难性的输入数据能够得出满足要求的结果，对于一切合法的输入数据都产生满足要求的结果。<br>对于核心算法，先按照任务价值从大到小排序，然后依次取出后对任务进行判断。如果取出任务截至当天未被占用，则将该任务价值加入总价值后将当天标记为占用。如果取出任务截止当天被占用，则往前推算一天进行判断。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>总结</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本题采用贪心算法，通过这次学习，我了解到贪心算法需要建立数学模型来描述问题；把求解的问题分成若干个子问题；对每一子问题求解，得到子问题的局部最优解；把子问题的解局部最优解合成原来解问题的一个解。解决问题需要从问题的某个初始解出发，采用循环语句，当可以向求解目标前进一步时，就根据局部最优策略，得到一个部分解，缩小问题的范围或规模，最后将所有部分解综合起来，得到问题的最终解。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date><![CDATA[2021-05-20 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-19 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-20 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-19 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[deadline]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e7%ae%97%e6%b3%95%e5%88%86%e6%9e%90%e4%b8%8e%e8%ae%be%e8%ae%a1%e5%a4%a7%e4%bd%9c%e4%b8%9a-%e6%88%aa%e6%ad%a2%e6%97%a5%e6%9c%9f]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-05]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[229]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[稳定匹配StableMaching]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/25/stablemaching/</link>
		<pubDate>Mon, 24 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2 id="稳定匹配StableMaching">代码：</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;queue&gt;
#include &lt;iostream&gt;
#define MAX 10      //医院学生最多为MAX个 

using namespace std;

int main(){
    int hospital_num, student_num;    //医院学生的个数，需要输入 
    int HospitalPref&#091;MAX]&#091;MAX], StudentPref&#091;MAX]&#091;MAX];     //喜欢序列，需要输入（用数字表示医院学生） 
    int HospitalInverse&#091;MAX]&#091;MAX], StudentInverse&#091;MAX]&#091;MAX]; 
    int confernstudent&#091;MAX], confernhospital&#091;MAX];    //表示各个配对 
    int count&#091;MAX];    // count&#091;m]表示m提出配对的次数 
    queue&lt;int&gt; FreeHospitals;   // 表示未被配对的医院 
    cout &lt;&lt; "请输入医院或学生的总数：" &lt;&lt; endl;
    cin &gt;&gt; hospital_num;
    student_num = hospital_num;
    for (int i = 0; i &lt; hospital_num; i++){
        cout &lt;&lt; "请输入第" &lt;&lt; i+1 &lt;&lt; "个医院的喜好排序" &lt;&lt; endl;
        FreeHospitals.push(i);
        for (int j = 0; j &lt; student_num; j++){
            cin &gt;&gt; HospitalPref&#091;i]&#091;j];
            HospitalPref&#091;i]&#091;j]--;
        }
    }
    for (int i = 0; i &lt; student_num; i++){
        cout &lt;&lt; "请输入第" &lt;&lt; i+1 &lt;&lt; "个学生的喜好排序" &lt;&lt; endl;
        for (int j = 0; j &lt; hospital_num; j++){
            cin &gt;&gt; StudentPref&#091;i]&#091;j];
            StudentPref&#091;i]&#091;j]--;
        }
    }
    for (int i = 0; i &lt; hospital_num; i++){
        for (int j = 0; j &lt; student_num; j++){
            HospitalInverse&#091;i]&#091;HospitalPref&#091;i]&#091;j]] = j;
        }
    }
    for (int i = 0; i &lt; student_num; i++){
        for (int j = 0; j &lt; hospital_num; j++){
            StudentInverse&#091;i]&#091;StudentPref&#091;i]&#091;j]] = j;
        }
    }
    
    //初始化每个医院和学生的状态，并将每个医院提出配对的次数赋值成0 
    for (int i = 0; i &lt; hospital_num; i++){
        confernstudent&#091;i] = -1;
        confernhospital&#091;i] = -1;
        count&#091;i] = 0;
    }
    
    // 当FreeHospitals的队列为空时结束循环 
    while(FreeHospitals.size() != 0){
        // 取出队列中的第一个医院，hospital代表该医院的序号 
        int hospital = FreeHospitals.front();
        // 医院按照自己的喜欢序列降序对学生提出配对直到医院被配对 
        for (int i = count&#091;hospital]; i &lt; student_num; count&#091;hospital]++, i++){
            // 如果这个学生未被配对 
            if (confernstudent&#091;HospitalPref&#091;hospital]&#091;i]] == -1){
                confernstudent&#091;HospitalPref&#091;hospital]&#091;i]] = hospital;
                confernhospital&#091;hospital] = HospitalPref&#091;hospital]&#091;i];   //将医院学生配对 
                FreeHospitals.pop();   // 将该医院从队列删除 
                break;
            }

            // 如果学生较之已配对医院更喜欢这个医院 
            else if (StudentInverse&#091;hospital] &lt; StudentInverse&#091;confernstudent&#091;HospitalPref&#091;hospital]&#091;i]]]){
                FreeHospitals.push(confernstudent&#091;HospitalPref&#091;hospital]&#091;i]]); //将原配对医院加入未配对医院队列 
                confernhospital&#091;confernstudent&#091;HospitalPref&#091;hospital]&#091;i]]] = -1; //将医院的状态设置成未配对
//（也可以不用设置） 
                confernstudent&#091;HospitalPref&#091;hospital]&#091;i]] = hospital;
                confernhospital&#091;hospital] = HospitalPref&#091;hospital]&#091;i];       //重新配对 
                FreeHospitals.pop();  // 将该医院从队列删除  
                break;
            }

            // 否则学生拒绝医院的配对 
            else {
            }
        }
    }
    
    for (int i = 0; i &lt; hospital_num; i++){
        cout &lt;&lt; "医院" &lt;&lt; i+1 &lt;&lt; "-----学生" &lt;&lt; confernhospital&#091;i]+1 &lt;&lt; endl;
    }
}


</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结：</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>       稳定匹配算法的实现我采用的是c++语言。在程序中，将医院与学生的喜好和医院与学生实际的匹配结果分别建立了四个二维数组；定义了配对次数和一个表示未配对医院的线性表。<br>程序首先读取医院（学生）的总数，再依次读取每个医院和学生的喜好排序，然后初始化每个医院和学生的状态，并将每个医院提出配对的次数赋值成0。进入循环依次取出队列中的第一个医院， 医院按照自己的喜欢序列降序对学生提出配对直到医院被配对，如果这个学生未被配对，将医院学生配对，将该医院从队列删除，如果学生较之已配对医院更喜欢这个医院，则将原配对医院加入未配对医院队列且医院的状态设置成未配对。待FreeHospitals的队列为空时结束循环后输出匹配结果。<br>程序使用了线性表queue，相比于数组而言大大缩短了运行所需时间。然而，在这样的场景中G-S匹配并不是公平的，由于每次迭代按照M中递减偏好尝试匹配，它是一种偏向于M节点的算法。算法产出的稳态匹配结果，所有的学校都匹配了尽可能好好的结果，而所有学生都匹配了尽可能不好的结果。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date><![CDATA[2021-05-25 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-25 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stablemaching]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e7%a8%b3%e5%ae%9a%e5%8c%b9%e9%85%8dstablemaching]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-11]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[快速排序QuickSort]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/25/quicksort/</link>
		<pubDate>Mon, 24 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=83</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>代码：</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h&gt;
#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
 
//快速排序算法(从小到大)
//arr:需要排序的数组，begin:需要排序的区间左边界，end:需要排序的区间的右边界
void QuickSort(int *arr,int begin,int end)
{
	//如果区间不只一个数
	if(begin &lt; end){
		int temp = arr&#091;begin]; //将区间的第一个数作为基准数
		int i = begin; //从左到右进行查找时的“指针”，指示当前左位置
		int j = end; //从右到左进行查找时的“指针”，指示当前右位置
		//不重复遍历
		while(i &lt; j){
			//当右边的数大于基准数时，略过，继续向左查找
			//不满足条件时跳出循环，此时的j对应的元素是小于基准元素的
			while(i&lt;j &amp;&amp; arr&#091;j] &gt; temp)
				j--;
			//将右边小于等于基准元素的数填入右边相应位置
			arr&#091;i] = arr&#091;j];
			//当左边的数小于等于基准数时，略过，继续向右查找
			//(重复的基准元素集合到左区间)
			//不满足条件时跳出循环，此时的i对应的元素是大于等于基准元素的
			while(i&lt;j &amp;&amp; arr&#091;i] &lt;= temp)
				i++;
			//将左边大于基准元素的数填入左边相应位置
			arr&#091;j] = arr&#091;i];
		}
		//将基准元素填入相应位置
		arr&#091;i] = temp;
		//此时的i即为基准元素的位置
		//对基准元素的左边子区间进行相似的快速排序
		QuickSort(arr,begin,i-1);
		//对基准元素的右边子区间进行相似的快速排序
		QuickSort(arr,i+1,end);
	}
	//如果区间只有一个数，则返回
	else
		return;
}

int main()
{
	//定义容器num存入原始数据 
	vector&lt;int&gt; num;//定义一个vector数组array
	int number;
	while (1) {
		cin &gt;&gt; number;
		num.push_back(number);//每输入一个数字就把它添加到数组的最后
		if (cin.get() == '\n')//如果是回车符则跳出循环
			break;
	}
	int n = num.size();//返回数组长度为len
	//将容器转换为int数组buffer 
	int *buffer = new int&#091;num.size()];
    if (!num.empty()){
        memcpy(buffer, &amp;num&#091;0], num.size()*sizeof(int));
    }
	//将数组参与排序 
	QuickSort(buffer,0,n-1);
	cout &lt;&lt; "排序后的数组为：" &lt;&lt; endl;
	//输出数组 
	for(int i=0;i&lt;n;i++)
		cout &lt;&lt; buffer&#091;i] &lt;&lt; ' ';
	cout &lt;&lt; endl;
	return 0;
}


</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结：</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>读取数组定义了一个vactor容器num，将数值存入容器后再将容器转换为普通数组buffer。函数排序定义了一个快速排序函数QuickSort，需要主函数的数组buffer，数组需要参与排序的第一个数字的下标，数组需要参与排序的最后一个数字的下标。在QuickSort函数中如果区间中不止一个数字，将区间的一个数作为基准数，定义从左到右进行查找时的“指针”i，指示当前左位置，定义从右到左进行查找时的“指针”j，指示当前右位置。当右边的数大于基准数时，略过，继续向左查找，不满足条件时跳出循环，此时的j对应的元素是小于基准元素的。在循环中将右边小于等于基准元素的数填入右边相应位置，当左边的数小于等于基准数时，略过，继续向右查找(重复的基准元素集合到左区间)不满足条件时跳出循环，此时的i对应的元素是大于等于基准元素的。将左边大于基准元素的数填入左边相应位置。然后将基准元素填入相应位置。最后，对基准元素的左边和右边子区间进行相似的快速排序。
</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date><![CDATA[2021-05-25 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-25 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[quicksort]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%bf%ab%e9%80%9f%e6%8e%92%e5%ba%8fquicksort]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-11]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[区间调度IntervalScheduling]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/25/intervalscheduling/</link>
		<pubDate>Mon, 24 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=87</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>代码：</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;vector&gt;
using namespace std;
int _count&#091;100]&#091;100]; //构造最优矩阵
int p&#091;100]&#091;100];
int numbers&#091;100];
void dp(int start&#091;], int finish&#091;],int TASK_COUNT) {
    for (int len = 2; len &lt;= TASK_COUNT + 2; len++) {
        for (int begin = 0; begin &lt;= TASK_COUNT + 1; begin++) {
            int end = begin + len - 1;
            int max = 0;
            int slice = 0;
            int k;
            for (k = begin + 1; k &lt;= end - 1; k++) {
                if (start&#091;k] &gt;= finish&#091;begin]&amp;&amp;finish&#091;k]&lt;=start&#091;end]) {
                    int temp = _count&#091;begin]&#091;k] + _count&#091;k]&#091;end] + 1;
                    if (temp &gt; max) {
                        max = temp;
                        slice = k;
                    }
                }
            }
            p&#091;begin]&#091;end] = slice;
            _count&#091;begin]&#091;end] = max;
        }
    }
}
void printDp( int begin, int end) {
    int pos = p&#091;begin]&#091;end];
    if (pos == 0)
        return;
    cout &lt;&lt; numbers&#091;pos] &lt;&lt; " ";
    printDp(begin, pos);
    printDp(pos, end);
}
int main() {
	vector&lt;int&gt; vfinish;
	vector&lt;int&gt; vstart;
	//插入数组前置数值-1 
	vstart.push_back(-1);
	vfinish.push_back(-1);
	int number;
	cout &lt;&lt; "请分别输入各个事件的开始跟结束时间：" &lt;&lt; endl;
	while (1){
		cin &gt;&gt; number;
		vstart.push_back(number);
		cin &gt;&gt; number;
		vfinish.push_back(number);
		if (cin.get() == '\n')
			break;
	}
	//插入数组后置数值255 
	vstart.push_back(255);
	vfinish.push_back(255);
	int *start = new int&#091;vstart.size()];
    if (!vstart.empty())
        memcpy(start, &amp;vstart&#091;0], vstart.size()*sizeof(int));
	int *finish = new int&#091;vfinish.size()];
    if (!vfinish.empty())
        memcpy(finish, &amp;vfinish&#091;0], vfinish.size()*sizeof(int));
	int TASK_COUNT = vstart.size()-2;
	for(int i=0;i&lt;vstart.size();i++)
		numbers&#091;i]=i;
	cout &lt;&lt; "图例如下：" &lt;&lt; endl; //输出图示
    for (int i = 0; i &lt;= TASK_COUNT; i++) {
        cout &lt;&lt; i &lt;&lt; ":";
        for (int j = 0; j &lt; start&#091;i]; j++) {
            cout &lt;&lt; "  ";
        }
        for (int j = start&#091;i]; j &lt; finish&#091;i]; j++) 
            cout &lt;&lt; "■";
        cout &lt;&lt; endl;
    }
    for(int i=0;i&lt;TASK_COUNT+2;i++){//按照结束时间排序
		for(int j=0;j&lt;TASK_COUNT+1;j++){
			if(finish&#091;j]&gt;finish&#091;j+1]){
				std::swap(finish&#091;j],finish&#091;j+1]);
				std::swap(start&#091;j],start&#091;j+1]);
				std::swap(numbers&#091;j],numbers&#091;j+1]);
			}
		}
	}
    for (int i = 0; i &lt;= TASK_COUNT + 2; i++) {
        for (int j = 0; j &lt;= TASK_COUNT + 2; j++) {
            _count&#091;i]&#091;j] = 0;
            p&#091;i]&#091;j] = 0;
        }
    }
    dp(start, finish, TASK_COUNT);
    cout &lt;&lt; "总共可完成的事件个数为：" &lt;&lt; _count&#091;0]&#091;TASK_COUNT + 1] &lt;&lt; endl;
    cout &lt;&lt; "完成的事件为：";
    printDp(0, TASK_COUNT + 1);
    return 0;
}


</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结：</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>区间调度的实验采用了结束时间先后为顺序排序。按照排序依次比较看事件是否匹配，如果匹配则加入。贪心算法，优先选择最早结束的需求，确保资源尽可能早地被释放，把留下来满足其他需求的时间最大化。具体伪代码如下所示，算法结束后集合A中会保留所有相容请求，A的大小即是最大相容数量。Aijj为Sij最优解，另其中的任务按照结束时间递增排序,令ak是Aij的第一个结束的任务,如果ak=am,则证明成立。否则我们将ak用am替换，则它成为了另一个解A’ij，同样是最优解。所以即将任务以结束时间递增排序，第一个结束的任务一定在最优解中，依次找出子问题中最先结束，且开始时间在前一个解最后一个任务结束之间之后。复杂度为O(n)。同时很容易得出有递归和递推两种形式，一般采用递推。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date><![CDATA[2021-05-25 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-25 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[intervalscheduling]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%8c%ba%e9%97%b4%e8%b0%83%e5%ba%a6interval-scheduling]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-11]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[霍夫曼编码Huffman]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/25/huffman/</link>
		<pubDate>Mon, 24 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>代码：</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;limits.h&gt;
// 统计字符频度的临时结点
typedef struct {
	unsigned char uch;			// 以8bits为单元的无符号字符
	unsigned long weight;		// 每类（以二进制编码区分）字符出现频度
} TmpNode;
// 哈夫曼树结点
typedef struct {
	unsigned char uch;				// 以8bits为单元的无符号字符
	unsigned long weight;			// 每类（以二进制编码区分）字符出现频度
	char *code;						// 字符对应的哈夫曼编码（动态分配存储空间）
	int parent, lchild, rchild;		// 定义双亲和左右孩子
} HufNode, *HufTree;
// 选择最小和次小的两个结点，建立哈夫曼树调用
void select(HufNode *huf_tree, unsigned int n, int *s1, int *s2)
{
	// 找最小
	unsigned int i;
	unsigned long min = ULONG_MAX;
	for(i = 0; i &lt; n; ++i)           
		if(huf_tree&#091;i].parent == 0 &amp;&amp; huf_tree&#091;i].weight &lt; min)
		{
			min = huf_tree&#091;i].weight;
			*s1 = i;
		}
		huf_tree&#091;*s1].parent=1;   // 标记此结点已被选中
	// 找次小
	min=ULONG_MAX;
	for(i = 0; i &lt; n; ++i)            
		if(huf_tree&#091;i].parent == 0 &amp;&amp; huf_tree&#091;i].weight &lt; min)
		{
			min = huf_tree&#091;i].weight;
			*s2 = i;
		}
} 
// 建立哈夫曼树
void CreateTree(HufNode *huf_tree, unsigned int char_kinds, unsigned int node_num)
{
	unsigned int i;
	int s1, s2;
	for(i = char_kinds; i &lt; node_num; ++i)  
	{ 
		select(huf_tree, i, &amp;s1, &amp;s2);		// 选择最小的两个结点
		huf_tree&#091;s1].parent = huf_tree&#091;s2].parent = i; 
		huf_tree&#091;i].lchild = s1; 
		huf_tree&#091;i].rchild = s2; 
		huf_tree&#091;i].weight = huf_tree&#091;s1].weight + huf_tree&#091;s2].weight; 
	} 
}
// 生成哈夫曼编码
void HufCode(HufNode *huf_tree, unsigned char_kinds)
{
	unsigned int i;
	int cur, next, index;
	char *code_tmp = (char *)malloc(256*sizeof(char));		// 暂存编码，最多256个叶子，编码长度不超多255
	code_tmp&#091;256-1] = '\0'; 
	for(i = 0; i &lt; char_kinds; ++i) 
	{
		index = 256-1;	// 编码临时空间索引初始化
		// 从叶子向根反向遍历求编码
		for(cur = i, next = huf_tree&#091;i].parent; next != 0; 
			cur = next, next = huf_tree&#091;next].parent)  
			if(huf_tree&#091;next].lchild == cur) 
				code_tmp&#091;--index] = '0';	// 左'0'
			else 
				code_tmp&#091;--index] = '1';	// 右'1'
		huf_tree&#091;i].code = (char *)malloc((256-index)*sizeof(char));			// 为第i个字符编码动态分配存储空间 
		strcpy(huf_tree&#091;i].code, &amp;code_tmp&#091;index]);     // 正向保存编码到树结点相应域中
	} 
	free(code_tmp);		// 释放编码临时空间
}
// 压缩函数
int compress(char *ifname, char *ofname)
{
	unsigned int i, j;
	unsigned int char_kinds;		// 字符种类
	unsigned char char_temp;		// 暂存8bits字符
	unsigned long file_len = 0;
	FILE *infile, *outfile;
	TmpNode node_temp;
	unsigned int node_num;
	HufTree huf_tree;
	char code_buf&#091;256] = "\0";		// 待存编码缓冲区
	unsigned int code_len;
	/*
	** 动态分配256个结点，暂存字符频度，
	** 统计并拷贝到树结点后立即释放
	*/
	TmpNode *tmp_nodes =(TmpNode *)malloc(256*sizeof(TmpNode));		
	// 初始化暂存结点
	for(i = 0; i &lt; 256; ++i)
	{
		tmp_nodes&#091;i].weight = 0;
		tmp_nodes&#091;i].uch = (unsigned char)i;		// 数组的256个下标与256种字符对应
	}
	// 遍历文件，获取字符频度
	infile = fopen(ifname, "rb");
	// 判断输入文件是否存在
	if (infile == NULL)
		return -1;
	fread((char *)&amp;char_temp, sizeof(unsigned char), 1, infile);		// 读入一个字符
	while(!feof(infile))
	{
		++tmp_nodes&#091;char_temp].weight;		// 统计下标对应字符的权重，利用数组的随机访问快速统计字符频度
		++file_len;
		fread((char *)&amp;char_temp, sizeof(unsigned char), 1, infile);		// 读入一个字符
	}
	fclose(infile);
	// 排序，将频度为零的放最后，剔除
	for(i = 0; i &lt; 256-1; ++i)           
		for(j = i+1; j &lt; 256; ++j)
			if(tmp_nodes&#091;i].weight &lt; tmp_nodes&#091;j].weight)
			{
				node_temp = tmp_nodes&#091;i];
				tmp_nodes&#091;i] = tmp_nodes&#091;j];
				tmp_nodes&#091;j] = node_temp;
			}
	// 统计实际的字符种类（出现次数不为0）
	for(i = 0; i &lt; 256; ++i)
		if(tmp_nodes&#091;i].weight == 0) 
			break;
	char_kinds = i;
	if (char_kinds == 1)
	{
		outfile = fopen(ofname, "wb");					// 打开压缩后将生成的文件
		fwrite((char *)&amp;char_kinds, sizeof(unsigned int), 1, outfile);		// 写入字符种类
		fwrite((char *)&amp;tmp_nodes&#091;0].uch, sizeof(unsigned char), 1, outfile);		// 写入唯一的字符
		fwrite((char *)&amp;tmp_nodes&#091;0].weight, sizeof(unsigned long), 1, outfile);		// 写入字符频度，也就是文件长度
		free(tmp_nodes);
		fclose(outfile);
	}
	else
	{
		node_num = 2 * char_kinds - 1;		// 根据字符种类数，计算建立哈夫曼树所需结点数 
		huf_tree = (HufNode *)malloc(node_num*sizeof(HufNode));		// 动态建立哈夫曼树所需结点     
		// 初始化前char_kinds个结点
		for(i = 0; i &lt; char_kinds; ++i) 
		{ 
			// 将暂存结点的字符和频度拷贝到树结点
			huf_tree&#091;i].uch = tmp_nodes&#091;i].uch; 
			huf_tree&#091;i].weight = tmp_nodes&#091;i].weight;
			huf_tree&#091;i].parent = 0; 
		}	
		free(tmp_nodes); // 释放字符频度统计的暂存区
		// 初始化后node_num-char_kins个结点
		for(; i &lt; node_num; ++i) 
			huf_tree&#091;i].parent = 0; 
		CreateTree(huf_tree, char_kinds, node_num);		// 创建哈夫曼树
		HufCode(huf_tree, char_kinds);		// 生成哈夫曼编码
		// 写入字符和相应权重，供解压时重建哈夫曼树
		outfile = fopen(ofname, "wb");					// 打开压缩后将生成的文件
		fwrite((char *)&amp;char_kinds, sizeof(unsigned int), 1, outfile);		// 写入字符种类
		for(i = 0; i &lt; char_kinds; ++i)
		{
			fwrite((char *)&amp;huf_tree&#091;i].uch, sizeof(unsigned char), 1, outfile);			// 写入字符（已排序，读出后顺序不变）
			fwrite((char *)&amp;huf_tree&#091;i].weight, sizeof(unsigned long), 1, outfile);		// 写入字符对应权重
		}
		// 紧接着字符和权重信息后面写入文件长度和字符编码
		fwrite((char *)&amp;file_len, sizeof(unsigned long), 1, outfile);		// 写入文件长度
		infile = fopen(ifname, "rb");		// 以二进制形式打开待压缩的文件
		fread((char *)&amp;char_temp, sizeof(unsigned char), 1, infile);     // 每次读取8bits
		while(!feof(infile))
		{
			// 匹配字符对应编码
			for(i = 0; i &lt; char_kinds; ++i)
				if(char_temp == huf_tree&#091;i].uch)
					strcat(code_buf, huf_tree&#091;i].code);
			// 以8位（一个字节长度）为处理单元
			while(strlen(code_buf) &gt;= 8)
			{
				char_temp = '\0';		// 清空字符暂存空间，改为暂存字符对应编码
				for(i = 0; i &lt; 8; ++i)
				{
					char_temp &lt;&lt;= 1;		// 左移一位，为下一个bit腾出位置
					if(code_buf&#091;i] == '1')
						char_temp |= 1;		// 当编码为"1"，通过或操作符将其添加到字节的最低位
				}
				fwrite((char *)&amp;char_temp, sizeof(unsigned char), 1, outfile);		// 将字节对应编码存入文件
				strcpy(code_buf, code_buf+8);		// 编码缓存去除已处理的前八位
			}
			fread((char *)&amp;char_temp, sizeof(unsigned char), 1, infile);     // 每次读取8bits
		}
		// 处理最后不足8bits编码
		code_len = strlen(code_buf);
		if(code_len &gt; 0)
		{
			char_temp = '\0';		
			for(i = 0; i &lt; code_len; ++i)
			{
				char_temp &lt;&lt;= 1;		
				if(code_buf&#091;i] == '1')
					char_temp |= 1;
			}
			char_temp &lt;&lt;= 8-code_len;       // 将编码字段从尾部移到字节的高位
			fwrite((char *)&amp;char_temp, sizeof(unsigned char), 1, outfile);       // 存入最后一个字节
		}
		// 关闭文件
		fclose(infile);
		fclose(outfile);
		// 释放内存
		for(i = 0; i &lt; char_kinds; ++i)
			free(huf_tree&#091;i].code);
		free(huf_tree);
	}
}//compress

// 解压函数
int extract(char *ifname, char *ofname)
{
	unsigned int i;
	unsigned long file_len;
	unsigned long writen_len = 0;		// 控制文件写入长度
	FILE *infile, *outfile;
	unsigned int char_kinds;		// 存储字符种类
	unsigned int node_num;
	HufTree huf_tree;
	unsigned char code_temp;		// 暂存8bits编码
	unsigned int root;		// 保存根节点索引，供匹配编码使用
	infile = fopen(ifname, "rb");		// 以二进制方式打开压缩文件
	// 判断输入文件是否存在
	if (infile == NULL)
		return -1;
	// 读取压缩文件前端的字符及对应编码，用于重建哈夫曼树
	fread((char *)&amp;char_kinds, sizeof(unsigned int), 1, infile);     // 读取字符种类数
	if (char_kinds == 1)
	{
		fread((char *)&amp;code_temp, sizeof(unsigned char), 1, infile);     // 读取唯一的字符
		fread((char *)&amp;file_len, sizeof(unsigned long), 1, infile);     // 读取文件长度
		outfile = fopen(ofname, "wb");					// 打开压缩后将生成的文件
		while (file_len--)
			fwrite((char *)&amp;code_temp, sizeof(unsigned char), 1, outfile);	
		fclose(infile);
		fclose(outfile);
	}
	else
	{
		node_num = 2 * char_kinds - 1;		// 根据字符种类数，计算建立哈夫曼树所需结点数 
		huf_tree = (HufNode *)malloc(node_num*sizeof(HufNode));		// 动态分配哈夫曼树结点空间
		// 读取字符及对应权重，存入哈夫曼树节点
		for(i = 0; i &lt; char_kinds; ++i)     
		{
			fread((char *)&amp;huf_tree&#091;i].uch, sizeof(unsigned char), 1, infile);		// 读入字符
			fread((char *)&amp;huf_tree&#091;i].weight, sizeof(unsigned long), 1, infile);	// 读入字符对应权重
			huf_tree&#091;i].parent = 0;
		}
		// 初始化后node_num-char_kins个结点的parent
		for(; i &lt; node_num; ++i) 
			huf_tree&#091;i].parent = 0;
		CreateTree(huf_tree, char_kinds, node_num);		// 重建哈夫曼树（与压缩时的一致）
		// 读完字符和权重信息，紧接着读取文件长度和编码，进行解码
		fread((char *)&amp;file_len, sizeof(unsigned long), 1, infile);	// 读入文件长度
		outfile = fopen(ofname, "wb");		// 打开压缩后将生成的文件
		root = node_num-1;
		while(1)
		{
			fread((char *)&amp;code_temp, sizeof(unsigned char), 1, infile);		// 读取一个字符长度的编码
			// 处理读取的一个字符长度的编码（通常为8位）
			for(i = 0; i &lt; 8; ++i)
			{
				// 由根向下直至叶节点正向匹配编码对应字符
				if(code_temp &amp; 128)
					root = huf_tree&#091;root].rchild;
				else
					root = huf_tree&#091;root].lchild;
				if(root &lt; char_kinds)
				{
					fwrite((char *)&amp;huf_tree&#091;root].uch, sizeof(unsigned char), 1, outfile);
					++writen_len;
					if (writen_len == file_len) break;		// 控制文件长度，跳出内层循环
					root = node_num-1;        // 复位为根索引，匹配下一个字符
				}
				code_temp &lt;&lt;= 1;		// 将编码缓存的下一位移到最高位，供匹配
			}
			if (writen_len == file_len) break;		// 控制文件长度，跳出外层循环
		}
		// 关闭文件
		fclose(infile);
		fclose(outfile);
		// 释放内存
		free(huf_tree);
	}
}//extract()
int main()
{
	while(1)
	{
		printf("朱安杰 194020215\n"); 
		int opt, flag  = 0;		// 每次进入循环都要初始化flag为0
		char ifname&#091;256], ofname&#091;256];		// 保存输入输出文件名
		// 输入所选择操作类型的数字代号：1：压缩，2：解压，3：退出
		printf("请输入操作所对应的数字:\n 1: 压缩\n 2: 解压\n 3: 退出\n");
		scanf("%d", &amp;opt);
		if (opt == 3)
			break;
		else
		{
			printf("请输入输入文件名: ");
			fflush(stdin);		// 清空标准输入流，防止干扰gets函数读取文件名
			gets(ifname);
			printf("请输入输出文件名: ");
			fflush(stdin);
			gets(ofname);
		}
		switch(opt)
		{
		case 1: printf("压缩中……\n");
				flag = compress(ifname, ofname);	// 压缩，返回值用于判断是否文件名不存在
				break;		
		case 2: printf("解压中……\n");
				flag = extract(ifname, ofname);		// 解压，返回值用于判断是否文件名不存在
				break;		
		}
		if (flag == -1)
			printf("抱歉, 文件 \"%s\" 不存在!\n", ifname);		// 如果标志为'-1'则输入文件不存在
		else
			printf("操作完成!\n");		// 操作完成
	}
	return 0;
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结：</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在霍夫曼编码这个实验中，我们需要将输入的任意一个源，运用Huffman编码压缩技术进行压缩，除此之外，我们还需要将压缩好的文件还原为原来的文件（即解压）。既然需要用哈夫曼编码解决问题，首先我们需将文件中出现的字符以及它们出现的次数写入配置文件中，构建哈夫曼树，而在构建哈夫曼树时，需要选出所给数据中最小的两个一步步的搭建，这是此次实验中要解决的一个问题之一。建好Huffman树后，要根据“左0右1”的方法对树进行编码，在这两个过程中，需要把文件当做“符号”来看待，“符号”确定为多少个也是值得思考的问题。做好哈夫曼树的构建以及哈夫曼编码后，我们需要在压缩文件中按顺序存入每个字符的Huffman编码对文件进行压缩。对于解压缩，我们需要利用配置文件重构Huffman树，那么这棵树如何重构也是有待于解决的。最后就是用主函数调用所有函数完成整个过程了，当然在主函数里，我们还需要利用分支来区分到底是压缩还是解压缩文件，有利于用户的选择。通过编写与学习huffman编码压缩与解压文件，我更清楚的认识了huffma编码的具体压缩程度，与压缩在实际之中的用法。也会在接下来的学习中有更多的思路。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date><![CDATA[2021-05-25 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-25 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[huffman]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e9%9c%8d%e5%a4%ab%e6%9b%bc%e7%bc%96%e7%a0%81huffman]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-11]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[背包问题BackpackProblem]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/25/backpackproblem/</link>
		<pubDate>Mon, 24 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=95</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h&gt;
#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string.h&gt;
using namespace std;
void package(int *weight,int *size,int n,int c);//构造最优矩阵
void getResult(int n,int c,int *res,int *size,int *weight);//构造最优解
int f&#091;10]&#091;100];
//构造最优矩阵

int main(){
	vector&lt;int&gt; vweight;//定义一个vector数组vweight
	vector&lt;int&gt; vsize;
	int number;
	vweight.push_back(0);
	vsize.push_back(0);
	cout &lt;&lt; "请输入每个物品的重量："; 
	while (1){
		cin &gt;&gt; number;
		vweight.push_back(number);//每输入一个数字就把它添加到数组的最后
		if (cin.get() == '\n')//如果是回车符则跳出循环
			break;
	}
	int *weight = new int&#091;vweight.size()];//每个物品的重量
    if (!vweight.empty()){
        memcpy(weight, &amp;vweight&#091;0], vweight.size()*sizeof(int));
    }
	cout &lt;&lt; "请输入每个物品的价值："; 
	while (1) {
		cin &gt;&gt; number;
		vsize.push_back(number);
		if (cin.get() == '\n')
			break;
	}
    int *size = new int&#091;vsize.size()];//每个物品的价值
    if (!vsize.empty()){
        memcpy(size, &amp;vsize&#091;0], vsize.size()*sizeof(int));
    }
    if(vweight.size()!=vsize.size()){
    	cout &lt;&lt; "数据输入错误，请重新开始"; 
    	exit(0);
	} 
	cout &lt;&lt; "请输入背包的总容量：";
	int c; //背包能容的重量
	cin &gt;&gt; c;
	int n = vweight.size()-1; //物品的个数
	int res&#091;n];
	for(int a=0;a&lt;n;a++){
		res&#091;a]=0;
	}

	int i,j;
	package(weight,size,n,c);
	for(i=0;i&lt;=n;i++){
		for(j=0;j&lt;=c;j++)
			printf("%2d ",f&#091;i]&#091;j]);
		cout &lt;&lt; endl;
	}
	getResult(n,c,res,size,weight);
	cout &lt;&lt; "放入背包最大价值: " &lt;&lt; f&#091;n]&#091;c] &lt;&lt; endl;
	cout &lt;&lt; "放入背包的物品为: ";
	for(i=1;i&lt;=n;i++)
		if(res&#091;i] == 1)
			cout &lt;&lt; i &lt;&lt; "  ";
}

void package(int *weight,int *size,int n,int c){
	int i,j;
	//初始化矩阵
	for(i=1;i&lt;=n;i++)
		f&#091;i]&#091;0] = 0;
	for(j=1;j&lt;=c;j++)
		f&#091;0]&#091;j] = 0;
	for(i=1;i&lt;=n;i++){
		for(j=1;j&lt;=c;j++){
			//当容量够放入第i个物品，并且放入之后的价值要比不放大
			if(weight&#091;i] &lt;= j &amp;&amp; f&#091;i-1]&#091;j-weight&#091;i]] + size&#091;i] &gt; f&#091;i-1]&#091;j]){
				f&#091;i]&#091;j] = f&#091;i-1]&#091;j-weight&#091;i]] + size&#091;i];			
			}else
				f&#091;i]&#091;j] = f&#091;i-1]&#091;j];
		}
	}	
}

void getResult(int n,int c,int *res,int *size,int *weight){
//构造最优解
	int i,j;
	j = c;
	for(i=n;i&gt;=1;i--){
		if(f&#091;i]&#091;j] != f&#091;i-1]&#091;j]){
			res&#091;i] = 1;
			j = j - weight&#091;i];
		}
	}
}


</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>背包问题是要求一个最优值，如果要求输出这个最优值的方案，可以参照一般动态规划问题输出方案的方法：记录下每个状态的最优值是由哪一个策略推出来的，这样便可根据这条策略找到上一个状态，从上一个状态接着向前推即可。即自顶向下的备忘录法或自底向上。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date><![CDATA[2021-05-25 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-25 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[backpackproblem]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e8%83%8c%e5%8c%85%e9%97%ae%e9%a2%98backpackproblem]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-11]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[全点对最短路径All point pair shortest path]]></title>
		<link>https://blog.zhuanjie.ltd/2021/05/25/all-point-pair-shortest-path/</link>
		<pubDate>Mon, 24 May 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;iostream&gt;
#include &lt;vector&gt;

using namespace std;

int minnum(int a,int b,int c){//get the min number 
	int n=a;
	if(a&gt;b){
		n=b;
	}
	if(n&gt;c){
		n=c;
	}
	return n;
}

int maxinarr(int a&#091;], int size){
	int n=a&#091;0];
	for(int i=1;i&lt;size;i++){
		if(n&lt;a&#091;i])
			n=a&#091;i];
	}
	return n;
}

int mininarr(int a&#091;], int size){
	int n=a&#091;0];
	for(int i=1;i&lt;size;i++){
		if(n&gt;a&#091;i])
			n=a&#091;i];
	}
	return n;
}

int main(){
	vector&lt;int&gt; startpoint;
	vector&lt;int&gt; endpoint;
	vector&lt;int&gt; weight;
	int number; 
	cout &lt;&lt; "请依次输入每段路经的起始点，结束点和权值（输入-1结束输入ps:-1所在行数字无效）：" &lt;&lt; endl;
	while (1) {
		
		cin &gt;&gt; number;
		if (number == -1)//如果是-1则跳出循环
			break;
		startpoint.push_back(number);//每输入一个数字就把它添加到数组的最后
		cin &gt;&gt; number;
		if (number == -1)
			break;
		endpoint.push_back(number);
		cin &gt;&gt; number;
		if (number == -1)
			break;
		weight.push_back(number);
	} 
	int *sp = new int&#091;startpoint.size()];
    if (!startpoint.empty()){
        memcpy(sp, &amp;startpoint&#091;0], startpoint.size()*sizeof(int));
    }
	int *ep = new int&#091;endpoint.size()];
    if (!endpoint.empty()){
        memcpy(ep, &amp;endpoint&#091;0], endpoint.size()*sizeof(int));
    }
    int *wt = new int&#091;weight.size()];
    if (!weight.empty()){
        memcpy(wt, &amp;weight&#091;0], weight.size()*sizeof(int));
    }
    int size=minnum(startpoint.size(),endpoint.size(),weight.size());

	int max=maxinarr(ep,size);
    if(maxinarr(sp,size)&gt;maxinarr(ep,size))
    	int max=maxinarr(sp,size);
    	
    int sheet&#091;max+1]&#091;max+1];
    int min=mininarr(ep,size);
    if(mininarr(sp,size)&gt;mininarr(ep,size))
    	int min=mininarr(sp,size);
    for(int i=min;i&lt;=max;i++){
		for(int j=min;j&lt;=max;j++){
			sheet&#091;i]&#091;j]=99999;
		}
	}
    //比较存入路径长短后存入数据 
    for(int i=0;i&lt;size;i++){
    	if(sheet&#091;sp&#091;i]]&#091;ep&#091;i]]&gt;wt&#091;i]){
    		sheet&#091;sp&#091;i]]&#091;ep&#091;i]]=wt&#091;i];
		}
	}
	
	cout&lt;&lt;"排序前："&lt;&lt; endl;
	for(int i=min;i&lt;=max;i++){
		for(int j=min;j&lt;=max;j++){
			cout &lt;&lt; sheet&#091;i]&#091;j]&lt;&lt;" ";
		}
		cout &lt;&lt; endl;
	}
	//循环计算最短路径表 
	for(int k=min;k&lt;=max;k++){
		for(int i=min;i&lt;=max;i++){		
			for(int j=min;j&lt;=max;j++){
				if(sheet&#091;i]&#091;j]&gt;sheet&#091;i]&#091;k]+sheet&#091;k]&#091;j])
					sheet&#091;i]&#091;j]=sheet&#091;i]&#091;k]+sheet&#091;k]&#091;j];
			}		
		}			
	}
	cout&lt;&lt;"排序后："&lt;&lt; endl;
	for(int i=min;i&lt;=max;i++){
		for(int j=min;j&lt;=max;j++){
			cout &lt;&lt; sheet&#091;i]&#091;j]&lt;&lt;" ";
		}
		cout &lt;&lt; endl;
	}
	cout &lt;&lt; endl;
	cout &lt;&lt; "          ";
	for(int i=min;i&lt;=max;i++){
		printf("%10d",i);
	}
	cout &lt;&lt; endl;
	for(int i=min;i&lt;=max;i++){
		for(int j=min-1;j&lt;=max;j++){
			if(j==min-1){
				printf("%10d",i);
				continue;
			}
			printf("%10d",sheet&#091;i]&#091;j]);
		}
		cout &lt;&lt; endl;
	}
} 
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>读取数组定义了三个个vector容器，将数值存入容器后再将容器转换为普通数组。函数上面对于该算法的分析，求解过程实际上是典型的动态规划解题过程，描述最优子结构：公式的推倒，思考过程，得到一个递归解，按自底向上的方式计算最优解：最短路径权值矩阵。最后有计算结果构造一个最优解，给出最短路径。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date><![CDATA[2021-05-25 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-05-25 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-05-24 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[all-point-pair-shortest-path]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%85%a8%e7%82%b9%e5%af%b9%e6%9c%80%e7%9f%ad%e8%b7%af%e5%be%84all-point-pair-shortest-path]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-11]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[12届蓝桥杯C++决赛试题]]></title>
		<link>https://blog.zhuanjie.ltd/2021/06/06/12lanqiao/</link>
		<pubDate>Sat, 05 Jun 2021 22:11:00 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>1.大写</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>题目<br>给定一个只包含大写字母和小写字母的字符串，请将其中所有的小写字母转换成大写字母后将字符串输出。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入<br>输入一行包含一个字符串。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入样例<br>LanQiao</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出<br>输出转换成大写后的字符串。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出样例<br>LANQIAO</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>评测用例规模与约定<br>对于所有评测用例，字符串的长度不超过100。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>代码</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;iostream&gt;
#include &lt;string.h&gt;
using namespace std;
int main(){
	char s&#091;100];
	fgets(s,100,stdin);
	for(int i=0;i&lt;strlen(s);i++){
		if(s&#091;i]&gt;='a'&amp;&amp;s&#091;i]&lt;='z'){
			s&#091;i]=s&#091;i]-('a'-'A');
		}
	}
	puts(s);
} 
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>2.二进制问题</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>题目<br>小蓝最近在学习二进制。他想知道1到N中有多少个数满足其二进制表示中恰好有K个1。你能帮助他吗?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入<br>输入两个数N，K。N表示从1到N这么多数字，K表示二进制数字中有K个1。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入样例<br>7 2</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出<br>输出一个数字，表示从1到N这么多数字的二进制数字中有多少个二进制数字中有K个1.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输出样例<br>3</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>评测用例规模与约定<br>对于30%的评测用例，1&lt;N≤ 108,1 &lt;K ≤10。<br>对于60%的评测用例，1≤N≤2×109,1&lt;K ≤30。<br>对于所有评测用例，1≤N≤ 1018,1≤K ≤50。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>代码</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;iostream&gt;
#include &lt;math.h&gt;
using namespace std;
long long sheet&#091;10000]&#091;10000];

int judge(int n){
	int c;
	for(int i=0;i&lt;=n;i++){
		if(pow(2,i)&gt;=n){
			c=i-1;
			break;
		}
	}
	if(n==1){
		return 1;
	}
	else
	return c;
}

int main(){
	int n,k;
	cin &gt;&gt; n;
	cin &gt;&gt; k;
	int c=judge(n);
	for(int i=0;i&lt;=c;i++){
		for(int j=0;j&lt;=i&amp;&amp;j&lt;=k;j++){
			if(j==0){
				sheet&#091;i]&#091;j]=1;
			}
			else if(i==j){
				sheet&#091;i]&#091;j]=1;
			}
			else{
				sheet&#091;i]&#091;j]=sheet&#091;i-1]&#091;j]+sheet&#091;i-1]&#091;j-1];
			}
//			cout &lt;&lt; sheet&#091;i]&#091;j] &lt;&lt; " ";
		}
//		cout &lt;&lt; endl;
	}
	int sum=sheet&#091;c]&#091;k];
	while(n&gt;1&amp;&amp;k&gt;=1){
		n=n-pow(2,c);
		k--;
		c=judge(n);
		sum=sum+sheet&#091;c]&#091;k];
	}
	cout &lt;&lt; sum;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>思路总结：</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>按照二进制长度（1的二进制长度为1，5的二进制长度为3）为行，二进制数中1的个数为列进行列表，利用动态规划求解。先求出表中右下角值，再在表中找出(N-pow(2,最大列数),k-循环次数)的值相加，最后结果就是总个数。</p>
<!-- /wp:paragraph -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>…</td><td>K</td><td>　</td></tr><tr><td>0</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>1</td><td>1</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>2</td><td>1</td><td>&nbsp;</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>3</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>4</td><td>1</td><td>&nbsp;</td><td>=sheet(3,2)+sheet(3,1)</td><td>&nbsp;</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>…</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>N</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;&nbsp;</td><td>=sheet(n-1,k)+sheet(n-1,k-1)</td></tr></tbody></table></figure>
<!-- /wp:table -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date><![CDATA[2021-06-06 06:11:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-05 22:11:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-06 06:11:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-05 22:11:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[12lanqiao]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_date]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021-10-11]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[12%e5%b1%8a%e8%93%9d%e6%a1%a5%e6%9d%afc%e5%86%b3%e8%b5%9b%e8%af%95%e9%a2%98]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[96]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[AS报错“Could not find com.android.tools.build:gradle:4.1.2.”]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/14/as-wrong-could-not-find-com-android-tools-buildgradle4-1-2/</link>
		<pubDate>Thu, 14 Oct 2021 06:14:57 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>更改build.gradle文件，换用阿里镜像</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>解决报错：Using insecure protocols with repositories, without explicit opt-in, is unsupported. Switch Maven repository 'maven(http://maven.aliyun.com/nexus/content/groups/public/)' to redirect to a secure protocol (like HTTPS) or allow insecure protocols.</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        //allowInsecureProtocol = true
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        //allowInsecureProtocol = true
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    }
}
</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[移植Github上安卓项目报错解决方案]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date><![CDATA[2021-10-14 14:14:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-14 06:14:57]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-14 14:14:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-14 06:14:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[as-wrong-could-not-find-com-android-tools-buildgradle4-1-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="androidstudio"><![CDATA[AndroidStudio]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[as%e6%8a%a5%e9%94%99could-not-find-com-android-tools-buildgradle4-1-2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[移动应用基础——AndroidStudio编程（未完成）]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/15/androidstudiostudy/</link>
		<pubDate>Fri, 15 Oct 2021 13:14:25 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>控件</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>TextView</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// MainActivity.java代码设置
public class MainActivity extends AppCompatActivity {

    private TextView text;// 新建TextView类型变量

    @Override
    protected void onCreate(Bundle savedInstanceState) {// 界面设置
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        String word = "TEXT";

        text = (TextView) this.findViewById(R.id.textView1);//获取TextViev类型变量对应文本控件的ID，并绑定到text中
        text.setText(word);// 设置文本内容为String类型变量word里的值
    }
}


// layout文件夹下activity_main.xml
&lt;TextView
        android:id="@+id/textView"// 控件id
        android:layout_width="wrap_content"// 控件宽度
        android:layout_height="wrap_content"// 控件高度
        android:text="@string/home_word"// 显示的文本
        android:textColor="#000000"// 文本的颜色
        android:textSize="48sp"// 文本字体大小
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintHorizontal_bias="0.1"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.029999971" /&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>Button</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// MainActivity.java代码设置
public class MainActivity extends AppCompatActivity {

    private TextView text;// 新建TextView类型变量
    private Button button1;// 新建Button类型变量

    @Override
    protected void onCreate(Bundle savedInstanceState) {// 界面设置
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        String word = "TEXT";

        button1 = (Button) this.findViewById(R.id.button);//获取Button类型变量对应按钮控件的ID，并绑定到button1中
        text = (TextView) this.findViewById(R.id.textView1);

        //设置按钮点击监听器MyOnClickListener
        button1.setOnClickListener( new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // 点击后运行的代码写在这
                text.setText(word);// 这里运行点击按钮后更改文本为变量word里的内容
                Toast.makeText(MainActivity.this, "您点击了按钮！", Toast.LENGTH_SHORT).show();// Toast通知
            }
        });
    }
}


// layout文件夹下activity_main.xml
&lt;Button
        android:id="@+id/button"// Button控件的id
        android:layout_width="wrap_content"// Button控件的宽度
        android:layout_height="wrap_content"// Button控件的高度
        android:text="@string/button_word"// Button按钮上的文字
        app:layout_constraintBottom_toTopOf="@+id/up"
        app:layout_constraintEnd_toEndOf="@+id/end"
        app:layout_constraintStart_toStartOf="@+id/start"
        app:layout_constraintTop_toBottomOf="@+id/buttom"
        tools:ignore="MissingConstraints" /&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>进度条</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// 使用java代码设置
setProgress(int) //设置第一进度
setSecondaryProgress(int) //设置第二进度
getProgress() //获取第一进度
getSecondaryProgress() //获取第二进度
incrementProgressBy(int) //增加或减少第一进度
incrementSecondaryProgressBy(int) //增加或减少第二进度
getMax() //获取最大进度


// layout文件夹下activity_main.xml
&lt;ProgressBar
            android:id="@+id/pb_main_download"
            style="?android:attr/progressBarStyleHorizontal"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:max="100" /&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>功能</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>跳转页面</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// java文件里实现跳转activity的代码段
Intent intent = new Intent();
intent.setClass(com.example.helloword.MainActivity.this, MainActivity2.class);// 括号里两个变量，第一个为当前activity名称，后一个问要启动的activity的名称
startActivity(intent);


// 新的activity要在AndroidManifest.xml文件里注册
// 可以在新的java文件中public class 文件名 extends AppCompatActivity的文件名处，alt+enter选择Add activity to manifest
&lt;activity
        android:name=".MainActivity2"
        android:exported="false"
        android:parentActivityName=".MainActivity"
        android:label="@string/page2_welcome"/&gt;
//android:exported="true"当前Activity是否可以被另一个Application的组件启动：true允许被启动；false不允许被启动
//android:parentActivityName实现了某个子界面下的左上角返回按钮返回到的页面
//android:label表示了页面上的左上角文字，默认包名
</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[Android Studio部分控件及部分功能]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date><![CDATA[2021-10-15 21:14:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-15 13:14:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-15 21:14:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-15 13:14:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[androidstudiostudy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="androidstudio"><![CDATA[AndroidStudio]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e7%a7%bb%e5%8a%a8%e5%ba%94%e7%94%a8%e5%9f%ba%e7%a1%80-androidstudio%e7%bc%96%e7%a8%8b]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Python的列表，集合，字典的区别和使用]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/16/python-list-set-dict/</link>
		<pubDate>Sat, 16 Oct 2021 06:26:26 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>列表List</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>res = &#091;1,2,'Randall']

# 增加元素：extend和append

# <span class="has-inline-color has-secondary-color">如果想添加的一个元素是一个列表，那么append是将这个这个列表作为一个元素添加进来，而extend是将列中的元素一个一个添加进去</span>
res.append(1)
res.extend('R')

# 删除元素：del，pop，切片，remove
del res&#091;1]# 删除指定位置的元素
res.pop(1)# 弹出（删除）该位置上的元素，没有指定则是最后一个元素
res = res&#091;:2]+res&#091;3:]#切片：从开始到角标为2的左边一个元素加上角标为3的元素到最后一个元素
res.remove(2)# 删除指定值的元素

# 更改元素
res&#091;1] = 100# 将指定位置的元素改为100

# 查元素
print(res&#091;0])# 输出指定元素
</code></pre>
<!-- /wp:code -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>函数</td><td>描述</td></tr><tr><td>len(list)</td><td>列表元素个数</td></tr><tr><td>max(list)</td><td>返回列表元素最大值</td></tr><tr><td>min(list)</td><td>返回列表元素最小值</td></tr><tr><td>list(seq)</td><td>将元组转换为列表</td></tr></tbody></table><figcaption>列表内置函数完整列表</figcaption></figure>
<!-- /wp:table -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>方法</td><td>描述</td></tr><tr><td>list.append(obj)</td><td>在列表末尾添加新的对象</td></tr><tr><td>list.count(obj)</td><td>统计某个元素在列表中出现的次数</td></tr><tr><td>list.extend(seq)</td><td>在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td></tr><tr><td>list.index(obj)</td><td>从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td>list.insert(index, obj)</td><td>将对象插入列表</td></tr><tr><td>list.pop([index=-1])</td><td>移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr><td>list.remove(obj)</td><td>移除列表中某个值的第一个匹配项</td></tr><tr><td>list.reverse()</td><td>反向列表中元素</td></tr><tr><td>list.sort( key=None, reverse=False)</td><td>对原列表进行排序</td></tr><tr><td>list.clear()</td><td>清空列表</td></tr><tr><td>list.copy()</td><td>复制列表</td></tr></tbody></table><figcaption>列表内置方法完整列表</figcaption></figure>
<!-- /wp:table -->

<!-- wp:separator {"opacity":"css","className":"is-style-default"} -->
<hr class="wp-block-separator has-css-opacity is-style-default" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>集合Set</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>创建一个空集合必须用<strong>&nbsp;set()</strong>&nbsp;而不是&nbsp;<strong>{ }</strong>，因为&nbsp;<strong>{ }</strong>&nbsp;是用来创建一个空字典。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code># 创建
parame = {value01,value02,...}
parame = set(value)

# 增加元素：add和update
parame.add(1)
parame.update(x)# x可以是列表，元组，字典等，若有多个x，每个x中间用逗号隔开

# 删除元素：remove，discard， pop() 
parame.remove(x)# 删除指定元素,若元素不存在则会发生错误
parame.discard(x)# 删除指定元素,若元素不存在不会发生错误
parame.pop()# 随机删除集合中的一个元素

# 计算集合parame里的元素个数
len(parame)

# 清空集合
parame.clear()

# 判断元素x是否在集合parame中
x in parame# 存在返回 True，不存在返回 False
</code></pre>
<!-- /wp:code -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>方法</td><td>描述</td></tr><tr><td>add()</td><td>为集合添加元素</td></tr><tr><td>clear()</td><td>移除集合中的所有元素</td></tr><tr><td>copy()</td><td>拷贝一个集合</td></tr><tr><td>difference()</td><td>返回多个集合的差集</td></tr><tr><td>difference_update()</td><td>移除集合中的元素，该元素在指定的集合也存在。</td></tr><tr><td>discard()</td><td>删除集合中指定的元素</td></tr><tr><td>intersection()</td><td>返回集合的交集</td></tr><tr><td>intersection_update()</td><td>返回集合的交集。</td></tr><tr><td>isdisjoint()</td><td>判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。</td></tr><tr><td>issubset()</td><td>判断指定集合是否为该方法参数集合的子集。</td></tr><tr><td>issuperset()</td><td>判断该方法的参数集合是否为指定集合的子集</td></tr><tr><td>pop()</td><td>随机移除元素</td></tr><tr><td>remove()</td><td>移除指定元素</td></tr><tr><td>symmetric_difference()</td><td>返回两个集合中不重复的元素集合。</td></tr><tr><td>symmetric_difference_update()</td><td>移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。</td></tr><tr><td>union()</td><td>返回两个集合的并集</td></tr><tr><td>update()</td><td>给集合添加元素</td></tr></tbody></table><figcaption>集合内置方法完整列表</figcaption></figure>
<!-- /wp:table -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>字典Dict</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code># 创建空的字典
dict1 = dict()
empty_dict = {}# 空的花括号代表空的dict
dict2 = {'A': 1, 'B': 2, 'C': 3}
dict3 = {(20, 30):'good', 30:'bad'}# 使用元组作为dict的key
dict4 = dict(spinach = 1.39, cabbage = 2.59)# 使用关键字参数来创建字典，输出为{'spinach': 1.39, 'cabbage': 2.59}

# 增加元素：
dict2&#091;'D'] = 93# 对不存在的key赋值，就是增加key-value对
# 如果对 dict 中存在的 key-value 对赋值，新赋的 value 就会覆盖原有的 value

# 删除元素：del
del dict2&#091;'A']

# 清空集合
dict2.clear()

# 判断元素x是否在集合parame中
'A' in dict2# 存在返回 True，不存在返回 False
</code></pre>
<!-- /wp:code -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>函数</td><td>描述</td></tr><tr><td>len(dict)</td><td>计算字典元素个数，即键的总数。</td></tr><tr><td>str(dict)</td><td>输出字典，可以打印的字符串表示。</td></tr><tr><td>type(variable)</td><td>返回输入的变量类型，如果变量是字典就返回字典类型。</td></tr><tr><td>radiansdict.clear()</td><td>删除字典内所有元素</td></tr><tr><td>radiansdict.copy()</td><td>返回一个字典的浅复制</td></tr><tr><td>radiansdict.fromkeys()</td><td>创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</td></tr><tr><td>radiansdict.get(key, default=None)</td><td>返回指定键的值，如果键不在字典中返回 default 设置的默认值</td></tr><tr><td>key in dict</td><td>如果键在字典dict里返回true，否则返回false</td></tr><tr><td>radiansdict.items()</td><td>以列表返回一个视图对象</td></tr><tr><td>radiansdict.keys()</td><td>返回一个视图对象</td></tr><tr><td>radiansdict.setdefault(key, default=None)</td><td>和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</td></tr><tr><td>radiansdict.update(dict2)</td><td>把字典dict2的键/值对更新到dict里</td></tr><tr><td>radiansdict.values()</td><td>返回一个视图对象</td></tr><tr><td>pop(key[,default])</td><td>删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</td></tr><tr><td>popitem()</td><td>随机返回并删除字典中的最后一对键和值。</td></tr></tbody></table><figcaption>字典内置方法完整列表</figcaption></figure>
<!-- /wp:table -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date><![CDATA[2021-10-16 14:26:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-16 06:26:26]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-16 14:26:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-16 06:26:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-list-set-dict]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[46]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Linux下Shell语言编写程序——操作系统实验1]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/18/linux-shell-os1/</link>
		<pubDate>Mon, 18 Oct 2021 10:44:20 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>实验目的</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>(1)通过实验使学生了解Linux提供的用户界面中的作业批处理操作界面：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>(2)掌握Linux Shell脚本的编辑和执行，熟悉批处理语言的编程方法：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>(3)熟悉Linux提供的文本编辑器vi (Gedit)的使用。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验预备知识</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>(1)Linux文本编辑器vi (Gedit) 。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>(2)Linux批处理文件(Shell脚本)的编辑和执行</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验内容</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>(1)用Shell语言编制一个批处理程序，其功能如下：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp;1) 屏幕提示用户键盘输入年、月；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp;2) 接收用户的输入值；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp;3) 输出该年该月的日历。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>(2)创建一个Shell文件，完成以下功能：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp;1) 将键盘输入的内容保存到文件myfile.txt 中；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp;2) 显示该文件内容；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>&nbsp;3) 显示当前目录下的所有文件和目录名称。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>E1-3-1.sh</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#!/bin/bash
## “#!”是一个约定的标记，它告诉系统这个脚本需要哪一种解释器来执行
## 编译之前需要加权：$ chmod +x 文件名

## 提示输入年
echo "Please input year: "
## 将年读入变量YEAR
read YEAR
## 提示输入月
echo "Please input month: "
## 将月存入变量MONTH
read MONTH
## 输出日历
cal $MONTH $YEAR

## date命令：显示日期与时间的命令
## 其中date命令又可以带一些参数，如果我们想让当前的日期的显示格式为2015-05-14 21：22则应该输入date +%Y-%m-%d，如果输出具体时间，格式为21：22，表示当前的时间的话，可以输入date +%H:%M
## cal命令：显示日历的命令
## 如果要列出当前这个月份的月历，可以直接使用命令cal即可，如果我们想列出某个年的月历情况，我们可以输入命令cal 2016，如果想列出某个年的某个月的话，我们可以输入命令cal 9 2015，即可查看2015年9月份的日历
## bc命令：一个简单好用的计算器
## 加法：+    减法：-    乘法：*    除法：/    指数：^    余数：%
## 使用quit命令可以退出bc计算器
## bc默认仅输出整数，如果要输出全部小数，那么就必须要执行scale=number，这里的number指的是小数点后的位数</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>E1-3-2.sh</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#!/bin/bash

echo "Please input some word: "
read WORD
echo $WORD &gt;&gt; myfile.txt
## 一个箭头会覆盖写入，两个箭头是追加写入
echo "The word in myfile.txt: "
## cat命令用于连接文件并将内容输出到标准输出设备上
cat myfile.txt
echo "The doucments in this dictionary: "
ls
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>截图</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>对E1-3-1.sh进行加权后运行：</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":156,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/10/image-4.png" alt="" class="wp-image-156" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>对E1-3-2.sh进行加权后运行：</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":153,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/10/image-3.png" alt="" class="wp-image-153" /></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date><![CDATA[2021-10-18 18:44:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-18 10:44:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-18 18:44:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-18 10:44:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-shell-os1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Linux下C语言进程管理（创建子进程的原理）——操作系统实验2]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/18/linux-os2/</link>
		<pubDate>Mon, 18 Oct 2021 15:19:05 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=165</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>实验目的</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>(1)通过实验使学生了解Linux C程序的编译和运行;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>(2)掌握fork函数的编程方法;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>(3)热悉并发进程的程序的编写。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验预备知识</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>(1)Linux文本编辑器vi和gedit；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p> (2)gcc编译器。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验内容</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>1 父进程创建子进程 1)父进程显示“11111” 2)子进程显示“22222” 3）多次执行该程序观察结果。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>2 父进程创建子进程 1)父进程显示“I am parent\n”5次，每次输出后使用sleep(1)延时1秒，然后再进入下次循环。 2)子进程显示“I am child\n”5次，每次输出后使用 sleep(1)延时1秒，然后再进入下次循环。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>3.进程家族树：在原程序中连续使用4个fork()，然后输出 字母“A”。观察并分析输出结果。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验步骤</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>1.先打开终端输入</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ sudo apt-get install gcc</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>安装C、C++编译器gcc</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>2.编写代码，在代码所在文件夹下打开终端，运行</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ gcc C语言源文件文件名 -o 输出文件名
$ ./输出文件名</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>编译运行C语言文件</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>E2-3-1.c</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;unistd.h&gt;
#include &lt;stdio.h&gt;

int main ()
{
    int pid = fork();
    if (pid &lt; 0) {
        printf("Error in fork!");
    } else if (pid == 0) {
        printf("子进程:\n22222\npid:%d \n",getpid());
    } else {
        printf("父进程:\n11111\npid:%d \n",getpid());
    }
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>E2-3-2.c</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;unistd.h&gt;
#include &lt;stdio.h&gt;

int main ()
{
    int pid = fork();
    if (pid &lt; 0) {
        printf("Error in fork!");
    } else if (pid == 0) {
        for(int i=0; i &lt; 5; i++){
            printf("I am child.\n");
            sleep(1);
        }
    } else {
        for(int i=0; i &lt; 5; i++){
            printf("I am parent.\n");
            sleep(1);
        }
    }
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>E2-3-3.c</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>
#include &lt;unistd.h&gt;
#include &lt;stdio.h&gt;

int main ()
{
    int pid1 = fork();
    if (pid1 &lt; 0) {
        printf("Error in fork!");
    } else if (pid1 == 0) {
        printf("A\n");
        int pid2 = fork();
        if (pid2 &lt; 0) {
            printf("Error in fork!");
        } else if (pid2 == 0) {
            printf("A\n");
            int pid3 = fork();
            if (pid3 &lt; 0) {
                printf("Error in fork!");
            } else if (pid3 == 0) {
                printf("A\n");
                int pid4 = fork();
                if (pid4 &lt; 0) {
                    printf("Error in fork!");
                } else if (pid4 == 0) {
                    printf("A\n");
                } else {
                    printf("A\n");
                }
            } else {
                printf("A\n");
            }
        } else {
            printf("A\n");
        }
    } else {
        printf("A\n");
    }
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>截图</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":172,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/10/q-3.png" alt="" class="wp-image-172" /><figcaption>E2-3-1.c编译运行截图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:image {"id":173,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/10/w.png" alt="" class="wp-image-173" /><figcaption> E2-3-2.c编译运行截图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:image {"id":191,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/10/image-9.png" alt="" class="wp-image-191" /><figcaption> E2-3-3.c编译运行截图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>进程创建方法与创建进程数</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>fork()函数的原理：以当前进程作为父进程创建出一个新的子进程，并且将父进程的所有资源拷贝给子进程，这样子进程作为父进程的一个副本存在。父子进程几乎时完全相同的，但也有不同的如父子进程ID不同。即为创建一个新的进程里面从新进程（即fork处）运行，新的进程拷贝原本进程的所有状态（包括变量，输入输出流等），这两个进程有pid不同（原进程大于0，子进程等于0）、 getpid()（该函数返回当前进程的id号）返回值不同；</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>利用循环(for)(循环里无判断)/顺序并列创建进程</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>循环次数n→进程数n^2（父进程1个+子进程n^2-1个）</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>示例代码</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;unistd.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/wait.h&gt;


int main()
{
    int pid&#091;3];
    for(int i=0;i&lt;3;i++){
        pid&#091;i]=fork();
    }
    if(pid&#091;0]*pid&#091;1]*pid&#091;2]==0){
        printf("子进程ID=%d\n",getpid());
    }
    printf("父进程ID=%d\n",getpid());
    return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>运行结果</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>randall@ubuntu:~/Desktop$ gcc exper.c
randall@ubuntu:~/Desktop$ ./a.out
父进程ID=2344
randall@ubuntu:~/Desktop$ 子进程ID=2345
父进程ID=2345
子进程ID=2346
子进程ID=2347
父进程ID=2347
父进程ID=2346
子进程ID=2348
子进程ID=2349
父进程ID=2349
子进程ID=2350
父进程ID=2350
父进程ID=2348
子进程ID=2351
父进程ID=2351</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3> 利用循环(for)(循环里有判断)/嵌套创建进程</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p> 循环次数n→进程数n+1（父进程1个+子进程n个） </p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>示例代码</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;unistd.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/wait.h&gt;


int main()
{
    int pid&#091;3];
    for(int i=0;i&lt;3;i++){
        pid&#091;i]=fork();
        if(pid&#091;i]&gt;0){// 该处是让子进程去创建子进程，可以把判断条件改成pid&#091;i]==0变成让父进程循环去创建子进程
            break;
        }
    }
    if(pid&#091;0]*pid&#091;1]*pid&#091;2]==0){
        printf("子进程ID=%d\n",getpid());
    }
    printf("父进程ID=%d\n",getpid());
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>运行结果</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>randall@ubuntu:~/Desktop$ gcc exper.c
randall@ubuntu:~/Desktop$ ./a.out
父进程ID=2446
randall@ubuntu:~/Desktop$ 子进程ID=2447
父进程ID=2447
子进程ID=2448
父进程ID=2448
子进程ID=2449
父进程ID=2449</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date><![CDATA[2021-10-18 23:19:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-18 15:19:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-18 23:19:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-18 15:19:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-os2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[105]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[user]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1597714468@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.127.197.40]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-10-19 20:22:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-10-19 12:22:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[给你个赞！]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[new_field_qq]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[new_field_qq]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1634646134.58356;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1634653988.871227;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"Randall";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[计算机网络计算UDP校验和]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/19/udp-checksum/</link>
		<pubDate>Tue, 19 Oct 2021 08:52:38 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:image {"id":184,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/10/image-6.png" alt="" class="wp-image-184" /><figcaption>wireshark抓包截图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>源IP地址：123.151.78.47(0x7b97, 0x4e2f)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>目的IP地址：10.66.149.117(0xa42, 0x9575)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>源端口：8000(0x1f40)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>目的端口：4006(0xfa6)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>UDP长度：39(0x27)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>数据：0x023a, 0x2700, 0xcd27, 0x6784, 0xc57e, 0xf400, 0x0000, 0x5ad0, 0xc585, 0xf70f, 0xf03a, 0x71fa, 0x294d, 0xe354, 0x2bdf, 0x0300 校验和：0x9ab9</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// C语言计算校验和
#include&lt;stdio.h&gt;
unsigned short checksum(unsigned short *buf,int nword){
	unsigned long sum;
	for(sum=0;nword&gt;0;nword--){
		sum += *buf++;
		sum = (sum&gt;&gt;16) + (sum&amp;0xffff);
	}
	return ~sum;
}

int main(){
	unsigned short buffer&#091;26] = {
	0x7b97, 0x4e2f, // 源IP地址： 123.151.78.47(0x7b97, 0x4e2f)
	0x0a42, 0x9575, // 目的IP地址：10.66.149.117(0xa42, 0x9575)
	0x0011, 0x0027, // UDP协议字段值17(0x0011) UDP长度： 39(0x27)
	0x1f40, 0x0fa6, // 源端口： 8000(0x1f40) 目的端口： 4006(0xfa6)
	0x0027, 0x0000, // UDP长度： 39(0x27) 校验和（计算时置0）（0x0000） 
	0x023a, 0x2700, // 数据字段，不够位数最后补0 
	0xcd27, 0x6784, 
	0xc57e, 0xf400, 
	0x0000, 0x5ad0, 
	0xc585, 0xf70f, 
	0xf03a, 0x71fa, 
	0x294d, 0xe354, 
	0x2bdf, 0x0300};
	int n=26;  
	unsigned short re_checksum;     
	re_checksum=checksum(buffer,n);
	printf("%x\t",re_checksum); 
	if(re_checksum == 0x9ab9) 
		printf("校验和正确!\n"); 
	else          
		printf("校验和不正确!\n");
} </code></pre>
<!-- /wp:code -->

<!-- wp:image {"id":186,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/10/image-8.png" alt="" class="wp-image-186" /><figcaption>运行截图</figcaption></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date><![CDATA[2021-10-19 16:52:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-19 08:52:38]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-19 16:52:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-19 08:52:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[udp-checksum]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c"><![CDATA[计算机网络]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[关于Linux下子进程输出问题]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/22/linux-output/</link>
		<pubDate>Thu, 21 Oct 2021 17:28:44 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>子进程输出的个数跟是否换行有关？</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code><strong>printf("before fork with  换行符\n");  
printf("before fork without换行符");</strong>  
pid = fork();
if(pid == 0){　　//子进程
　　printf("I am is  child process,pid=%d\n",getpid());   
　　printf("my parentprocess's pid=%d\n",getppid()); 
}else if(pid &gt; 0){　　//父进程
　　printf("this is parentprocess,pid=%d\n",getpid()); 
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>执行结果如下：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>　　<strong>before fork with  换行符
　　before fork without换行符</strong>I am is  child process,pid=4123
　　my parentprocess's pid=4000
　　<strong>before fork without换行符</strong>this is parentprocess,pid=4000</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>问题：两个printf为什么一个打印一次，另外一个打印了两次？</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>解答： 我们要知道printf函数是有缓冲机制的，类似于我们使用的write函数，但我们将想要的东西输出的时候，系统仅仅是把内容放到stdout标准输出的缓冲队列的。当遇到“\n”的时候，系统就把缓冲里的东西给清掉，输出到屏幕上。执行后，缓冲里没有了数据，自然子进程再次执行的时候没有内容可输出了。但是printf("before fork without换行符");的时候，子进程也会把stdout的内容再次输出来。也就是导致了内容出处了两边。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date><![CDATA[2021-10-22 01:28:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-21 17:28:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-22 01:28:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-21 17:28:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-output]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[H.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1723363188@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[223.104.41.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-10-27 10:04:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-10-27 02:04:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好难啊啊啊啊啊]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[new_field_qq]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[new_field_qq]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1635300279.624919;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1635309668.57125;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"Randall";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[转接]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[2227535604@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://blog.zhuanjie.ltd:8088</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[111.198.122.250]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2021-10-27 12:41:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2021-10-27 04:41:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[冲冲冲，慢慢学]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>3</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[new_field_qq]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[new_field_qq]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1635309690.074944;s:5:"event";s:9:"check-ham";s:4:"user";s:7:"Randall";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Python判断数据类型]]></title>
		<link>https://blog.zhuanjie.ltd/2021/10/22/python-judge-character/</link>
		<pubDate>Fri, 22 Oct 2021 15:09:34 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>python用与判断数据类型的函数：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>isinstance()函数<br>isinstance(变量,类型)<br>isinstance(i, int)<br>可以用来判断变量的类型，它返回的是一个布尔值，False or True.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>type()函数<br>不是判断变量的类型，而使直接返回变量的类型</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date><![CDATA[2021-10-22 23:09:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-22 15:09:34]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-22 23:09:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-22 15:09:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-judge-character]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Linux下c语言进程通讯——wait()/wait(&amp;status)/WIFEXITED(status)和exit()之间的关系]]></title>
		<link>https://blog.zhuanjie.ltd/2021/11/02/linux-wait-waitstatus-wifexitedstatus-exit/</link>
		<pubDate>Mon, 01 Nov 2021 16:36:25 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>wait()函数定义</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;sys/types.h&gt; 
#include &lt;sys/wait.h&gt;
pid_t wait(int *status)
// 参数status用来保存被收集进程退出时的一些状态，它是一个指向int类型的指针。但如果我们对这个子进程是如何死掉的毫不在意，只想把这个僵尸进程消灭掉，（事实上绝大多数情况下，我们都会这样想），我们就可以设定这个参数为NULL，如pid=wait(NULL)，返回给pid的值就是子进程的id</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>WIFEXITED(status)/WEXITSTATUS(status) </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>当子进程正常结束时，WIFEXITED(status) 返回非0值；当子进程异常结束时，WIFEXITED(status) 返回0值 </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>WEXITSTATUS(status)在WIFEXITED(status)为非0时可以用来获取exit()中的参数即返回给父进程的值，如果子进程调用exit(5)退出，WEXITSTATUS(status)就会返回5；如果进程不是正常退出的，也就是说，WIFEXITED返回0</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;unistd.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/wait.h&gt;

int main()
{
    int status;
    pid_t pc,pr;
    pc=fork();
    if(pc&lt;0) 
        printf("error ocurred!\n");
    else if(pc==0){ 
        printf("This is child process with pid of %d.\n",getpid());
        exit(5);        
    }
    else{           
        pr=wait(&amp;status);
        if(WIFEXITED(status)){  
            printf("the child process %d exit normally.\n",pr);
            printf("WIFEXITED(status) is %d.\n",WIFEXITED(status));
            printf("WEXITSTATUS(status) is %d.\n",WEXITSTATUS(status));
        }
        else                   
            printf("the child process %d exit abnormally.\n",pr);
    }
}
</code></pre>
<!-- /wp:code -->

<!-- wp:image {"id":270,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/11/图片-1.png" alt="" class="wp-image-270" /><figcaption>运行后截图</figcaption></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date><![CDATA[2021-11-02 00:36:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-01 16:36:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-02 00:36:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-01 16:36:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-wait-waitstatus-wifexitedstatus-exit]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[关于Linux下软中断通信子进程不输出（接收不到信号问题）]]></title>
		<link>https://blog.zhuanjie.ltd/2021/11/05/linux-ruanzhongduan-problem/</link>
		<pubDate>Thu, 04 Nov 2021 18:38:09 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>软中断通信的一题：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>编写程序：用<code>fork( )</code>创建两个子进程，再用系统调用<code>signal( )</code>让父进程捕捉键盘上来的中断信号(即按^c键)；捕捉到中断信号后，父进程用系统调用<code>kill( )</code>向两个子进程发出信号，子进程捕捉到信号后分别输出下列信息后终止：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Child process1 is killed by parent!
Child process2 is killed by parent!</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>父进程等待两个子进程终止后，输出如下的信息后终止：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Parent process is killed!</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>编译运行后发现如果不在父进程添加<code>sleep()</code>就会导致子进程无法输出：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>我用输出不同数字夹在进程通信的代码周围：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;unistd.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;signal.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/wait.h&gt;

int flag_signal=1;
void int_func(int sig){
    flag_signal=0;
}

int main (){
    int pid1 = fork();
    if (pid1 &lt; 0) {
        printf("Error in fork!");
    } else if (pid1 == 0) {
        <strong>printf("4\n");
        signal(SIGUSR1,int_func);
        printf("5\n");</strong>
        while(flag_signal==1){sleep(1);}
        printf("Child progress 1 is killed by parent!\n");
        exit(0);
    } else {
        int pid2 = fork();
        if (pid2 &lt; 0) {
            printf("Error in fork!");
        } else if (pid2 == 0) {
            <strong>printf("6\n");
            signal(SIGUSR2,int_func);
            printf("7\n");</strong>
            while(flag_signal==1){sleep(1);}
            printf("Child progress 2 is killed by parent!\n");
            exit(0);
        } else {
            sleep(1);
            <strong>printf("1\n");
            kill(pid1,SIGUSR1);
            printf("2\n");
            kill(pid2,SIGUSR2);
            printf("3\n");</strong>
            wait(0);
            wait(0);
            printf("Parent progress is killed!\n");
        }
    }
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>此时输出是：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>randall@ubuntu:~/Desktop$ gcc helloword.c
randall@ubuntu:~/Desktop$ ./a.out
4
5
6
7
1
2
3
Child progress 1 is killed by parent!
Child progress 2 is killed by parent!
Parent progress is killed!
randall@ubuntu:~/Desktop$ </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>去掉<code>sleep(1)</code>;后输出变成了</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>randall@ubuntu:~/Desktop$ gcc helloword.c
randall@ubuntu:~/Desktop$ ./a.out
1
4
2
3
Parent progress is killed!
randall@ubuntu:~/Desktop$ </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>可以看出没有加<code>sleep()</code>的时候根本没有运行到子进程</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>原因：没有使主线程<code>sleep</code>会导致主线程优先运行，主线程运行完了kill指令，发送信号给了子线程，但是子线程没有加载到<code>signal</code>命令，把主线程丢给子线程的信号抛弃，最后子线程随着主线程关闭关闭导致不输出子线程的数据。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date><![CDATA[2021-11-05 02:38:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-04 18:38:09]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-05 02:38:09]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-04 18:38:09]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-ruanzhongduan-problem]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[python中的字典排序]]></title>
		<link>https://blog.zhuanjie.ltd/2021/11/09/python_dict_sort/</link>
		<pubDate>Tue, 09 Nov 2021 10:54:10 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=278</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>字典是一个无序的数据结构，一般都不对其进行排序的。但是要想对字典进行排序，是可以通过<code>sorted()</code>函数进行操作。首先声明注意一点字典中的值需要为同一种数据类型；比如在本文中的值都是字符串类型。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code># 先定义一个字典
sys = {'name': '张三',
       'age': '十八',
       'gender': '男'}

#  单独打印出排序后的key值
new_sys = sorted(sys)
print(new_sys)

new_sys = sorted(sys.keys())
print(new_sys)

# 根据key的升序排列，把key value都打印出来
new_sys1 = sorted(sys.items(), key=lambda d: d&#091;0], reverse=False)
print(new_sys1)

new_sys1 = sorted(sys.items(), reverse=False)
print(new_sys1)

# 单独打印出排序后的value值
new_sys1 = sorted(sys.values())
print(new_sys1)

# 打印出根据value排序后的键值对的具体值
new_sys2 = sorted(sys.items(),  key=lambda d: d&#091;1], reverse=False)
print(new_sys2)
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>输出为：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&#091;'age', 'gender', 'name']
&#091;'age', 'gender', 'name']
&#091;('age', '十八'), ('gender', '男'), ('name', '张三')]
&#091;('age', '十八'), ('gender', '男'), ('name', '张三')]
&#091;'man', '十八', '张三'] 
&#091;('gender', 'man'), ('age', '十八'), ('name', '张三')]</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><code>new_sys = sorted(sys)</code>将字典直接传入到<code>sorted</code>函数中 ，<code>sorted</code>函数会默认根据字典的键k对字典进行排序，同时只取字典的键k的内容，并以列表的形式返回</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>new_sys1 = sorted(sys.items(), key=lambda d: d&#091;0], reverse=False)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><code>sys.items()</code>这段代码，在打印输出后，会显示如下结果：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>dict_items(&#091;(‘name’, ‘张三’), (‘age’, ‘十八’), (‘gender’, ‘man’)])

// 将原来的字典中的键值对，分别搜存入到一个元组中–&gt;(key,value)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><code>key=lambda</code> <code>d: d[0] </code>是一个匿名函数；<br>其中：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>d == (‘name’, ‘张三’) 或 (‘age’, ‘十八’)或(‘gender’, ‘man’)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><code>d[0]</code>是获取每个元组中的第一个元素，就是原<code>sys</code>字典中的<code>key</code>；并将匿名函数的返回值返回给<code>sorted</code>函数的key参数</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>reverse=False </code>排序默认是按照升序排列的，也可以改为<code>True</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>sorted(sys.values())</code> <code>sorted</code>函数默认是根据键<code>key</code>排序的，所以想要根据值<code>value</code>排序，就需要在<code>sys</code>后面使用<code>values()</code>，获取字典的<code>value</code>值</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>new_sys2 = sorted(sys.items(), key=lambda d: d&#091;1], reverse=False)</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>d == (‘name’, ‘张三’) 或 (‘age’, ‘十八’)或(‘gender’, ‘man’)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><code>d[1]</code>是获取每个元组中的第二个元素，就是原<code>sys</code>字典中的<code>value</code>；并将匿名函数的返回值返回给<code>sorted</code>函数的<code>key</code>参数</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date><![CDATA[2021-11-09 18:54:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-09 10:54:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-09 18:54:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-09 10:54:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python_dict_sort]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Linux下C语言进程间通信——创建共享区]]></title>
		<link>https://blog.zhuanjie.ltd/2021/11/11/linux-c-communcation/</link>
		<pubDate>Thu, 11 Nov 2021 15:49:19 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:paragraph -->
<p>与信号量一样，在Linux中也提供了一组函数接口用于使用共享内存，而且使用共享共存的接口还与信号量的非常相似，而且比使用信号量的接口来得简单。它们声明在头文件 sys/shm.h 中。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>shmget()函数</strong></h2>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">int shmget(key_t key, size_t size, int shmflg);</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>第一个参数为共享内存段命名，需要提供一个参数key（非0整数），shmget()函数成功时返回一个与key相关的共享内存标识符（非负整数），用于后续的共享内存函数。调用<strong>失败返回-1</strong>。设置<strong>参数为IPC_PRIVATE时，每次都创建新的共享区</strong>，通常在父进程创建，子进程获取共享区内容。参数为数值时候，会创建固定共享区。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第二个参数，size以字节为单位指定需要共享的内存容量</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第三个参数，shmflg是权限标志，它的作用与open函数的mode参数一样，如果要想在key标识的共享内存不存在时，创建它的话，可以与IPC_CREAT做或操作。共享内存的权限标志与文件的读写权限一样，举例来说，0644,它表示允许一个进程创建的共享内存被内存创建者所拥有的进程向共享内存读取和写入数据，同时其他用户创建的进程只能读取共享内存。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>-rw------- (600)    只有拥有者有读写权限。
-rw-r--r-- (644)    只有拥有者有读写权限；而属组用户和其他用户只有读权限。
-rwx------ (700)    只有拥有者有读、写、执行权限。
-rwxr-xr-x (755)    拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。
-rwx--x--x (711)    拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。
-rw-rw-rw- (666)    所有用户都有文件读、写权限。
-rwxrwxrwx (777)    所有用户都有读、写、执行权限。</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2><strong>shmat()函数 &nbsp; &nbsp;-- at：attach</strong></h2>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">void *shmat(int shm_id, const void *shm_addr, int shmflg);</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>第一次创建完共享内存时，它还不能被任何进程访问，shmat()函数的作用就是用来启动对该共享内存的访问，并把共享内存连接到当前进程的地址空间。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第一个参数，shm_id是由shmget()函数返回的共享内存标识。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第二个参数，shm_addr指定共享内存连接到当前进程中的地址位置，通常为空，表示让系统来选择共享内存的地址。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第三个参数，shm_flg是一组标志位，通常为0。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>调用成功时返回一个指向共享内存第一个字节的指针，如果调用失败返回-1。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>shmdt()函数 &nbsp; &nbsp;-- dt：detach</strong></h2>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">int shmdt(const void *shmaddr);</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>该函数用于将共享内存从当前进程中分离。注意，将共享内存分离并不是删除它，只是使该共享内存对当前进程不再可用。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>参数shmaddr是shmat()函数返回的地址指针，调用成功时返回0，失败时返回-1。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>shmctl()函数 &nbsp; &nbsp;-- ctl：control</strong></h2>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">int shmctl(int shm_id, int command, struct shmid_ds *buf);</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>与信号量的semctl()函数一样，用来控制共享内存。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第一个参数，shm_id是shmget()函数返回的共享内存标识符。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第二个参数，command是要采取的操作，它可以取下面的三个值 ：</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>IPC_STAT：把shmid_ds结构中的数据设置为共享内存的当前关联值，即用共享内存的当前关联值覆盖shmid_ds的值。</li><li>IPC_SET：如果进程有足够的权限，就把共享内存的当前关联值设置为shmid_ds结构中给出的值</li><li>IPC_RMID：删除共享内存段</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>第三个参数，buf是一个结构指针，它指向共享内存模式和访问权限的结构。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>例题</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>题目1：父子进程之间数据交流</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>创建子进程输入字符串到共享区，在子进程输入end后进入父进程输出共享区内容</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>代码：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/shm.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

int main(){
    int shmid;
    char *p, *q;
    char buffer&#091;BUFSIZ];
    int pid;
    // 创建共享区
    shmid=shmget(<strong>IPC_PRIVATE</strong>,128,IPC_CREAT | 0666); // 成功创建值&gt;0
    if(shmid &lt;0){ // 创建失败为-1
        printf("创建共享内存失败\n");
        return -1;
    }
    printf("创建共享内存成功 shmid=%d\n",shmid);
    pid=fork();//创建进程pid
    if(pid==0){//这是子进程
        // 绑定地址p到共享区
        p=(char *)shmat(shmid,0,0);
        if(p==NULL){
            printf("子进程映射失败\n");
            return -2;
        }
        while(1){
            printf("子进程：写入信息：");
            fgets(buffer,128,stdin);
            strcat(p,buffer); 
            if(strncmp(buffer,"end",3)==0){
                break;
            }
        }
        shmdt(p);
        exit(0);
    }else if(pid &gt; 0){// 父进程
        wait(0);
        q=(char *)shmat(shmid,0,0);
        if(q==NULL){
            printf("父进程映射失败\n");
            return -3;
        }
        printf("父进程：读取数据：\n%s",q);
        shmdt(q);
    }
    // 删除共享区
    shmctl(shmid,IPC_RMID,NULL);
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>输出：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>randall@ubuntu:~/Desktop/experiment5$ ./E5-3-2.out
创建共享内存成功 shmid=29
子进程：写入信息：1
子进程：写入信息：2
子进程：写入信息：3
子进程：写入信息：randall
子进程：写入信息：end
父进程：读取数据：
1
2
3
randall
end
randall@ubuntu:~/Desktop/experiment5$ </code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>题目2：两个程序之间数据交流</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在程序shmsnd.c创建共享区然后输入字符串到共享区，再在shmrcv.c输出共享区内容</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>代码：</h4>
<!-- /wp:heading -->

<!-- wp:heading {"level":5} -->
<h5><strong>shmsnd.c</strong></h5>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/shm.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

int main(){
    int shmid;
    char *p;
    char buffer&#091;BUFSIZ];
    shmid=shmget(<strong>1234</strong>,BUFSIZ,IPC_CREAT | 0666);
    if(shmid &lt;0){
        printf("创建共享内存失败\n");
        return -1;
    }
    printf("创建共享内存成功 shmid=%d\n",shmid);
    p=(char *)shmat(shmid,0,0);
    if(p==NULL){
        printf("shmsnd映射失败\n");
        return -2;
    }
    while(1){
        printf("写入信息：");
        fgets(buffer,BUFSIZ,stdin);
        strcat(p,buffer); 
        if(strncmp(buffer,"end",3)==0){
            break;
        }
    }
    shmdt(p);
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":5} -->
<h5>shmrcv.c</h5>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>
#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/shm.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

int main(){
    int shmid;
    char *q;
    shmid=shmget(1234,BUFSIZ,IPC_CREAT | 0644);
    if(shmid &lt;0){
        printf("创建共享内存失败\n");
        return -1;
    }
    printf("创建共享内存成功 shmid=%d\n",shmid);
    q=(char *)shmat(shmid,NULL,0);
    if(q==NULL){
        printf("shmrcv映射失败\n");
        return -3;
    }
    printf("读取共享区数据:\n%s",q);
    shmdt(q);
    shmctl(shmid,IPC_RMID,NULL);
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>输出：</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>randall@ubuntu:~/Desktop/experiment5$ ./shmsnd.out
写入信息：1 2 3 4 5
写入信息：randall
写入信息：end
randall@ubuntu:~/Desktop/experiment5$ ./shmrcv.out
读取共享区数据:
1 2 3 4 5
randall
end
randall@ubuntu:~/Desktop/experiment5$ </code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date><![CDATA[2021-11-11 23:49:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-11 15:49:19]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-11 23:49:19]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-11 15:49:19]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-c-communcation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f"><![CDATA[操作系统]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[59]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Python tqdm进度条]]></title>
		<link>https://blog.zhuanjie.ltd/2021/11/12/python-tqdm/</link>
		<pubDate>Fri, 12 Nov 2021 10:20:05 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=299</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>tqdm包</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>from tqdm import tqdm</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>创建tqdm</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>pbar = tqdm(range(1000))  # 创建进度条
for i in pbar:  # 在进度条中运行
    continue</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>参数解释</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>iterable=None,     可迭代的对象, 在手动更新时不需要进行设置
desc=None,      传入str类型，作为进度条标题（类似于说明）
total=None,     预期的迭代次数（即进度条100的时候迭代的次数）
leave=True,     bool值, 迭代完成后是否保留进度条
file=None,      输出指向位置, 默认是终端, 一般不需要设置
ncols=None,     调整进度条宽度, 默认是根据环境自动调节长度, 如果设置为0, 就没有进度条, 只有输出的信息
mininterval=0.1,    最小的更新间隔
maxinterval=10.0,   最大更新间隔
miniters=None, 
ascii=None, 
unit='it',    描述处理项目的文字, 默认是'it', 例如: 100 it/s, 处理照片的话设置为'img' ,则为 100 img/s
unit_scale=False,    自动根据国际标准进行项目处理速度单位的换算, 例如 100000 it/s &gt;&gt; 100k it/s
dynamic_ncols=False, 
smoothing=0.3,
bar_format=None, 
initial=0, 
position=None, 
postfix=dict             以字典形式传入详细信息</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>示例代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>from time import sleep
from tqdm import tqdm


for i in tqdm(range(1000)):
    sleep(0.01)
    # print(i)

pbar = tqdm(range(1000))  # 进度条
for i in pbar:
    err = 'abc'
    pbar.set_description("Reconstruction loss: %s" % err)

dict1 = {"a": 123, "b": 456}
for i in tqdm(range(1000), total=1000, desc="进度条", ncols=100, postfix=dict1, mininterval=0.3):
    sleep(0.01)

with tqdm(total=21, desc='Example', leave=True, ncols=100, unit='B', unit_scale=True) as pbar1:
    for i in range(7):
        sleep(0.5)  # 发呆0.5秒
        pbar1.update(3)  # 更新发呆进度，每次更新3个迭代次数</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>输出：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>C:\Users\zhuan\PycharmProjects\test\venv\Scripts\python.exe C:/Users/zhuan/PycharmProjects/test/进度条.py
100%|██████████| 1000/1000 &#091;00:15&lt;00:00, 63.72it/s]
Reconstruction loss: abc: 100%|██████████| 1000/1000 &#091;00:00&lt;00:00, 3422.53it/s]
进度条: 100%|█████████████████████████████████████| 1000/1000 &#091;00:15&lt;00:00, 63.53it/s, a=123, b=456]
Example: 100%|████████████████████████████████████████████████████| 21.0/21.0 &#091;00:03&lt;00:00, 5.89B/s]</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date><![CDATA[2021-11-12 18:20:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-12 10:20:05]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-12 18:20:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-12 10:20:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-tqdm]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Python大作业——北印导航系统]]></title>
		<link>https://blog.zhuanjie.ltd/2021/11/28/python/</link>
		<pubDate>Sun, 28 Nov 2021 11:03:17 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>项目成品下载</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a rel="noreferrer noopener" href="http://startpage.zhuanjie.ltd/download/bigcmap.exe" target="_blank">链接1（直接下载）</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a rel="noreferrer noopener" href="http://gitlab.zhuanjie.ltd/Randall/bigc-map/-/releases" target="_blank">链接2（发布 · Randall Chu / 北印校园导航 · GitLab</a><a href="http://gitlab.zhuanjie.ltd/Randall/bigc-map/-/releases" target="_blank" rel="noreferrer noopener">)</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>简介</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>针对新生对校园了解的不足，帮助新生对校园中的各建筑有更加多方面的了解。同时可以对于校园工作人员优化校园工具的搬运选择最优的运输路径，提高运输的效率。通过对dijkstra算法进行编写，实现从一个顶点到其余各顶点的最短路径算法，解决的有向图中最短路径问题。主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止，是一种广度优先的搜索方法。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>程序的数据和地图利用json.dumps方法编码为json文件的方式放在云服务器上，在运行代码的时候利用json.load方法访问服务器端数据。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>import os
import json
import tkinter
import turtle
import urllib
import urllib.request
from collections import defaultdict
from heapq import heappop, heappush
from math import sqrt
from tkinter import *
from tkinter.ttk import Combobox
from urllib.request import urlretrieve


# 从点str1移动到str2
def move(str1, str2):
    x = point&#091;str1]&#091;0] - 953 / 2
    y = 759 / 2 - point&#091;str1]&#091;1]
    a = point&#091;str2]&#091;0] - 953 / 2
    b = 759 / 2 - point&#091;str2]&#091;1]
    turtle.up()
    turtle.goto(x, y)
    turtle.down()
    turtle.goto(a, b)
    turtle.up()


# 判断两点的距离
def distence(str1, str2, paramein, pointin):
    if &#091;str1, str2] in paramein or &#091;str2, str1] in paramein:
        return sqrt((pointin&#091;str1]&#091;1] - pointin&#091;str2]&#091;1]) ** 2 + (pointin&#091;str1]&#091;0] - pointin&#091;str2]&#091;0]) ** 2)
    elif pointin&#091;str1]&#091;0] == pointin&#091;str2]&#091;0]:
        return abs(pointin&#091;str1]&#091;1] - pointin&#091;str2]&#091;1])
    elif pointin&#091;str1]&#091;1] == pointin&#091;str2]&#091;1]:
        return abs(pointin&#091;str1]&#091;0] - pointin&#091;str2]&#091;0])
    else:
        return 1E100


# 优化后Dijkstra算法
def dijkstra(edges, t, f):
    g = defaultdict(list)
    for l, r, c in edges:
        g&#091;l].append((c, r))
    q, seen, mins = &#091;(0, f, &#091;])], set(), {f: 0}
    while q:
        (cost, v1, path) = heappop(q)
        if v1 not in seen:
            seen.add(v1)
            path = &#091;v1] + path
            if v1 == t:
                return cost, path
            for c, v2 in g.get(v1, ()):
                if v2 in seen:
                    continue
                prev = mins.get(v2, None)
                next = cost + c
                if prev is None or next &lt; prev:
                    mins&#091;v2] = next
                    heappush(q, (next, v2, path))
    return float("inf"), &#091;]


def draw(value):
    # 初始化地图
    turtle.setup(width=953, height=759, startx=50, starty=30)
    turtle.clear()
    turtle.title("导航路线")
    # 图片URL
    url = '<a href="http://startpage.zhuanjie.ltd/json/bigc.png" target="_blank" rel="noreferrer noopener">http://startpage.zhuanjie.ltd/json/bigc.png</a>'
    filename = os.path.basename(url)
    # 判断文件是否存在，如果不存在则下载
    if not os.path.isfile(os.path.join("./", filename)):
        try:
            print("地图下载中：")
            urlretrieve(url, './bigc.png', schedule)
        except os.error.HTTPError as e:
            print(e)
            print('\n' + url + '下载失败！' + '\n')
            tkinter.messagebox.showinfo('提示', '下载地图失败，请重试！')
        else:
            print("\n地图下载完成！")
    else:
        print("地图已经存在！")
    turtle.bgpic("bigc.png")
    turtle.pensize(15)
    turtle.color("#ff0000")
    turtle.hideturtle()
    for i in range(len(value&#091;1]) - 1):
        move(value&#091;1]&#091;i], value&#091;1]&#091;i + 1])
    turtle.mainloop()
    # turtle.bye()


# 进度条迭代
def progressbar(cur, total=100):
    percent = '{:.2%}'.format(cur / total)
    sys.stdout.write('\r')
    sys.stdout.write("&#091;%-100s] %s" % ('=' * int(cur), percent))
    sys.stdout.flush()


# 进度条
def schedule(blocknum, blocksize, totalsize):
    """
    blocknum:当前已经下载的块
    blocksize:每次传输的块大小
    totalsize:网页文件总大小
    """
    if totalsize == 0:
        percent = 0
    else:
        percent = blocknum * blocksize / totalsize
    if percent &gt; 1.0:
        percent = 1.0
    percent = percent * 100
    progressbar(percent)


# 初始化
def init():
    # 特殊连线点
    parame = get_record('<a href="http://startpage.zhuanjie.ltd/json/parame.json" target="_blank" rel="noreferrer noopener">http://startpage.zhuanjie.ltd/json/parame.json</a>')
    # 各个点在地图上的坐标
    pointin = get_record('<a href="http://startpage.zhuanjie.ltd/json/point.json" target="_blank" rel="noreferrer noopener">http://startpage.zhuanjie.ltd/json/point.json</a>')
    # 复选框的值
    valuesin = get_record('<a href="http://startpage.zhuanjie.ltd/json/values.json" target="_blank" rel="noreferrer noopener">http://startpage.zhuanjie.ltd/json/values.json</a>')
    # 根据两点距离将相邻的两个点存入matrix
    matrix = &#091;]
    for i in pointin:
        for j in pointin:
            if distence(i, j, parame, pointin) != 0 and distence(i, j, parame, pointin) != 1E100:
                matrix.append((i, j, distence(i, j, parame, pointin)))
    return pointin, valuesin, matrix


# 点击按钮运行部分
def calc(a, b):
    x = dijkstra(listview, a, b)
    print(x)
    try:
        draw(x)
    except turtle.Terminator:
        draw(x)


# 将json文件转化为变量
def get_record(url):
    resp = urllib.request.urlopen(url)
    ele_json = json.loads(resp.read())
    return ele_json


print("开始初始化")
point, values, listview = init()
root = Tk()
root.title('北京印刷学院导航系统')
root.geometry('320x50')
var1 = StringVar()
var2 = StringVar()
comb1 = Combobox(root, textvariable=var1, values=values, state='readonly')
comb2 = Combobox(root, textvariable=var2, values=values, state='readonly')
comb1.place(relx=0.1, rely=0.25, relwidth=0.2)
comb2.place(relx=0.4, rely=0.25, relwidth=0.2)
btn = Button(root, text="导航", command=lambda: calc(comb1.get(), comb2.get()))
btn.place(relx=0.7, rely=0.25, relwidth=0.2)
root.mainloop()
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>项目截图</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":360,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/11/image.png" alt="" class="wp-image-360" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":361,"sizeSlug":"full","linkDestination":"none","className":"is-style-default"} -->
<figure class="wp-block-image size-full is-style-default"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/11/image-1.png" alt="" class="wp-image-361" /><figcaption>地图</figcaption></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date><![CDATA[2021-11-28 19:03:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-28 11:03:17]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-28 19:03:17]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-28 11:03:17]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[309]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[计算机网络小学期——UDP服务器的设计]]></title>
		<link>https://blog.zhuanjie.ltd/2021/12/31/computer_net_udp_server/</link>
		<pubDate>Fri, 31 Dec 2021 11:51:43 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:paragraph -->
<p>成品及源码下载链接：<a href="https://github.com/Zhuanjier/udp-server/releases/tag/v1.0">Release 可执行程序 · Zhuanjier/udp-server (github.com)</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="要求">要求</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>        UDP是TCP/IP协议族为传输层设计的两个协议之一，是一种无连接的，不可靠的协议。由于UDP采取了无连接的方式，因此协议简单，在一些特定的应用中协议运行效率高。UDP适合一些实时的应用，如IP电话、视频会议，它们要求源主机以恒定的速率发送数据，并且在网络出现拥塞时，可以丢失一些数据，但是延迟不能太大。基于这些特点，流式多媒体通信、多播等应用在传输层采用的就是UDP协议。编写一UDP服务器程序，流畅地完成视频文件地传输，要能对多个客户端进行管理。需要通过UDP模拟多个客户端连接验证的情况。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="设计思路">设计思路</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3 id="工具">工具</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>a) 编译环境：Python3.10<br>b) 编译工具：PyCharm<br>c) 打包工具：pyinstaller</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="调用函数库">调用函数库</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>a) time：处理时间的标准库，提供获取系统时间并格式化输出功能<br>b) socket：帮助在网络上的两个程序之间建立信息通道<br>c) queue：提供队列操作的模块，用于多个线程之间的数据共享<br>d) basename：去掉目录路径，单独返回文件名</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3 id="解决问题思路">解决问题思路</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本程序由于需要在网络上搭建UDP服务器来传输信息、文件，则必须要定义一个合适的确认连接以及检验文件完成性的功能。<br>以TCP传输模式为样例，本程序的服务器端和客户端采用了类似TCP的三次握手确认连接和四次挥手断开连接。<br>本程序采用类似FTP传输模式，利用6000端口来传送控制信息以及一些普通消息，利用7777端口来传输文件信息，利用7778端口来接收ack数据包确认信息。<br>服务器端主进程开启接受消息线程，该线程负责接受捕获到的6000端口的UDP数据包，并将判断数据是否为连接、断开等命令数据。<br>如接收到连接指令则将信息发送方的套接字保存创建新线程负责处理该线程发送来的信息并且创建新管道方便与之通信。<br>如果是断开连接命令，则在“四次挥手”结束后结束该套接字对应的线程，释放资源。如果是其他命令，则将命令存放到信息来的套接字对应的管道中。<br>管道另一头接受到信息后开始处理对应信息。处理不同套接字的消息的进程在从套接字中取到消息后开始执行程序。如果将信息通过默认命令消息处理函数处理后返回不同对应的信息，如果服务器需要执行聊天操作，则会创建新线程调用循环发送函数给该套接字发送消息。如果服务器需要执行发送文件操作则需等待客户机发送所需要的文件目录后创建两个新线程一个负责在7777端口发送文件，另一个是负责在7778端口接收确认包。<br>客户端程序只需要获取服务器ip后主动连接服务器。在服务器相应后显示连接成功。同时启动两个线程，一个负责发送数据包，另一个负责接收数据包并处理。<br>处理数据时，如果为传输文件确认数据包，则阻塞发送数据包的线程，并把需要的文件路径发送至服务器。然后通过对接收到服务器7777端口发送来的数据进行整理，返回给服务器7778端口确认包。全部确认后文件传输完成并唤醒发送数据进程。<br>如果发送的数据为exit（断开连接命令），将状态变量改变，使得发送和接受线程全部停止，主进程等待两个线程结束后结束运行。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="流程图">流程图</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":372,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/12/image-745x1024.png" alt="" class="wp-image-372"/><figcaption class="wp-element-caption">服务器端流程图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:image {"id":373,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/12/image-1-630x1024.png" alt="" class="wp-image-373"/><figcaption class="wp-element-caption">客户端流程图</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2 id="详细设计-利用python代码实现">详细设计(利用Python代码实现)</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3 id="函数列表">函数列表</h3>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>函数名</td><td>参数</td><td>描述</td></tr><tr><td>sendto</td><td>传输文件名称,客户端套接字</td><td>用于传输文件</td></tr><tr><td>recv_ack</td><td>无</td><td>确认客户端返回的确认信息</td></tr><tr><td>sendOne</td><td>消息,发送到的客户机的套接字</td><td>整合发送一条udp消息到指定套接字</td></tr><tr><td>circlesend</td><td>发送到的客户机的套接字</td><td>循环发送消息到客户端（基于聊天功能）</td></tr><tr><td>getfire</td><td>文件路径,发送到的客户机的套接字</td><td>获取文件函数，用于启动发送文件进程和确认客户端返回的确认进程</td></tr><tr><td>mafun</td><td>消息,发送到的客户机的套接字</td><td>默认命令消息处理函数</td></tr><tr><td>diviceConnect</td><td>发送到的客户机的套接字</td><td>连接到服务器后的设备所启动线程调用的函数</td></tr><tr><td>receive</td><td>无</td><td>接受消息并将消息送到管道</td></tr></tbody></table><figcaption class="wp-element-caption">服务器端函数列表</figcaption></figure>
<!-- /wp:table -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><tbody><tr><td>函数名</td><td>参数</td><td>描述</td></tr><tr><td>getFile</td><td>文件名</td><td>获取文件路径，名称</td></tr><tr><td>receive</td><td>无</td><td>接受消息</td></tr><tr><td>circlesend</td><td>无</td><td>发送消息</td></tr></tbody></table><figcaption class="wp-element-caption">客户端函数列表</figcaption></figure>
<!-- /wp:table -->

<!-- wp:heading -->
<h2 id="主要函数代码">主要函数代码</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>服务器端主要函数</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code># 文件传输 占用端口7777
# 三级子进程（父进程：设备对应进程）
# 变量：(传输文件名称,客户端套接字)
def sendto(fn_path, addr):
    # 读取文件全部内容
    with open(fn_path, 'rb') as fp:
        content = fp.read()
    # 获取文件大小，做好分块传输的准备
    fn_size = len(content)
    for start in range(fn_size // BUFFER_SIZE + 1):
        positions.append(start * BUFFER_SIZE)
    # 设置事件，可以启动用来接收确认信息的线程了
    e.set()
    # 窗口套接字，设置发送缓冲区大小
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_SNDBUF, BUFFER_SIZE)
    # 发送文件数据，直到所有分块都收到确认，否则就不停地循环发送
    while positions:
        for pos in positions:
            sock.sendto(f'{pos}_'.encode() + content&#91;pos:pos + BUFFER_SIZE], (addr&#91;0], 7777))
        time.sleep(0.1)
    # 通知，发送完成
    while file_name:
        sock.sendto(b'over_' + file_name&#91;0], (addr&#91;0], 7777))
    # 关闭套接字
    sock.close()
# 确认客户端返回的确认信息 占用端口7778
# 三级子进程（父进程：设备对应进程）
# 变量：空
def recv_ack():
    # 创建套接字，绑定本地端口，用来接收对方的确认信息
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.bind((IP, 7778))
    # 如果所有分块都确认过，就结束循环
    while positions:
        # 预期收到的确认包格式为1234_ack
        data, _ = sock.recvfrom(1024)
        pos = int(data.split(b'_')&#91;0])
        if pos in positions:
            positions.remove(pos)
    # 确认对方收到文件名，并已接收全部数据
    while file_name:
        data, _ = sock.recvfrom(1024)
        fn = data.split(b'_')&#91;0]
        if fn in file_name:
            file_name.remove(fn)
    sock.close()
# 整合发送一条udp消息
# 变量：(消息,发送到的客户机的套接字)
def sendOne(msg, addr):
    s.sendto(msg.encode(), addr)
# 循环发送消息到客户端（聊天功能）
# 变量：(发送到的客户机的套接字)
def circlesend(addr):
    global OCCUIPED
    while OCCUIPED:
        send_data = input("To" + str(addr) + ":")
        s.sendto(send_data.encode(), addr)
        if send_data == "exitchat":
            OCCUIPED = False
            break
# 获取文件函数，用于启动发送文件进程和确认客户端返回的确认进程
# 变量：(文件路径,发送到的客户机的套接字)
def getfire(datapath, addr):
    global fn_path, file_name
    fn_path = datapath
    file_name = &#91;f'{basename(fn_path)}'.encode()]
    t1 = threading.Thread(target=sendto, args=(fn_path, addr))
    t1.start()
    e.clear()
    e.wait()
    t2 = threading.Thread(target=recv_ack)
    t2.start()
    # 等待发送线程和接收确认线程都结束
    t2.join()
    t1.join()
# 默认命令消息处理函数
# 变量：(消息,发送到的客户机的套接字)
def mafun(message, addr):
    if message == "help":
        sendOne("\n1.返回当前服务器时间\n2.聊天\n3.文件传输\n4.关于\nexit——退出 help——帮助", addr)  # man——指令详情
    elif message == "1":
        ticks = time.time()
        sendOne("\n当前服务器时间戳为:" + str(ticks) + "\n当前服务器时间为" + str(time.asctime(time.localtime(ticks))), addr)
    elif message == "2":
        global OCCUIPED
        if OCCUIPED != "":
            return "聊天室搭建失败，聊天室被占用！"
        else:
            OCCUIPED = str(addr)
            tsend = threading.Thread(target=circlesend, args=(addr,))  # 开启发送消息线程
            tsend.start()
            sendOne("chatconfirm", addr)
    elif message == "3":
        sendOne("transferconfirm", addr)
        datapath = Pipe&#91;addr].get()
        getfire(datapath, addr)  # 调用获取文件函数
        print("文件传输完成")
    elif message == "4":
        sendOne("\n本程序是我的计算机网络小学期作业\n@author: 朱安杰 194020215", addr)
    else:
        sendOne("未知命令：" + message, addr)
def diviceConnect(addr):
    global OCCUIPED
    while state&#91;addr]:
        msg = Pipe&#91;addr].get()
        if OCCUIPED == str(addr):
            if msg == "exitchat":
                OCCUIPED = ""
                print("结束聊天")
                continue
            print(str(addr) + ":" + msg)
            continue
        mafun(msg, addr)
# 接受消息 持续监听6000端口 二级子进程（父进程：主进程（用户进程）；子进程：各个用户设备处理信息对应的进程）
# 接收到的消息分为两类：1.指令形消息2.内容形消息
# 指令形式消息：根据接受到的消息和判断已经存在的设备列表分配（删除）独立进程
# 内容形消息：根据套接字将消息发送给对应的进程（唤醒进程）
def receive():
    while True:
        data, addr = s.recvfrom(BUFFER_SIZE)  # 获取消息
        print("终端： %s:%s 数据： " % addr + str(data))  # 打印获取信息
        if data == b"tryconnect":  # 对信息进行分类处理
            ConnectedDivice.append(addr)
            print("设备：" + str(addr) + " 已被发现！")
            state&#91;addr] = True
            q = queue.Queue()  # 创建通信管道
            Pipe&#91;addr] = q  # 管道存入字典
            tcreate = threading.Thread(target=diviceConnect, args=(addr,))  # 发现设备后创建分配进程给设备
            tcreate.start()
            # 创建完成后返回连接成功确认
            s.sendto(b"connectconfirm", addr)
            s.sendto("输入help获取选项列表".encode(), addr)
        elif data == b"exit":
            s.sendto(b"exitconfirm", addr)
            s.sendto(b"over", addr)
        elif data == b"overconfirm":
            print("设备：" + str(addr) + " 已主动离线！")
            del state&#91;addr]  # 删除字典
            ConnectedDivice.remove(addr)  # 删除设备列表
        else:
            Pipe&#91;addr].put(data.decode())</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>客户端程序</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code># 获取文件路径，名称
# 变量(文件名)
def getFile(filename):
    filepath, tempfilename = os.path.split(filename)
    shotname, extension = os.path.splitext(tempfilename)
    return filepath, shotname, extension
# 接受消息 持续监听端口 二级子进程（父进程：主进程（用户进程））
def receive():
    global go
    while True:
        if go:
            break
        response, addred = s.recvfrom(1024 * 1024)
        if response == b"exitconfirm":
            responsee, addrede = s.recvfrom(1024 * 1024)
            if responsee == b"over":
                s.sendto("overconfirm".encode(), addr)
                print("--------断开服务器：%s:%s--------" % addr)
                s.close()
                go = True
                break
        elif response == b"chatconfirm":
            continue
        elif response == b"transferconfirm":
            print("--------文 件 传 输--------")
            getfirename = input('请输入想要获取的文件:')
            dst = input('请输入用来保存文件的目标位置:')
            s.sendto(getfirename.encode(), addr)
            BUFFER_SIZE = 1024 * 1024
            # 用来临时保存数据
            data = set()
            # 接收数据的Socket
            sock_recv = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            sock_recv.bind((IP, 7777))
            # 确认反馈地址
            ack_address = (IP, 7778)
            sock_ack = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            # 重复收包次数
            repeat = 1
            while True:
                buffer, _ = sock_recv.recvfrom(BUFFER_SIZE)
                # 全部接收完成,获取文件名
                if buffer.startswith(b'over_'):
                    fn = buffer&#91;5:].decode()
                    # 多确认几次文件传输结束,防止发送方丢包收不到确认
                    for i in range(5):
                        sock_ack.sendto(fn.encode() + b'_ack', ack_address)
                    break
                # 接收带编号的文件数据,临时保存,发送确认信息
                buffer = tuple(buffer.split(b'_', maxsplit=1))
                if buffer in data:
                    repeat = repeat + 1
                else:
                    data.add(buffer)
                sock_ack.sendto(buffer&#91;0] + b'_ack', ack_address)
            sock_recv.close()
            sock_ack.close()
            print(f'重复接收数据{repeat}次')
            data = sorted(data, key=lambda item: int(item&#91;0]))
            with open(rf'{dst}/{fn}', 'wb') as fp:
                for item in data:
                    fp.write(item&#91;1])
            print("传输完成")
            q.put(1)
        else:
            print("%s:%s：" % addr + str(response.decode()))
# 发送消息
def circlesend():
    while True:
        send_data = input()
        s.sendto(send_data.encode(), addr)
        if send_data == "3":
            q.get()
        if go:
            break</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2 id="运行结果">运行结果</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>打开服务器和客户端后执行不同功能如图</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":381,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2021/12/image-5.png" alt="" class="wp-image-381"/></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date><![CDATA[2021-12-31 19:51:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-31 11:51:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-13 18:57:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-13 10:57:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[computer_net_udp_server]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c"><![CDATA[计算机网络]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[131]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[单调栈的解释及应用]]></title>
		<link>https://blog.zhuanjie.ltd/2022/01/15/monotone_stack/</link>
		<pubDate>Fri, 14 Jan 2022 17:43:03 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=386</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>单调栈定义</h2>
<!-- /wp:heading -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph -->
<p>从名字上就听的出来，单调栈中存放的数据应该是有序的，所以单调栈也分为单调递增栈和单调递减栈</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>单调递增栈：单调递增栈就是从栈底到栈顶数据是从大到小<br>单调递减栈：单调递减栈就是从栈底到栈顶数据是从小到大</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>参考：<a href="https://blog.csdn.net/lucky52529/article/details/89155694">[数据结构]——单调栈_lucky52529的博客-CSDN博客_单调递增栈</a></p>
<!-- /wp:paragraph --></div>
<!-- /wp:group -->

<!-- wp:heading -->
<h2>定义简例</h2>
<!-- /wp:heading -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph -->
<p>假如有一个单调栈（单调递增）现有以下数字：7，3，5，6，10</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>7入栈时（栈空），7入栈，栈内：7</li><li>3入栈时（3比7小），3入栈，栈内：7，3</li><li>5入栈时（5比3大，比7小），3弹栈，5入栈，栈内：7，5</li><li>6入栈时（6比5大，比7小），5弹栈，6入栈，栈内：7，6</li><li>10入栈时（10比6大，比7大），6弹栈，7弹栈，栈内：10</li></ul>
<!-- /wp:list --></div>
<!-- /wp:group -->

<!-- wp:heading -->
<h2>伪代码</h2>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">定义数组或者栈;
for (遍历原始数据数组)
{
	if (栈空 || 栈顶元素大于等于当前比较元素)
	{
		入栈;
	}
	else
	{
		while (栈不为空 &amp;&amp; 栈顶元素小于当前元素)
		{
			栈顶元素出栈;
			更新结果;
		}
		当前数据入栈;
	}
}</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>应用</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>题目</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>小Q在周末的时候和他的小伙伴来到大城市逛街，一条步行街上有很多高楼，共有n座高楼排成一行。小Q从第一栋一直走到了最后一栋，小Q从来都没有见到这么多的楼，所以他想知道他在每栋楼的位置处能看到多少栋楼呢？（当前面的楼的高度大于等于后面的楼时，后面的楼将被挡住）</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>输入样例</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li> [5,3,8,3,2,5]</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>输出样例</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li> [3,3,5,4,4,4]</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>样例说明</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>当小Q处于位置3时，他可以向前看到位置2,1处的楼，向后看到位置4,6处的楼，加上第3栋楼，共可看到5栋楼。当小Q处于位置4时，他可以向前看到位置3处的楼，向后看到位置5,6处的楼，加上第4栋楼，共可看到4栋楼。</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>函数代码（利用动态数组ArrayList模拟栈）</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public static int&#091;] findBuilding (int&#091;] heights) {
		int&#091;] number = new int&#091;heights.length];
		ArrayList&lt;Integer&gt; LTR = new ArrayList&lt;Integer&gt;(); // 从大到小（从左往右从大到小）
		ArrayList&lt;Integer&gt; RTL = new ArrayList&lt;Integer&gt;(); // 从小到大（从右往左从大到小）
		for (int i = 0, j = number.length-1; i &lt; number.length; i++,j--) {
			// 每次i，j游标指向的是小Q所在的房子的左边的房子或者右边的房子在内的单调栈
			// 因为第一次循环的时候是最左边的房子和最右边的房子入栈，所以要先记录左右两边单调栈里的数
			// 且最后一次循环不出现问题，LYT单调栈到最右边的时候即不出现最右边的房子为某个房子左边的房子，RTL同理
			number&#091;i] += LTR.size();
			number&#091;j] += RTL.size();
			while (LTR.size()&gt;0 &amp;&amp; heights&#091;i]&gt;(int)LTR.get(LTR.size()-1)) {
				LTR.remove(LTR.size()-1); // LTR出栈
			}
			while (RTL.size()&gt;0 &amp;&amp; heights&#091;j]&gt;(int)RTL.get(RTL.size()-1)) {
				RTL.remove(RTL.size()-1); // RT出栈
			}
			LTR.add(heights&#091;i]); // LTR入栈
			RTL.add(heights&#091;j]); // RTL入栈
		}
		for (int i = 0; i &lt; number.length; i++) {
			number&#091;i] ++;
		}
		return number;
    }</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>更换栈类型函数代码为</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>public static int&#091;] findBuilding (int&#091;] heights) {
		int&#091;] number = new int&#091;heights.length];
		Stack&lt;Integer&gt; LTR = new Stack&lt;&gt;(); // 从大到小（从左往右从大到小）
		Stack&lt;Integer&gt; RTL = new Stack&lt;&gt;(); // 从小到大（从右往左从大到小）
		for (int i = 0, j = number.length-1; i &lt; number.length; i++,j--) {
			// 每次i，j游标指向的是小Q所在的房子的左边的房子或者右边的房子在内的单调栈
			// 因为第一次循环的时候是最左边的房子和最右边的房子入栈，所以要先记录左右两边单调栈里的数
			// 且最后一次循环不出现问题，LYT单调栈到最右边的时候即不出现最右边的房子为某个房子左边的房子，RTL同理
			number&#091;i] += LTR.size();
			number&#091;j] += RTL.size();
			while (!LTR.isEmpty() &amp;&amp; heights&#091;i]&gt;LTR.peek()) {
				LTR.pop(); // LTR出栈
			}
			while (!RTL.isEmpty() &amp;&amp; heights&#091;j]&gt;RTL.peek()) {
				RTL.pop(); // RT出栈
			}
			LTR.push(heights&#091;i]); // LTR入栈
			RTL.push(heights&#091;j]); // RTL入栈
		}
		for (int i = 0; i &lt; number.length; i++) {
			number&#091;i] ++;
		}
		return number;
    }</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>灵感来源</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include &lt;stdio.h&gt;
  
int main() {
    int i,n,j, x&#091;100001],LtoR&#091;100001],RtoL&#091;100001],sum&#091;100001];
    scanf("%d",&amp;n);
    for(i=0;i&lt;n;i++)
    	scanf("%d",&amp;x&#091;i]);
    int indl=0,indr=0;
    for(i=0,j=n-1;i&lt;n,j&gt;=0;i++,j--){
    	sum&#091;i]+=indl;
    	sum&#091;n-i-1]+=indr;
//从左往右遍历（从右往左看）
    	while(LtoR&#091;indl-1]&lt;=x&#091;i]&amp;&amp;indl&gt;0){
    		indl --;//出栈操作
		}
//从右往左遍历（从左往右看）
		while(RtoL&#091;indr-1]&lt;=x&#091;j]&amp;&amp;indr&gt;0){
    		indr --;//出栈操作
		}
    	LtoR&#091;indl]=x&#091;i];//入栈
    	indl ++;
    	RtoL&#091;indr]=x&#091;j];//入栈
    	indr ++;
	}
//注意加一
	for(i=0;i&lt;n-1;i++)
		printf("%d ",sum&#091;i]+1);
		printf("%d\n",sum&#091;n-1]+1);
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><a href="https://blog.csdn.net/Twinkle_sone/article/details/104593171">逛街【 腾讯2020校园招聘-后台&amp;综合-第一次笔试】（单调栈的应用）_Twinkle_sone的博客-CSDN博客</a></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>386</wp:post_id>
		<wp:post_date><![CDATA[2022-01-15 01:43:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-14 17:43:03]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-01-15 01:43:03]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-01-14 17:43:03]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[monotone_stack]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[44]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[数据结构——线性表]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/13/linearlist/</link>
		<pubDate>Sun, 13 Feb 2022 10:12:54 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=423</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>头文件LinearList.h</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// LinearList.h - 线性表
#include &lt;iostream&gt;
#include &lt;stdlib.h&gt;

#define MAXSIZE 10  // 定义静态链表的最大长度
#define SqListMaxSize 10 
#define SqListInitSize 10 

// 数据部分用int类型数据模拟

/*********************************************************************************************************************************
 * 数据类型一览
 * SqList 顺序表 静态分配 
 * SeqList 顺序表 动态分配 
 * LNode *, LinkList 单链表
 * DNode *, DLinklist 双链表
 * Node 静态链表（单个）
 * SLinkList 静态链表（长度为MAXSIZE）
 * 
 * 操作函数
 * int Length(L) 求表L长度函数 返回表长
 * int LengthWithoutFirstNode(L) 求不带头结点的单链表L长度函数 返回表长 
 * bool Empty(L) 判空函数  空返回1，非空返回0
 * bool EmptyWithoutFirstNode (L) 单链表不带头结点判空函数  空返回1，非空返回0
 * int PrintList(L) 按顺序输出表L里内容 输出成功返回0，表空无输出返回1 
 * int PrintListWithoutFirstNode(L) 按顺序输出无头节点单链表L里内容 输出成功返回0，表空无输出返回1
 * int InitList(L) 初始化表L 正常结束返回0，内存不够初始化失败返回1
 * int InitListWithoutFirstNode(L) 无头节点初始化单链表表L 正常结束返回0，内存不够初始化失败返回1
 * int IncreaseSize(L, len) 动态分配顺序表增加长度 正常结束返回0，len大小不合法返回1
 * int ListInsert(L, e) 在表L的末尾插入元素e 正常结束返回0，表满导致内存不够返回1
 * int ListInsert(L, e, i) 在表L的第i位插入元素e 正常结束返回0，变量i大小不合法返回1，表满导致内存不够返回2
 * int ListInsertWithoutFirstNode(L, e, i) 在不带头结点的单链表L的第i位插入元素e 正常结束返回0，变量i大小不合法返回1
 * int ListDelete(L, i) 删除表L的第i位元素 正常结束返回0，变量i大小不合法返回1
 * int ListDeleteWithoutFirstNode(L, i) 删除表L的第i位元素 正常结束返回0，变量i大小不合法返回1
 * int ListPop(L, i) 弹出表L的第i位 正常结束返回弹出数据，变量i大小不合法返回-1
 * int ListPopWithoutFirstNode(L, i) 弹出表L的第i位 正常结束返回弹出数据，变量i大小不合法返回-1
 * int GetElem(L, i) 按位查找表L的元素 返回查找到的元素值，变量i大小不合法返回-1
 * LNode *GetElem(L, i) 按位查找表L的结点 返回查找到的结点，变量i大小不合法返回NULL
 * LNode *GetElemWithoutFirstNode (L, i) 按位查找不带头结点的单链表L的结点 返回查找到的结点，变量i大小不合法返回NULL
 * DNode *GetElem(L, i) 按位查找表L的结点 返回查找到的结点，变量i大小不合法返回NULL
 * int LocateElem(L, e) 按值查找表L的元素 返回查找到的元素位置，无匹配值返回0
 * LNode *LocateElem(L, e) 按值查找表L的元素 返回查找到的元素位置，无匹配值返回NULL
 * DNode *LocateElem(L, e) 按值查找表L的元素 返回查找到的元素位置，无匹配值返回NULL
 * int InsertNextNode(p, e) 单链表中在指定结点后插入元素e 正常结束返回0，p结点不存在返回1，新结点创建失败返回2
 * int InsertNextDNode(p, s) 双链表中在结点p后插入结点s 正常结束返回0，结点不存在返回1
 * int InsertPriorNode(p, e) 单链表中在指定结点前插入元素e 正常结束返回0，p结点不存在返回1，新结点创建失败返回2
 * int DeleteNode(p) 删除单链表中指定结点p 正常结束返回0，结点p不存在返回1，结点p为链表最后结点则无法删除返回2
 * int DeleteDNode(p) 删除单链表中指定结点p 正常结束返回0，结点p不存在返回1
 * int DeleteNextDNode(p) 删除双链表中指定结点p的后继节点q 正常结束返回0，结点p不存在返回1，结点p为链表最后结点则无法删除返回2
 * LinkList List_TailInsert() 正向建立一个单链表 返回已经初始化好的单链表
 * LinkList List_TailInsertWithoutFirstNode() 正向建立一个单链表 返回已经初始化好的不带头结点的单链表
 * LinkList List_HeadInsert() 反向建立一个单链表 返回已经初始化好的单链表
 * LinkList List_HeadInsertWithoutFirstNode() 反向建立一个单链表 返回已经初始化好的不带头结点的单链表
 * DsetoryList(L) 删除表L，归还内存给系统 正常结束返回0 (双链表已完成)
 * int List_Reverse(L) 反转链表L 正常结束返回0
 * 
 *********************************************************************************************************************************/
 
// 顺序表 静态分配 
typedef struct SqList {
	int data&#091;SqListMaxSize];  // 利用静态数组存放数据 
	int length;  // 表示当前顺序表长度 
}SqList; 

// 顺序表 动态分配（伪动态，实则空间不够开创更大的一篇空间并且将之前的值赋值过去）
typedef struct SeqList {
	int *data;  // 指示动态分配数组的指针 
	int MaxSize;  // 顺序表的最大容量 
	int length;  // 顺序表的当前长度 
}SeqList; 

// 顺序表求表长 静态分配
int Length(SqList L){
	return L.length;
} 

// 顺序表求表长 动态分配
int Length(SeqList L){
	return L.length;
} 

// 顺序表判空 静态分配
bool Empty(SqList L){
	return L.length == 0;  // 返回1表示空，返回0表示非空 
}

// 顺序表判空 动态分配
bool Empty(SeqList L){
	return L.length == 0;  // 返回1表示空，返回0表示非空 
}

// 顺序表输出内容 静态分配
int PrintList(SqList L){
	if(Empty(L)){
		return 1;  // 表空则无需输出，返回1 
	}
	for(int i = 0; i &lt; L.length; i++){
		std::cout &lt;&lt; L.data&#091;i] &lt;&lt; " ";
	}
	std::cout &lt;&lt; std::endl;
	return 0;  // 输出成功完成后返回0 
} 

// 顺序表输出内容 动态分配
int PrintList(SeqList L){
	if(Empty(L)){
		return 1;  // 表空则无需输出，返回1 
	}
	for(int i = 0; i &lt; L.length; i++){
		std::cout &lt;&lt; L.data&#091;i] &lt;&lt; " ";
	}
	std::cout &lt;&lt; std::endl;
	return 0;  // 输出成功完成后返回0 
} 

// 顺序表初始化 静态分配 
int InitList(SqList &amp;L){
	L.length = 0;
	return 0;  // 正常结束返回0 
} 

// 顺序表初始化 动态分配
int InitList(SeqList &amp;L){
	L.data = (int *)malloc(SqListInitSize*sizeof(int));  // 初始大小为InitSize个ElemType类型的元素大小
	// 实现初始大小分配方式：malloc申请一整片连续的空间，返回初始地址，然后强制转换成ElemType类型指针 
	L.MaxSize = SqListInitSize;
	L.length = 0;
	return 0;  // 正常结束返回0 
} 

// 顺序表增加动态数组长度（本质开拓一片更大的内存空间，将之前的数据转存过去） 
// TODO:新建回收内存机制 
int IncreaseSize(SeqList &amp;L, int len){  // 新增加长度为len 
	if(len &lt; 1){
		return 1;  // 新增地址空间长度有误，返回1
	} 
	int *p = L.data;  // 创建一个指针指p向原数据地址 
	L.data = (int *)malloc((L.MaxSize+len)*sizeof(int));  // 再将L.data指向新开辟的更大的地址空间 
	/*ATT:这里malloc的内存大小要以表中MaxSize的数量加上len再乘以ElemType的大小*/
	for(int i = 0; i &lt; L.length; i++){  // 将数据迁移到新的地址 
		L.data&#091;i] = p&#091;i];
	}
	L.MaxSize += len;  // 将顺序表的最大长度增加len 
	free(p);  // 释放原始内存空间 
	return 0;  // 正常结束返回0
} 

// 顺序表默认插入操作 静态分配 插入末尾 
int ListInsert(SqList &amp;L, int e){
	if(L.length &gt;= SqListMaxSize){
		return 2;  // 线性表已满 
	}
	L.data&#091;L.length] = e;
	L.length++;
	return 0;  // 正常结束返回0
} 

// 顺序表插入操作 静态分配 
// 在顺序表L的第i位插入元素e 
// TODO:整合将部分数据向前、后移动操作 
int ListInsert(SqList &amp;L, int e, int i){
	if(i&lt;1||i&gt;L.length+1){
		return 1;  // 变量i大小不合法 
	}
	if(L.length &gt;= SqListMaxSize){
		return 2;  // 线性表已满 
	}
	for(int j = L.length; j &gt;= i; j--){
		L.data&#091;j] = L.data&#091;j-1];  // 将i及其后面的元素后移一位 
	}
	L.data&#091;i-1] = e;
	L.length++;
	return 0;  // 正常结束返回0
} 

// 顺序表默认插入操作 动态分配 插入末尾 
int ListInsert(SeqList &amp;L, int e){
	if(L.length &gt;= L.MaxSize){  // 线性表已满 
		int functionCode = IncreaseSize(L, SqListMaxSize); 
		if(functionCode!=0){
			return functionCode;
		} 
	}
	L.data&#091;L.length] = e;
	L.length++;
	return 0;  // 正常结束返回0
} 

// 顺序表插入操作 动态分配 
// 在顺序表L的第i位插入元素e 
int ListInsert(SeqList &amp;L, int e, int i){
	if(i&lt;1||i&gt;L.length+1){
		return 1;  // 变量i大小不合法 
	}
	if(L.length &gt;= L.MaxSize){  // 线性表已满 
		int functionCode = IncreaseSize(L, SqListMaxSize); 
		if(functionCode!=0){
			return functionCode;
		} 
	}
	for(int j = L.length; j &gt;= i; j--){  // 将i及其后面的元素后移一位 
		L.data&#091;j] = L.data&#091;j-1];
	}
	L.data&#091;i-1] = e;
	L.length++;
	return 0;  // 正常结束返回0
} 

// 顺序表删除操作 静态分配
int ListDelete(SqList &amp;L, int i){
	if(i&lt;1||i&gt;L.length+1){
		return 1;  // 变量i大小不合法 
	}
	for(int j = i; j&lt;L.length; j++){
		L.data&#091;j-1] = L.data&#091;j];  // 将i及其后面的元素前移一位 
	}
	L.length--;
	return 0;  // 正常结束返回0
}

// 顺序表删除操作 动态分配
int ListDelete(SeqList &amp;L, int i){
	if(i&lt;1||i&gt;L.length+1){
		return 1;  // 变量i大小不合法 
	}
	for(int j = i; j&lt;L.length; j++){
		L.data&#091;j-1] = L.data&#091;j];  // 将i及其后面的元素前移一位 
	}
	L.length--;
	return 0;  // 正常结束返回0
}

// 顺序表弹出操作 静态分配
int ListPop(SqList &amp;L, int i){
	if(i&lt;1||i&gt;L.length+1){
		return -1;  // 变量i大小不合法 
	}
	int out = L.data&#091;i-1]; 
	for(int j = i; j&lt;L.length; j++){
		L.data&#091;j-1] = L.data&#091;j];  // 将i及其后面的元素前移一位 
	}
	L.length--;
	return out;  // 正常结束返回弹出值 
}

// 顺序表弹出操作 动态分配
int ListPop(SeqList &amp;L, int i){
	if(i&lt;1||i&gt;L.length+1){
		return -1;  // 变量i大小不合法 
	}
	int out = L.data&#091;i-1]; 
	for(int j = i; j&lt;L.length; j++){
		L.data&#091;j-1] = L.data&#091;j];  // 将i及其后面的元素前移一位 
	}
	L.length--;
	return out;  // 正常结束返回弹出值 
}

// 顺序表按位查找 静态分配 
int GetElem(SqList L, int i){
	if(i&lt;1||i&gt;L.length+1){
		return -1;  // 变量i大小不合法 
	}
	return L.data&#091;i-1];
}

// 顺序表按位查找 动态分配 
int GetElem(SeqList L, int i){
	if(i&lt;1||i&gt;L.length+1){
		return -1;  // 变量i大小不合法 
	}
	return L.data&#091;i-1];
} 

// 顺序表按值查找 静态分配 
// TODO:1.完善查找代码，可返回数组等 2.整合比较代码为函数 
int LocateElem(SqList L, int e){
	for(int i = 0; i &lt; L.length; i++){
		if(L.data&#091;i]==e){  // 判断数据是否和给定的数据一致
		// 当数据为结构类型变量时，要依次比较其每一个分量 
			return i+1;
		}
	}
	return 0;  // 无匹配值返回0 
} 

// 顺序表按值查找 动态分配 
int LocateElem(SeqList L, int e){
	for(int i = 0; i &lt; L.length; i++){
		if(L.data&#091;i]==e){
			return i+1;
		}
	}
	return 0;  // 无匹配值返回0 
} 

// 删除顺序表 静态分配
int DsetoryList(SqList &amp;L){
    if(L.length == 0){
        return 0;  // 空表不需要释放 
    }
    return 0;  // 正常结束返回0 
}

// 删除顺序表 动态分配
int DsetoryList(SeqList &amp;L){
    if(L.length == 0){
        return 0;  // 空表不需要释放 
    }
    // 释放数据空间
    free(L.data);
    L.length = 0;  // 重置长度 
    L.data = NULL;  // 重置数据指针
    return 0;  // 正常结束返回0 
}

// 单链表
typedef struct LNode{  // 定义单链表的结点类型 
	int data;  //每个结点存放一个元素 数据域 
	struct LNode *next;  // 指针指向下一个结点 指针域 
}LNode, *LinkList;
 
// 单链表初始化 （默认带头结点） 
int InitList(LinkList &amp;L){
	L = (LNode *)malloc(sizeof(LNode));  //分配头结点
	if(L == NULL){
		return 1;  // 头结点指针为空时分配失败，内存不足，返回1
	} 
	L-&gt;next = NULL;  // 头结点之后无结点
	return 0;  // 正常结束返回0 
}

// 判空操作 
bool Empty(LinkList L){
	return L-&gt;next == NULL;  // 返回1表示空，返回0表示非空 
}

// 单链表初始化 不带头结点 
int InitListWithoutFirstNode(LinkList &amp;L){
	L = NULL;  // 空表，暂无结点，防止脏数据 
	return 0;  // 正常结束返回0 
}

// 判空操作 不带头结点 
bool EmptyWithoutFirstNode(LinkList L){
	return L == NULL;  // 返回1表示空，返回0表示非空 
}

// 单链表求表长
int Length(LinkList L){
	int length = 0;  // 表示初始结点为第0结点
	LNode *p;  // 指针p指向当前扫描到的结点 
	p = L;
	while(p-&gt;next != NULL &amp;&amp; p-&gt;next != L){  // 循环的目的是找到最后一个结点 
		p = p-&gt;next;
		length++;
	}
	return length; 
}

// 单链表求表长 不带头结点
int LengthWithoutFirstNode(LinkList L){
	int length = 0;  // 表示初始结点为第0结点
	LNode *p;  // 指针p指向当前扫描到的结点 
	p = L;
	while(p != NULL &amp;&amp; p-&gt;next != L){  // 循环的目的是找到最后一个结点 
		p = p-&gt;next;
		length++;
	}
	return length; 
}

// 单链表输出内容
int PrintList(LinkList L){
	if(Empty(L)){
		return 1;  // 表空则无需输出，返回1 
	}
	LNode *p;  // 指针p指向当前扫描到的结点 
	p = L;
	while(p-&gt;next != NULL){
		std::cout &lt;&lt; p-&gt;next-&gt;data &lt;&lt; " ";
		p = p-&gt;next;
	}
	std::cout &lt;&lt; std::endl;
	return 0;  // 输出成功完成后返回0 
}

// 单链表输出内容 不带头结点 
int PrintListWithoutFirstNode(LinkList L){
	if(EmptyWithoutFirstNode(L)){
		return 1;  // 表空则无需输出，返回1 
	}
	LNode *p;  // 指针p指向当前扫描到的结点 
	p = L;
	while(p != NULL &amp;&amp; p-&gt;next != L){
		std::cout &lt;&lt; p-&gt;data &lt;&lt; " ";
		p = p-&gt;next;
	}
	std::cout &lt;&lt; std::endl;
	return 0;  // 输出成功完成后返回0 
} 

// 单链表插入操作 默认插入表尾 ATT：不能用此方法建立一个单链表，时间复杂度过高（O(n^2)）
int ListInsert(LinkList &amp;L, int e){
	if(L == NULL){
		LNode *s = (LNode *)malloc(sizeof(LNode));
		s-&gt;data = e;
		s-&gt;next = L;
		L = s;  // 将头指针指向新结点 
		return 0;  // 正常结束返回0
	}
	LNode *p;  // 指针p指向当前扫描到的结点 
	int j = 0;  // j表指向第几个结点 
	p = L;  // L指向头结点，即第0个结点，不存放数据  
	while(p-&gt;next != NULL){  // 循环的目的是找到最后结点并且对其操作
		p = p-&gt;next;
		j++;
	}
	LNode *s = (LNode *)malloc(sizeof(LNode));
	s-&gt;data = e; 
	s-&gt;next = NULL;
	p-&gt;next = s;  // 将s结点排在p之后 
	return 0;  // 正常结束返回0
}
int ListInsertWithoutFirstNode(LinkList &amp;L, int e){
	return ListInsert(L, e); 
}

// 单链表插入操作 
int ListInsertFull(LinkList &amp;L, int e, int i){
	if(i&lt;1){
		return 1;  // 变量i大小不合法 
	}
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据 
	/*
	int j = 0;  // j表指向第几个结点 
	while(p != NULL &amp;&amp; j &lt; i - 1){  // 循环的目的是找到第i-1个结点并且对其操作
	// 如果插在末尾即加上新元素一共i个结点，找到第i-1个结点后出循环，p指向第i-1个结点 
		p = p-&gt;next;
		j++;
	}
	注释区域可替换为如下循环*/
	for(int j = 0; p!= NULL &amp;&amp; j &lt; i - 1; j++){
		p = p-&gt;next;
	} 
	if(p == NULL){
		return 1;  // 变量i大小不合法
	}
	LNode *s = (LNode *)malloc(sizeof(LNode));
	s-&gt;data = e;
	s-&gt;next = p-&gt;next;
	p-&gt;next = s;  // 将s结点排在p之后 
	return 0;  // 正常结束返回0
}

// 单链表插入操作 不带头结点 
int ListInsertWithoutFirstNodeFull(LinkList &amp;L, int e, int i){
	if(i &lt; 1){
		return 1;  // 变量i大小不合法 
	}
	if(i == 1){
		LNode *s = (LNode *)malloc(sizeof(LNode));
		s-&gt;data = e;
		s-&gt;next = L;
		L = s;  // 将头指针指向新结点 
		return 0;  // 正常结束返回0
	}
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据
	for(int j = 1; p != NULL &amp;&amp; j &lt; i - 1; j++){
		// 这里的j表示当前扫描到的结点位置 
		p = p-&gt;next;
	} 
	if(p == NULL){
		return 1;  // 变量i大小不合法
	}
	LNode *s = (LNode *)malloc(sizeof(LNode));
	s-&gt;data = e;
	s-&gt;next = p-&gt;next;
	p-&gt;next = s;  // 将s结点排在p之后 
	return 0;  // 正常结束返回0
}

// 单链表在指定结点后插入元素 
int InsertNextNode(LNode *p, int e){
	if(p == NULL){  // 便于其他函数调用时候传入NULL值
		return 1;  // p结点不存在返回1 
	}
	LNode *s = (LNode *)malloc(sizeof(LNode));
	if(s == NULL){
		return 2;  // 新结点内存分配失败创建失败返回2 
	}
	s-&gt;data = e;
	s-&gt;next = p-&gt;next;
	p-&gt;next = s;
	return 0;  // 正常结束返回0
} 

// 单链表在指定结点前插入元素 
int InsertPriorNode(LNode *p, int e){
	if(p == NULL){
		return 1;  // p结点不存在返回1 
	}
	LNode *s = (LNode *)malloc(sizeof(LNode));
	if(s == NULL){
		return 2;  // 新结点内存分配失败创建失败返回2 
	}
	s-&gt;next = p-&gt;next;
	p-&gt;next = s;
	s-&gt;data = p-&gt;data;  // p中数据赋值到s 
	p-&gt;data = e;  // p中数据覆盖为e 
	return 0;  // 正常结束返回0
} 

// 单链表删除操作 
int ListDelete(LinkList &amp;L, int i){
	if(i&lt;1){
		return 1;  // 变量i大小不合法 
	}
	// 下行直至循环结束代码可直接调用查找结点函数GetElem查找到i-1个结点
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据 
	int j = 0;  // j表指向第几个结点 
	while(p != NULL &amp;&amp; j &lt; i - 1){  // 循环的目的是找到第i-1个结点并且对其操作
	// 如果插在末尾即加上新元素一共i个结点，找到第i-1个结点后出循环，p指向第i-1个结点 
		p = p-&gt;next;
		j++;
	}
	if(p == NULL){
		return 1;  // 变量i大小不合法
	}
	if(p-&gt;next == NULL){  // 此系列代码无法删除最后一个结点
		return 1;  // 变量i大小不合法
	}
	LNode *q = p-&gt;next;
	p-&gt;next = q-&gt;next;
	free(q);  // 释放结点空间 
	return 0;  // 正常结束返回0
}

// 单链表弹出操作 
int ListPop(LinkList &amp;L, int i){
	if(i&lt;1){
		return -1;  // 变量i大小不合法 
	}
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据 
	int j = 0;  // j表指向第几个结点 
	while(p != NULL &amp;&amp; j &lt; i - 1){  // 循环的目的是找到第i-1个结点并且对其操作
	// 如果插在末尾即加上新元素一共i个结点，找到第i-1个结点后出循环，p指向第i-1个结点 
		p = p-&gt;next;
		j++;
	}
	if(p == NULL){
		return -1;  // 变量i大小不合法
	}
	if(p-&gt;next == NULL){
		return -1;  // 变量i大小不合法
	}
	LNode *q = p-&gt;next;
	int out = q-&gt;data; 
	p-&gt;next = q-&gt;next;
	free(q);  // 释放结点空间 
	return out;  // 正常结束返回弹出值 
}

// 单链表删除操作 不带头结点
int ListDeleteWithoutFirstNode(LinkList &amp;L, int i){
	if(i &lt; 1){
		return 1;  // 变量i大小不合法 
	}
	if(i == 1){
		if(EmptyWithoutFirstNode(L)){
			return 1;
		}
		LNode *q = L;
		if(L-&gt;next == NULL){
			L = NULL;
			free(q);
			return 0;  // 正常结束返回0
		}
		L = L-&gt;next;
		free(q);
		return 0;  // 正常结束返回0
	}
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据
	for(int j = 1; p != NULL &amp;&amp; j &lt; i - 1; j++){
		// 这里的j表示当前扫描到的结点位置 
		p = p-&gt;next;
	} 
	if(p == NULL){
		return 1;  // 变量i大小不合法
	}
	if(p-&gt;next == NULL){
		return 1;  // 变量i大小不合法
	}
	LNode *q = p-&gt;next;
	p-&gt;next = q-&gt;next;
	free(q);  // 释放结点空间 
	return 0;  // 正常结束返回0
}

// 单链表弹出操作 不带头结点
int ListPopWithoutFirstNode(LinkList &amp;L, int i){
	if(i &lt; 1){
		return 1;  // 变量i大小不合法 
	}
	if(i == 1){
		if(EmptyWithoutFirstNode(L)){
			return 1;
		}
		LNode *q = L;
		int out = L-&gt;data;
		if(L-&gt;next == NULL){
			L = NULL;
			free(q);
			return out;  // 正常结束返回弹出值
		}
		L = L-&gt;next;
		free(q);
		return out;  // 正常结束返回弹出值 
	}
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据
	for(int j = 1; p != NULL &amp;&amp; j &lt; i - 1; j++){
		// 这里的j表示当前扫描到的结点位置 
		p = p-&gt;next;
	} 
	if(p == NULL){
		return 1;  // 变量i大小不合法
	}
	if(p-&gt;next == NULL){
		return 1;  // 变量i大小不合法
	}
	LNode *q = p-&gt;next;
	int out = p-&gt;data; 
	p-&gt;next = q-&gt;next;
	free(q);  // 释放结点空间 
	return out;  // 正常结束返回弹出值 
}

// 单链表删除指定结点p
int DeleteNode(LNode *p){
	if(p == NULL){
		return 1;  // 结点p不存在 
	}
	LNode *q = p-&gt;next;
	if(q == NULL){
		return 2;  // p为最后一个结点，无法通过该函数删除 
	}
	p-&gt;data = q-&gt;data;  // ATT：不能用来删除最后一个结点 
	p-&gt;next = q-&gt;next;
	free(q);
	return 0;  // 正常结束返回0 
}

// 按位查找表L的结点
LNode *GetElem(LinkList L, int i){
	if(i&lt;0){
		return NULL;  // 变量i大小不合法
	}
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据 
	int j = 0;  // j表指向第几个结点 
	while(p != NULL &amp;&amp; j &lt; i){  // 循环的目的是找到第i个结点并且对其操作
		p = p-&gt;next;
		j++;
	}
	return p;
}

// 按位查找表L的结点 不带头结点
LNode *GetElemWithoutFirstNode(LinkList L, int i){
	if(i &lt; 0 || L == NULL){
		return NULL;  // 变量i大小不合法
	}
	LNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据 
	int j = 1;  // j表指向第几个结点 
	while(p != NULL &amp;&amp; j &lt; i){  // 循环的目的是找到第i个结点并且对其操作
		p = p-&gt;next;
		j++;
	}
	return p;
}

// ListInsertFull简化代码
int ListInsert(LinkList &amp;L, int e, int i){
	if(i&lt;1){
		return 1;  // 变量i大小不合法 
	}
	LNode *p = GetElem(L, i-1);  // 查找到第i-1个结点的位置
	return InsertNextNode(p, e);  // 正常结束返回0
}

// ListInsertWithoutFirstNodeFull简化代码 
int ListInsertWithoutFirstNode(LinkList &amp;L, int e, int i){
	if(i &lt; 1){
		return 1;  // 变量i大小不合法 
	}
	if(i == 1){
		LNode *s = (LNode *)malloc(sizeof(LNode));
		s-&gt;data = e;
		s-&gt;next = L;
		L = s;  // 将头指针指向新结点 
		return 0;  // 正常结束返回0
	}
	LNode *p = GetElem(L, i-1);  // 查找到第i-1个结点的位置
	return InsertNextNode(p, e);  // 正常结束返回0
}

// 按值查找单链表中的元素
LNode *LocateElem(LinkList L, int e){
	LNode *p = L;
	while(p != NULL &amp;&amp; p-&gt;data != e){
		p = p-&gt;next;
	}
	return p;
}

// 正向建立一个单链表 尾插法(自动初始化)
LinkList List_TailInsert(){
	int sourceData;  // 源数据存放变量
	LinkList L = (LinkList)malloc(sizeof(LNode));  // 设置头结点
	LNode *s, *r = L;  // r为表尾指针
	std::cin &gt;&gt; sourceData;  // 输入源数据
	while(sourceData != 9999){
		s = (LNode *)malloc(sizeof(LNode));
		s-&gt;data = sourceData;
		r-&gt;next = s;  // r指向新表尾
		r = s;
		std::cin &gt;&gt; sourceData;
	}
	r-&gt;next = NULL;  // 结尾置空
	return L;
}

// 正向建立一个单链表 尾插法(自动初始化) 不带头结点
LinkList List_TailInsertWithoutFirstNode(){  // 未测试
	int sourceData;  // 源数据存放变量
	LinkList L;  // 设置头结点
	std::cin &gt;&gt; sourceData;  // 输入源数据
	if(sourceData != 9999){
		L = (LNode *)malloc(sizeof(LNode));
		L-&gt;data = sourceData;
		L-&gt;next = NULL;
		std::cin &gt;&gt; sourceData;
	}
	LNode *s, *r = L;  // r为表尾指针
	while(sourceData != 9999){
		s = (LNode *)malloc(sizeof(LNode));
		s-&gt;data = sourceData;
		r-&gt;next = s;  // r指向新表尾
		r = s;
		std::cin &gt;&gt; sourceData;
	}
	r-&gt;next = NULL;  // 结尾置空
	return L;
}

// 反向建立一个单链表 头插法(自动初始化)
LinkList List_HeadInsertFull(){
	LNode *s;
	int sourceData;
	LinkList L = (LinkList)malloc(sizeof(LNode));
	L-&gt;next = NULL;
	std::cin &gt;&gt; sourceData;
	while(sourceData !=9999){
		s = (LNode *)malloc(sizeof(LNode));
		s-&gt;data = sourceData;
		s-&gt;next = L-&gt;next;
		L-&gt;next = s;
		std::cin &gt;&gt; sourceData;
	}
	return L;
}
LinkList List_HeadInsert(){
	LNode *s;
	int sourceData;
	LinkList L = (LinkList)malloc(sizeof(LNode));
	L-&gt;next = NULL;
	std::cin &gt;&gt; sourceData;
	while(sourceData !=9999){
		InsertNextNode(L, sourceData);
		std::cin &gt;&gt; sourceData;
	}
	return L;
}

// 反向建立一个单链表 头插法(自动初始化) 不带头结点
LinkList List_HeadInsertWithoutFirstNode(){  // 未测试
	LNode *s;
	int sourceData;
	LinkList L = NULL;
	std::cin &gt;&gt; sourceData;
	if(sourceData != 9999){
		L = (LNode *)malloc(sizeof(LNode));
		L-&gt;data = sourceData;
		L-&gt;next = NULL;
		std::cin &gt;&gt; sourceData;
	}
	while(sourceData !=9999){
		s = (LNode *)malloc(sizeof(LNode));
		s-&gt;data = sourceData;
		s-&gt;next = L-&gt;next;
		L-&gt;next = s;
		std::cin &gt;&gt; sourceData;
	}
	return L;
}

// 将单链表反转（Copilot）
int List_Reverse(LinkList &amp;L){
	LNode *p, *q;
	p = L-&gt;next;
	L-&gt;next = NULL;
	while(p != NULL &amp;&amp; p-&gt;next != L){
		q = p-&gt;next;
		p-&gt;next = L-&gt;next;
		L-&gt;next = p;
		p = q;
	}
	return 0;
}

// 删除单链表
int DsetoryList(LinkList &amp;L){
    LNode *p, *q;
    p = L;
    while(p != NULL){
        q = p-&gt;next;
        free(p);
        p = q;
    }
    L = NULL;
    return 0;
}

// 判尾
bool isTail(LNode *p){
	return p-&gt;next == NULL;
}

// 双链表
typedef struct DNode{  // 定义单链表的结点类型 
	int data;  //每个结点存放一个元素 数据域 
	struct DNode *prior, *next;  // 指针指向下一个结点 指针域 
}DNode, *DLinklist;

// 双链表的初始化（默认为带头结点）
int InitList(DLinklist &amp;L){
	L = (DNode *)malloc(sizeof(DNode));
	if(L == NULL){
		return 1;  // 内存分配失败，初始化失败返回1
	}
	L-&gt;prior = NULL;
	L-&gt;next = NULL;
	return 0;
}

// 双链表的判空
bool Empty(DLinklist L){
	return L-&gt;next == NULL;
}

// 求表长
int Length(DLinklist L){
	int length = 0;  // 表示初始结点为第0结点
	DNode *p;  // 指针p指向当前扫描到的结点 
	p = L;
	while(p-&gt;next != NULL &amp;&amp; p-&gt;next != L){  // 循环的目的是找到最后一个结点 
		p = p-&gt;next;
		length++;
	}
	return length; 
}

// 双链表中在结点p后插入结点s
int InsertNextDNode(DNode *p, DNode *s){
	if(p == NULL || s == NULL){
		return 1;
	}
	s-&gt;next = p-&gt;next;
	if(p-&gt;next != NULL){  // 判断p是否有后继结点，如果有后继结点，则设置后继结点的前驱为s
		p-&gt;next-&gt;prior = s;
	}
	s-&gt;prior = p;
	p-&gt;next = s;
	return 0;
}

// 删除p的后继结点
int DeleteNextDNode(DNode *p){
	if(p == NULL){
		return 1;  // p结点不存在返回1
	}
	DNode *q = p-&gt;next;
	if(q == NULL){
		return 2;  // p的后继结点为空（不存在）返回2
	}
	p-&gt;next = q-&gt;next;
	if(q-&gt;next != NULL){
		q-&gt;next-&gt;prior = p;
	}
	free(q);
	return 0;  // 正常结束返回0
}

// 删除p结点
int DeleteDNode(DNode *p){
	if(p == NULL){
		return 1;  // p结点不存在返回1
	}
	DNode *q = p-&gt;prior;
	q-&gt;next = p-&gt;next;
	if(p-&gt;next != NULL){
		p-&gt;next-&gt;prior = q;
	}
	free(p);
	return 0;  // 正常结束返回0
}

// 释放双链表各个数据结点（删除表）
int DsetoryList(DLinklist &amp;L){
	while(L-&gt;next != NULL){
		DeleteNextDNode(L);
	}
	free(L);
	L = NULL;
	return 0;  // 正常结束返回0
}

// 循环输出双链表
int PrintList(DLinklist L){
	if(Empty(L)){
		return 1;  // 链表为空输出1
	}
	DNode *p = L-&gt;next;
	while(p != NULL &amp;&amp; p-&gt;next != L){
		std::cout &lt;&lt; p-&gt;data &lt;&lt; " ";
		p = p-&gt;next;
	}
	std::cout &lt;&lt; std::endl;
	return 0;
}

// 按位查找表L的结点
DNode *GetElem(DLinklist L, int i){
	if(i&lt;0){
		return NULL;  // 变量i大小不合法
	}
	DNode *p;  // 指针p指向当前扫描到的结点
	p = L;  // L指向头结点，即第0个结点，不存放数据 
	int j = 0;  // j表指向第几个结点 
	while(p != NULL &amp;&amp; j &lt; i){  // 循环的目的是找到第i个结点并且对其操作
		p = p-&gt;next;
		j++;
	}
	return p;
}

// 插入数据到双链表(默认表尾)
int ListInsert(DLinklist &amp;L, int e){
	
	DNode *p = L;
	while(p-&gt;next != NULL){
		p = p-&gt;next;
	}
	DNode *s = (DNode *)malloc(sizeof(DNode));
	s-&gt;data = e;
	return InsertNextDNode(p, s);  // 正常结束返回0
}

// 插入数据到双链表
int ListInsert(DLinklist &amp;L, int e, int i){
	if(i&lt;1){
		return 1;  // 变量i大小不合法 
	}
	DNode *p = GetElem(L, i-1);  // 查找到第i-1个结点的位置
	DNode *s = (DNode *)malloc(sizeof(DNode));
	s-&gt;data = e;
	return InsertNextDNode(p, s);  // 正常结束返回0
}

// 按值查找单链表中的元素
DNode *LocateElem(DLinklist L, int e){
	DNode *p = L;
	while(p != NULL &amp;&amp; p-&gt;data != e){
		p = p-&gt;next;
	}
	return p;
}

// 删除双链表中的元素
int ListDelete(DLinklist &amp;L, int e){
	DNode *p = L;
	while(p != NULL &amp;&amp; p-&gt;data != e){
		p = p-&gt;next;
	}
	if(p == NULL){
		return 1;  // 变量e不存在
	}
	return DeleteNextDNode(p);  // 正常结束返回0
}

// 将双链表中元素反转
int List_Reverse(DLinklist &amp;L){
	DNode *p, *q;
	p = L-&gt;next;
	L-&gt;next = NULL;
	while(p != NULL &amp;&amp; p-&gt;next != L){
		q = p-&gt;next;
		p-&gt;next = L-&gt;next;
		L-&gt;next = p;
		p = q;
	}
	if(!Empty(L)){
		p = L-&gt;next;
		q = L;
		while(p != NULL &amp;&amp; p-&gt;next != L){
			p-&gt;prior = q;
			p = p-&gt;next;
			q = q-&gt;next;
		}
	}
	return 0;
}

// 初始化循环单链表
int InitCircleList(LinkList &amp;L, int n){
	L = (LinkList)malloc(sizeof(LinkList));
	if(L == NULL){
		return 1;  // 分配内存失败
	}
	L-&gt;next = L;  // 空链表头结点指向自身
	return 0;  // 正常结束返回0
}

// 判空
bool CircleEmpty(LinkList L){
	return L-&gt;next == L;
}

// 判尾
bool isTail(LinkList L, LinkList p){
	return p-&gt;next == L;
}

// 初始化循环双链表
int InitCircleDList(DLinklist &amp;L, int n){
	L = (DLinklist)malloc(sizeof(DLinklist));
	if(L == NULL){
		return 1;  // 分配内存失败
	}
	L-&gt;prior = L;  // 空链表头结点指向自身
	L-&gt;next = L;  // 空链表尾结点指向自身
	return 0;  // 正常结束返回0
}

// 判空
bool CircleEmpty(DLinklist L){
	return L-&gt;prior == L;
}

// 判尾
bool isTail(DLinklist L, DLinklist p){
	return p-&gt;next == L;
}

// 静态链表
// 声明用：Node 变量名&#091;MAXSIZE];
typedef struct Node {  // 静态链表结点类型
	int data;  // 用于存放数据
	int next;  // 用于存放下一个结点的数组下标
}Node;

// 静态链表(2)
// 声明用：SLinkList 变量名; 创建MAXSIZE个结点的静态链表
typedef struct{
    int data;
    int next;
}SLinkList&#091;MAXSIZE];

// 初始化静态链表
int InitSLinkList(SLinkList &amp;L){
    L&#091;0].next = -1;  // 空链表头结点数组为-1
    // 其他的结点数组下标初始化为-2
    for(int i=1; i&lt;MAXSIZE; i++){
        L&#091;i].next = -2;
    }
    return 0;
}

// 求静态链表长度
int Length(SLinkList L){
    int length = 0;
    while(L&#091;length].next != -1){
        length++;
    }
    return length;
}

// 判空
bool Empty(SLinkList L){
    return L&#091;0].next == -1;
}

// 判尾
bool isTail(SLinkList L, int i){
    return L&#091;i].next == -1;
}

// 输出静态链表
int PrintList(SLinkList L){
    int i = 0;
    while(L&#091;i].next != -1){
		i = L&#091;i].next;
        std::cout &lt;&lt; L&#091;i].data &lt;&lt; " ";
    }
    std::cout &lt;&lt; std::endl;
    return 0;
}

// 在静态链表尾部插入元素
int ListInsert(SLinkList &amp;L, int e){
    // 判断静态链表是否已满
    if(Length(L) == MAXSIZE - 1){
        return 1;  // 静态链表已满
    }
    int i = 0;
    while(L&#091;i].next != -1){
        i = L&#091;i].next;
    }
    L&#091;i].next = i + 1;
    L&#091;i + 1].data = e;
    L&#091;i + 1].next = -1;
    return 0;
}

// 查找元素
int GetElem(SLinkList L, int i){
    int j = 0;
    if(i&lt;1 || i&gt;Length(L)){
        return -1;  // 变量i大小不合法
    }
    j = L&#091;0].next;
    while(j != -1 &amp;&amp; i&gt;1){
        j = L&#091;j].next;
        i--;
    }
    return L&#091;j].data;
}

// 查找元素
int LocateElem(SLinkList L, int e){
    int i = 0;
    int j = L&#091;0].next;
    while(j != -1){
        if(L&#091;j].data == e){
            return i;
        }
        i++;
        j = L&#091;j].next;
    }
    return 0;
}

// 删除元素
int ListDelete(SLinkList &amp;L, int i){
    int j;
    if(i&lt;1 || i&gt;Length(L)){
        return 1;  // 变量i大小不合法
    }
    if(i == 1){
        L&#091;0].next = L&#091;L&#091;0].next].next;
    }
    else{
        j = L&#091;0].next;
        while(j != -1 &amp;&amp; i&gt;2){
            j = L&#091;j].next;
            i--;
        }
        L&#091;j].next = L&#091;L&#091;j].next].next;
    }
    return 0;
}

// 弹出元素
int ListPop(SLinkList &amp;L, int i){
    int e;
    if(i&lt;1 || i&gt;Length(L)){
        return -1;  // 变量i大小不合法返回-1
    }
    if(i == 1){
        e = L&#091;L&#091;0].next].data;
        L&#091;0].next = L&#091;L&#091;0].next].next;
    }
    else{
        int j = L&#091;0].next;
        while(j != -1 &amp;&amp; i&gt;2){
            j = L&#091;j].next;
            i--;
        }
        e = L&#091;L&#091;j].next].data;
        L&#091;j].next = L&#091;L&#091;j].next].next;
    }
    return e;
}

// 反转静态链表
int List_Reverse(SLinkList &amp;L){
    int *p = new int&#091;Length(L)];
	int length = Length(L);
	for(int i = 0; i &lt; length; i++){
		p&#091;i] = ListPop(L, 1);
	}
	for(int i = length-1; i &gt;= 0; i--){
		ListInsert(L, p&#091;i]);
	}
	delete&#091;] p;
	return 0;  // 反转成功
}

// 删除静态链表
int DsetoryList(SLinkList &amp;L){
    L&#091;0].next = -1;
    return 0;
}


</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date><![CDATA[2022-02-13 18:12:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-13 10:12:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-13 18:12:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-13 10:12:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linearlist]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"><![CDATA[数据结构]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[数据结构——栈和队列]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/15/stackandqueue/</link>
		<pubDate>Tue, 15 Feb 2022 14:46:48 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=432</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>头文件StackAndQueue.h</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// StackAndQueue.h - 栈和队列
#include &lt;iostream&gt;

#define SqStackMaxSize 10  // 定义静态链表的最大长度
#define SqQueueMaxSize 10  // 定义顺序队列的最大长度

// 数据部分用int类型数据模拟

/*********************************************************************************************************************************
 * 数据类型一览
 * SqStack 顺序栈
 * ShStack 共享栈
 * LiStack 链栈
 * SqQueue 顺序队列
 * ShQueue 共享队列
 * LinkQueue 链队列
 * 
 * 操作函数 共享栈操作在函数名后加0或者1 不带头结点的链栈操作在函数名后加WithoutFirstNode
 * int Length(S) 求栈或者队列长度 返回栈长或者队列长
 * bool Empty(S) 判断栈S是否为空 栈空返回1，否则返回0
 * bool Full(S) 判断栈S是否已满 栈满返回1，否则返回0
 * int Push(S,e) 入栈，将e压入栈S 正常结束返回0，栈满，无法入栈返回-1
 * int Pop(S,e) 出栈，将栈S的栈顶元素e出栈 正常结束返回0，栈空，无法出栈返回-1
 * int GetTop(S,e) 获取栈S的栈顶元素e 正常结束返回0，栈空，无法获取返回-1
 * int DestroyStack(S) 销毁栈S 正常结束返回0
 * int PrintStack(S) 打印栈S 正常结束返回0
 * int InitQueue(Q) 初始化队列Q 正常结束返回0
 * int DeQueue(Q,e) 出队，将队列Q的队头元素e出队 正常结束返回0，队空，无法出队返回-1
 * int GetHead(Q,e) 获取队列Q的队头元素e 正常结束返回0，队空，无法获取返回-1
 * int PrintQueue(Q) 打印队列Q 正常结束返回0
 * int DestroyQueue(Q) 销毁队列Q 正常结束返回0
 * 
 *********************************************************************************************************************************/

// 顺序栈
typedef struct SqStack {
    int data&#091;SqStackMaxSize];
    int top;
} SqStack;

// 初始化顺序栈
int InitStack(SqStack &amp;S) {
    S.top = -1;  // 初始化栈顶指针为-1
    return 0;
}

// 判断顺序栈是否为空
bool Empty(SqStack S) {
    return S.top == -1;
}

// 判断顺序栈是否已满
bool Full(SqStack S) {
    return S.top == SqStackMaxSize - 1;
}

// 入栈
int Push(SqStack &amp;S, int x) {
    if (Full(S)) {
        return -1;  // 栈满，无法入栈返回-1
    }
    S.data&#091;++S.top] = x;  // 入栈
    return 0;
}

// 出栈
int Pop(SqStack &amp;S, int &amp;x) {
    if (Empty(S)) {
        return -1;  // 栈空，无法出栈返回-1
    }
    x = S.data&#091;S.top--];  // 出栈
    return 0;
}

// 获取栈顶元素
int GetTop(SqStack S, int &amp;x) {
    if (Empty(S)) {
        return -1;  // 栈空，无法获取栈顶元素返回-1
    }
    x = S.data&#091;S.top];  // 获取栈顶元素
    return 0;
}

// 顺序栈的销毁
int DestroyStack(SqStack &amp;S) {
    S.top = -1;  // 销毁栈，栈顶指针指向-1
    return 0;
}

// 顺序栈的输出
int PrintStack(SqStack S) {
    if (Empty(S)) {
        return -1;  // 栈空，无法输出返回-1
    }
    for (int i = 0; i &lt;= S.top; i++) {
        std::cout &lt;&lt; S.data&#091;i] &lt;&lt; " ";  // 输出栈
    }
    std::cout &lt;&lt; std::endl;
    return 0;
}

// 顺序栈的求长度
int Length(SqStack S) {
    return S.top + 1;  // 返回栈的长度
}

// 共享栈
typedef struct ShStack {
    int data&#091;SqStackMaxSize];
    int top0;  // 0号栈栈顶指针
    int top1;  // 1号栈栈顶指针
} ShStack;

// 初始化共享栈
int InitStack(ShStack &amp;S) {
    S.top0 = -1;  // 初始化0号栈栈顶指针为-1
    S.top1 = SqStackMaxSize;  // 初始化1号栈栈顶指针为栈的最大长度
    return 0;
}

// 判断共享栈是否为空
bool Empty(ShStack S) {
    return S.top0 == -1 &amp;&amp; S.top1 == SqStackMaxSize;
}
bool Empty0(ShStack S) {
    return S.top0 == -1;
}
bool Empty1(ShStack S) {
    return S.top1 == SqStackMaxSize;
}

// 判断共享栈是否已满
bool Full(ShStack S) {
    return S.top1-1 == S.top0;  // 栈顶指针相邻为栈满
}
bool Full0(ShStack S) {
    return Full(S);
}
bool Full1(ShStack S) {
    return Full(S);
}

// 入栈
int Push0(ShStack &amp;S, int x) {
    if (Full0(S)) {
        return -1;  // 栈满，无法入栈返回-1
    }
    S.data&#091;++S.top0] = x;  // 入栈
    return 0;
}
int Push1(ShStack &amp;S, int x) {
    if (Full1(S)) {
        return -1;  // 栈满，无法入栈返回-1
    }
    S.data&#091;--S.top1] = x;  // 入栈
    return 0;
}

// 出栈
int Pop0(ShStack &amp;S, int &amp;x) {
    if (Empty0(S)) {
        return -1;  // 栈空，无法出栈返回-1
    }
    x = S.data&#091;S.top0--];  // 出栈
    return 0;
}
int Pop1(ShStack &amp;S, int &amp;x) {
    if (Empty1(S)) {
        return -1;  // 栈空，无法出栈返回-1
    }
    x = S.data&#091;S.top1++];  // 出栈
    return 0;
}

// 获取栈顶元素
int GetTop0(ShStack S, int &amp;x) {
    if (Empty0(S)) {
        return -1;  // 栈空，无法获取栈顶元素返回-1
    }
    x = S.data&#091;S.top0];  // 获取栈顶元素
    return 0;
}
int GetTop1(ShStack S, int &amp;x) {
    if (Empty1(S)) {
        return -1;  // 栈空，无法获取栈顶元素返回-1
    }
    x = S.data&#091;S.top1];  // 获取栈顶元素
    return 0;
}

// 共享栈的销毁
int DestroyStack(ShStack &amp;S) {
    S.top0 = -1;  // 销毁0号栈，栈顶指针指向-1
    S.top1 = SqStackMaxSize;  // 销毁1号栈，栈顶指针指向栈的最大长度
    return 0;
}
int DestroyStack0(ShStack &amp;S) {
    S.top0 = -1;  // 销毁0号栈，栈顶指针指向-1
    return 0;
}
int DestroyStack1(ShStack &amp;S) {
    S.top1 = SqStackMaxSize;  // 销毁1号栈，栈顶指针指向栈的最大长度
    return 0;
}

// 共享栈的输出
int PrintStack0(ShStack S) {
    if (Empty0(S)) {
        return -1;  // 栈空，无法输出返回-1
    }
    for (int i = 0; i &lt;= S.top0; i++) {
        std::cout &lt;&lt; S.data&#091;i] &lt;&lt; " ";  // 输出0号栈，输出栈顶元素
    }
    std::cout &lt;&lt; std::endl;
    return 0;
}
int PrintStack1(ShStack S) {
    if (Empty1(S)) {
        return -1;  // 栈空，无法输出返回-1
    }
    for (int i = SqStackMaxSize-1; i &gt; S.top1; i--) {
        std::cout &lt;&lt; S.data&#091;i] &lt;&lt; " ";  // 输出1号栈，输出栈顶元素
    }
    std::cout &lt;&lt; std::endl;
    return 0;
}
int PrintStack(ShStack S) {
    PrintStack0(S);
    if (Empty1(S)) {
        return -1;  // 栈空，无法输出返回-1
    }
    for (int i = SqStackMaxSize-1; i &gt; S.top1; i--) {
        std::cout &lt;&lt; S.data&#091;i] &lt;&lt; " ";  // 输出1号栈，输出栈顶元素
    }
    std::cout &lt;&lt; std::endl;
    return 0;
}

// 共享栈求长度
int StackLength0(ShStack S) {
    return S.top0+1;  // 返回0号栈的长度
}
int StackLength1(ShStack S) {
    return SqStackMaxSize-S.top1;  // 返回1号栈的长度
}
int StackLength(ShStack S) {
    return StackLength0(S) + StackLength1(S);  // 返回共享栈的长度
}

// 链栈
typedef struct Linknode{
    int data;  // 数据域
    struct Linknode *next;  // 指针域
}*LiStack;

// 初始化链栈
int InitStack(LiStack &amp;L) {
    L = (LiStack)malloc(sizeof(struct Linknode));  // 分配结点
    if (L == NULL) {
        return -1;  // 分配失败，返回-1
    }
    L-&gt;next = NULL;  // 初始化链栈
    return 0;
}

// 初始化链栈 不带头结点
int InitStackWithoutFirstNode(LiStack &amp;L) {
    L = NULL;  // 初始化链栈
    return 0;
}

// 判断链栈是否为空
int Empty(LiStack L) {
    return L-&gt;next == NULL;  // 判断链栈是否为空
}

// 判断链栈是否空 不带头结点
int EmptyWithoutFirstNode(LiStack L) {
    return L == NULL;  // 判断链栈是否为空
}

// 入栈
int Push(LiStack &amp;L, int x) {
    LiStack p = (LiStack)malloc(sizeof(struct Linknode));  // 分配结点
    if (p == NULL) {
        return -1;  // 分配失败，返回-1
    }
    p-&gt;data = x;  // 入栈
    p-&gt;next = L-&gt;next;  // 入栈
    L-&gt;next = p;  // 入栈
    return 0;
}

// 入栈 不带头结点
int PushWithoutFirstNode(LiStack &amp;L, int x) {
    LiStack p = (LiStack)malloc(sizeof(struct Linknode));  // 分配结点
    if (p == NULL) {
        return -1;  // 分配失败，返回-1
    }
    p-&gt;data = x;  // 入栈
    p-&gt;next = L;  // 入栈
    L = p;  // 入栈
    return 0;
}

// 出栈
int Pop(LiStack &amp;L, int &amp;x) {
    if (Empty(L)) {
        return -1;  // 栈空，无法出栈返回-1
    }
    LiStack p = L-&gt;next;  // 出栈
    x = p-&gt;data;  // 出栈
    L-&gt;next = p-&gt;next;  // 出栈
    free(p);  // 释放结点
    return 0;
}

// 出栈 不带头结点
int PopWithoutFirstNode(LiStack &amp;L, int &amp;x) {
    if (EmptyWithoutFirstNode(L)) {
        return -1;  // 栈空，无法出栈返回-1
    }
    LiStack p = L;  // 出栈
    x = p-&gt;data;  // 出栈
    L = p-&gt;next;  // 出栈
    free(p);  // 释放结点
    return 0;
}

// 输出链栈
int PrintStack(LiStack L) {
    if (Empty(L)) {
        return -1;  // 栈空，无法输出返回-1
    }
    while (L-&gt;next != NULL) {
        std::cout &lt;&lt; L-&gt;next-&gt;data &lt;&lt; " ";  // 输出链栈
        L = L-&gt;next;  // 输出链栈
    }
    std::cout &lt;&lt; std::endl;
    return 0;
}

// 输出链栈 不带头结点
int PrintStackWithoutFirstNode(LiStack L) {
    if (EmptyWithoutFirstNode(L)) {
        return -1;  // 栈空，无法输出返回-1
    }
    while (L != NULL) {
        std::cout &lt;&lt; L-&gt;data &lt;&lt; " ";  // 输出链栈
        L = L-&gt;next;  // 输出链栈
    }
    std::cout &lt;&lt; std::endl;
    return 0;
}

// 获取栈顶元素
int GetTop(LiStack L, int &amp;x) {
    if (Empty(L)) {
        return -1;  // 栈空，无法获取栈顶元素返回-1
    }
    x = L-&gt;next-&gt;data;  // 获取栈顶元素
    return 0;
}

// 获取栈顶元素 不带头结点
int GetTopWithoutFirstNode(LiStack L, int &amp;x) {
    if (EmptyWithoutFirstNode(L)) {
        return -1;  // 栈空，无法获取栈顶元素返回-1
    }
    x = L-&gt;data;  // 获取栈顶元素
    return 0;
}

// 删除链栈
int DeleteStack(LiStack &amp;L) {
    if (Empty(L)) {
        return -1;  // 栈空，无法删除返回-1
    }
    while (L-&gt;next != NULL) {
        LiStack p = L-&gt;next;  // 删除链栈
        L-&gt;next = p-&gt;next;  // 删除链栈
        free(p);  // 释放结点
    }
    free(L);  // 释放结点
    return 0;
}

// 删除链栈 不带头结点
int DeleteStackWithoutFirstNode(LiStack &amp;L) {
    if (EmptyWithoutFirstNode(L)) {
        return -1;  // 栈空，无法删除返回-1
    }
    while (L != NULL) {
        LiStack p = L;  // 删除链栈
        L = L-&gt;next;  // 删除链栈
        free(p);  // 释放结点
    }
    return 0;
}

// 队列的顺序实现
typedef struct SqQueue{
    int data&#091;SqQueueMaxSize];  // 数据
    int front;  // 队头
    int rear;  // 队尾
}SqQueue;

// 初始化队列
int InitQueue(SqQueue &amp;Q) {
    Q.front = 0;  // 队头
    Q.rear = 0;  // 队尾
    return 0;
}

// 判断队列是否为空
int Empty(SqQueue Q) {
    return Q.front == Q.rear;
}

// 判断队列是否满
int Full(SqQueue Q) {
    return (Q.rear + 1) % SqQueueMaxSize == Q.front;
}

// 入队
int EnQueue(SqQueue &amp;Q, int x) {
    if (Full(Q)) {
        return -1;  // 队满，无法入队返回-1
    }
    Q.data&#091;Q.rear] = x;  // 入队
    Q.rear = (Q.rear + 1) % SqQueueMaxSize;  // 入队
    return 0;
}

// 出队
int DeQueue(SqQueue &amp;Q, int &amp;x) {
    if (Empty(Q)) {
        return -1;  // 队空，无法出队返回-1
    }
    x = Q.data&#091;Q.front];  // 出队
    Q.front = (Q.front + 1) % SqQueueMaxSize;  // 出队
    return 0;
}

// 获取对头元素
int GetHead(SqQueue Q, int &amp;x) {
    if (Empty(Q)) {
        return -1;  // 队空，无法获取对头元素返回-1
    }
    x = Q.data&#091;Q.front];  // 获取对头元素
    return 0;
}

// 删除队列
int DeleteQueue(SqQueue &amp;Q) {
    if (Empty(Q)) {
        return -1;  // 队空，无法删除返回-1
    }
    Q.front = 0;  // 队头
    Q.rear = 0;  // 队尾
    return 0;
}

// 队列长度
int Length(SqQueue Q) {
    return (Q.rear - Q.front + SqQueueMaxSize) % SqQueueMaxSize;
}

// 链队列
typedef struct LinkNode{
    int data;  // 数据
    struct LinkNode *next;  // 指针
}LinkNode;
typedef struct LinkQueue{
    LinkNode *front;  // 队头
    LinkNode *rear;  // 队尾
    // int length;  // 队列长度(如果频繁访问队列长度可添加长度计数器)
}LinkQueue;

// 初始化链队列
int InitQueue(LinkQueue &amp;Q){
    Q.front = (LinkNode *)malloc(sizeof(LinkNode));  // 队头
    Q.rear = Q.front;  // 队尾
    Q.front-&gt;next = NULL;  // 队头指针
    return 0;  // 初始化成功
}

// 初始化链队列 不带头结点
int InitQueueWithoutFirstNode(LinkQueue &amp;Q){
    Q.front = NULL;  // 队头
    Q.rear = NULL;  // 队尾
    return 0;  // 初始化成功
}

// 判断链队列是否为空
bool Empty(LinkQueue Q){
    return Q.front == Q.rear;
}

// 判断链队列是否为空 不带头结点
bool EmptyWithoutFirstNode(LinkQueue Q){
    return Q.front == NULL;
}

// 入队
int EnQueue(LinkQueue &amp;Q, int x){
    LinkNode *s = (LinkNode *)malloc(sizeof(LinkNode));  // 创建结点
    if (s == NULL) {
        return -1;  // 创建结点失败，无法入队返回-1
    }
    s-&gt;data = x;  // 新结点数据
    s-&gt;next = NULL;  // 新结点的next指针为空
    Q.rear-&gt;next = s;  // 将新结点插入队尾
    Q.rear = s;  // 修改对尾指针
    return 0;  // 入队成功
}

// 出队
int DeQueue(LinkQueue &amp;Q, int &amp;x){
    if (Empty(Q)) {
        return -1;  // 队空，无法出队返回-1
    }
    LinkNode *p = Q.front-&gt;next;  // 出队结点
    x = p-&gt;data;  // 出队结点数据
    Q.front-&gt;next = p-&gt;next;  // 将队头指针指向出队结点的下一个结点
    if (Q.rear == p) {  // 如果出队结点是队尾结点，则修改队尾指针
        Q.rear = Q.front;
    }
    free(p);  // 释放结点
    return 0;  // 出队成功
}

// 入队 不带头结点
int EnQueueWithoutFirstNode(LinkQueue &amp;Q, int x){
    LinkNode *s = (LinkNode *)malloc(sizeof(LinkNode));  // 创建结点
    if (s == NULL) {
        return -1;  // 创建结点失败，无法入队返回-1
    }
    s-&gt;data = x;  // 新结点数据
    s-&gt;next = NULL;  // 新结点的next指针为空
    if (EmptyWithoutFirstNode(Q)) {  // 如果队列为空
        Q.front = s;  // 队头指针指向新结点
    } else {  // 如果队列不为空
        Q.rear-&gt;next = s;  // 将新结点插入队尾
    }
    Q.rear = s;  // 修改对尾指针
    return 0;  // 入队成功
}

// 出队 不带头结点
int DeQueueWithoutFirstNode(LinkQueue &amp;Q, int &amp;x){
    if (EmptyWithoutFirstNode(Q)) {
        return -1;  // 队空，无法出队返回-1
    }
    LinkNode *p = Q.front;  // 出队结点
    x = p-&gt;data;  // 出队结点数据
    Q.front = p-&gt;next;  // 将队头指针指向出队结点的下一个结点
    if (Q.rear == p) {  // 如果出队结点是队尾结点，则修改队尾指针
        Q.rear = Q.front;
    }
    free(p);  // 释放结点
    return 0;  // 出队成功
}

// 打印链队列
int PrintQueue(LinkQueue Q){
    if (Empty(Q)) {
        return -1;  // 队空，无法打印返回-1
    }
    LinkNode *p = Q.front-&gt;next;  // 打印结点
    while (p != NULL) {
        printf("%d ", p-&gt;data);  // 打印结点数据
        p = p-&gt;next;  // 指向下一个结点
    }
    printf("\n");  // 换行
    return 0;  // 打印成功
}

// 打印链队列 不带头结点
int PrintQueueWithoutFirstNode(LinkQueue Q){
    if (EmptyWithoutFirstNode(Q)) {
        return -1;  // 队空，无法打印返回-1
    }
    LinkNode *p = Q.front;  // 打印结点
    while (p != NULL) {
        printf("%d ", p-&gt;data);  // 打印结点数据
        p = p-&gt;next;  // 指向下一个结点
    }
    printf("\n");  // 换行
    return 0;  // 打印成功
}

// 求链队列长度
int Length(LinkQueue Q){
    if (Empty(Q)) {
        return 0;  // 队空，长度为0
    }
    int len = 0;  // 长度
    LinkNode *p = Q.front-&gt;next;  // 计算结点
    while (p != NULL) {
        len++;  // 长度加1
        p = p-&gt;next;  // 指向下一个结点
    }
    return len;  // 返回长度
}

// 求链队列长度 不带头结点
int LengthWithoutFirstNode(LinkQueue Q){
    if (EmptyWithoutFirstNode(Q)) {
        return 0;  // 队空，长度为0
    }
    int len = 0;  // 长度
    LinkNode *p = Q.front;  // 计算结点
    while (p != NULL) {
        len++;  // 长度加1
        p = p-&gt;next;  // 指向下一个结点
    }
    return len;  // 返回长度
}

// 销毁链队列
int DestroyQueue(LinkQueue &amp;Q){
    if (Empty(Q)) {
        return -1;  // 队空，无法销毁返回-1
    }
    LinkNode *p = Q.front-&gt;next;  // 销毁结点
    while (p != NULL) {
        LinkNode *q = p-&gt;next;  // 保存下一个结点
        free(p);  // 释放结点
        p = q;  // 指向下一个结点
    }
    Q.front-&gt;next = NULL;  // 队头指针指向空
    Q.rear = Q.front;  // 队尾指针指向队头
    return 0;  // 销毁成功
}

// 销毁链队列 不带头结点
int DestroyQueueWithoutFirstNode(LinkQueue &amp;Q){
    if (EmptyWithoutFirstNode(Q)) {
        return -1;  // 队空，无法销毁返回-1
    }
    LinkNode *p = Q.front;  // 销毁结点
    while (p != NULL) {
        LinkNode *q = p-&gt;next;  // 保存下一个结点
        free(p);  // 释放结点
        p = q;  // 指向下一个结点
    }
    Q.front = NULL;  // 队头指针指向空
    Q.rear = NULL;  // 队尾指针指向空
    return 0;  // 销毁成功
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date><![CDATA[2022-02-15 22:46:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-15 14:46:48]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-15 22:46:48]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-15 14:46:48]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stackandqueue]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"><![CDATA[数据结构]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[数据结构——串]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/19/sstring/</link>
		<pubDate>Fri, 18 Feb 2022 19:39:43 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=441</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>头文件SString.h</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// SString.h - 串
#include &lt;iostream&gt;

#define MAXLEN 255

/*********************************************************************************************************************************
 * 数据类型一览
 * SString 定长顺序存储（静态数组）
 * HString 串的顺序存储 可拓展长度顺序存储（指针数组）
 * StringNode, *Node 串的链式存储
 * 
 * 操作函数 共享栈操作在函数名后加0或者1 不带头结点的链栈操作在函数名后加WithoutFirstNode
 * bool StrAssign(&amp;T, *ch) 赋值操作，将字符串ch复制到串T中 正常结束返回1，否则返回0
 * bool StrCopy(&amp;T, S) 复制操作，将S串复制到串T中 正常结束返回1，否则返回0
 * bool StrEmpty(S) 判空 空返回1，否则返回0
 * int StrLength(S) 求长度 返回串的长度
 * bool ClearString(S) 清空 正常结束返回1，否则返回0
 * bool DestroyString(&amp;S) 销毁 正常结束返回1，否则返回0
 * bool Concat(&amp;T, S1, S2) 串连接,将S1和S2连接后存入T 正常结束返回1，否则返回0
 * bool SubString(&amp;Sub, S, pos, len) 求子串，求出串S中位于pos位置的长度为len长度的子串存入Sub 正常结束返回1，否则返回0
 * int StrCompare(S, T) 比较操作 比较串S和T的大小，返回值小于0，等于0，大于0，分别表示S&lt;T，S=T，S&gt;T
 * int Index(S, T) 定位操作，求出串S中第一次出现串T的位置 返回值为定位串T的位置，如果没有找到返回0
 * int Index2(S, T) 朴素模式匹配，求出串S中第一次出现串T的位置 返回值为定位串T的位置，如果没有找到返回0
 * void get_next(T, next) 求模式串T的next数组
 * void get_nextval(T, nextval) 求模式串优化后的nextval数组
 * int Index_KMP(S, T) KMP算法求出串S中第一次出现串T的位置 返回值为定位串T的位置，如果没有找到返回0
 * 
 *********************************************************************************************************************************/

// 串的顺序存储 定长顺序存储（静态数组）
typedef struct SString{
    char ch&#091;MAXLEN];  // 每个分量存储一个字符
    int length;  // 串的实际长度
}SString;

// 串的顺序存储 可拓展长度顺序存储（指针数组）
typedef struct HString{
    char *ch;  // 按串长分配存储区，ch指向串的基地址
    int length;  // 串的长度
}HString;
//HString S; S.ch = (char *)malloc(MAXLEN*sizeof(char)); S.length = 0;

// 串的链式存储
typedef struct StringNode{
    char ch;  // 每个结点存1字符，若要提高存储密度，则可设置为多个字符数组
    struct StringNode *next;
}StringNode, *Node;

// 赋值操作
bool StrAssign(SString &amp;T, char *ch){
    int i = 1;
    while(ch&#091;i] != '\0'){
        T.ch&#091;i] = ch&#091;i];
        i++;
    }
    T.length = i;
    return true;
}

// 复制操作
bool StrCopy(SString &amp;T, SString S){
    int i = 1;
    while(S.ch&#091;i] != '\0'){
        T.ch&#091;i] = S.ch&#091;i];
        i++;
    }
    T.length = i;
    return true;
}

// 判空
bool StrEmpty(SString S){
    return S.length == 0;
}

// 求长度
int StrLength(SString S){
    return S.length;
}

// 清空
bool ClearString(SString &amp;S){
    S.length = 0;
    return true;
}

// 销毁
bool DestroyString(SString &amp;S){
    S.length = 0;
    return true;
}

// 串连接
bool Concat(SString &amp;T, SString S1, SString S2){
    int i = 1;
    while(S1.ch&#091;i] != '\0'){
        T.ch&#091;i] = S1.ch&#091;i];
        i++;
    }
    while(S2.ch&#091;i] != '\0'){
        T.ch&#091;i] = S2.ch&#091;i];
        i++;
    }
    T.length = i;
    return true;
}

// 求子串
bool SubString(SString &amp;Sub, SString S, int pos, int len){
    if(pos &lt; 1 || pos &gt; S.length || len &lt; 0 || len &gt; S.length - pos + 1){  // 子串位置不合法
        return false;
    }
    Sub.length = len;
    for(int i = 0; i &lt; len; i++){
        Sub.ch&#091;i] = S.ch&#091;pos - 1 + i];
    }
    return true;
}

// 比较操作
int StrCompare(SString S, SString T){
    for(int i = 0; i &lt; S.length &amp;&amp; i &lt; T.length; i++){
        if(S.ch&#091;i] != T.ch&#091;i]){
            return S.ch&#091;i]-T.ch&#091;i];
        }
    }
    return S.length - T.length;
}

// 定位操作
int Index(SString S, SString T){
    int i = 1, n = S.length, m = T.length;
    SString Sub;
    while(i &lt;= n - m + 1){
        if(SubString(Sub, S, i, m) &amp;&amp; StrCompare(Sub, T) == 0){
            return i;
        }
        i++;
    }
}

// 朴素模式匹配
int Index2(SString S, SString T){
    int k = 1;  // 当前匹配的字符位置
    int i = k, j = 1;
    while(i &lt;= S.length &amp;&amp; j &lt;= T.length){
        if(S.ch&#091;i] == T.ch&#091;j]){
            i++;  // 继续比较后续字符
            j++;
        }else{
            k++;  // 匹配失败，向后移动匹配字符位置
            i = k;
            j = 1;
        }
    }
    if(j &gt; T.length){
        return k;
    }else{
        return 0;
    }
}

// KMP算法：朴素模式算法优化
int Index_KMP_Need_Next(SString S, SString T, int next&#091;]){  // 传入next数组
    // 例：google的next数组为next&#091;7] = {0, 0, 1, 1, 1, 2, 1}
    int i = 1, j = 1;
    while(i &lt;= S.length &amp;&amp; j &lt;= T.length){
        if(j == 0 || S.ch&#091;i] == T.ch&#091;j]){  // 通过j==0来判断是否是第一位不相符，然后i，j都加一以至于可以i向后移，j归为1
            i++;
            j++;
        }else{
            j = next&#091;j];
        }
    }
    if(i &gt; T.length){
        return i-T.length;        
    }else{
        return 0;
    }
}

// 求模式串T的next数组
void get_next(SString T, int next&#091;]){
    int i = 0, j = 0;
    next&#091;1] = 0;
    while(i &lt; T.length){
        if(j == 0 || T.ch&#091;i] == T.ch&#091;j]){
            ++i;
            ++j;
            // 若pi等于pj，则next&#091;j+1] = next&#091;j] + 1
            next&#091;i] = j;
        }else{
            j = next&#091;j];
        }
    }
}

// next数组优化为nextval数组
void get_nextval(SString T, int nextval&#091;]){
    int *next = new int&#091;T.length+1];
    get_next(T, next);
    nextval&#091;1] = 0;
    for(int j = 2; j &lt;=T.length; j++){
        if(T.ch&#091;j] == T.ch&#091;next&#091;j]]){
            nextval&#091;j] = nextval&#091;next&#091;j]];
        }else{
            nextval&#091;j] = next&#091;j];
        }
    }
    delete&#091;] next;
}

// KMP算法
int Index_KMP(SString S, SString T){
    int i = 1, j = 1;
    int *next = new int&#091;T.length+1];
    get_next(T, next);  // 求模式串T的next数组 时间复杂度O(m)
    while(i &lt;= S.length &amp;&amp; j &lt;= T.length){  // 时间复杂度O(n)
        if(j == 0 || S.ch&#091;i] == T.ch&#091;j]){
            i++;
            j++;  // 继续比较后继字符
        }else{
            j = next&#091;j];  // 模式串向右移动
        }
    }
    delete&#091;] next;
    if(j&gt;T.length){
        return i-T.length;  // 匹配成功返回匹配的位置
    }else{
        return 0;
    }
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date><![CDATA[2022-02-19 03:39:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-18 19:39:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-19 03:39:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-18 19:39:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sstring]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"><![CDATA[数据结构]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[JDK安装以及环境变量配置]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/23/jdk_install/</link>
		<pubDate>Wed, 23 Feb 2022 13:07:25 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=444</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>下载JDK</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>打开<a href="https://www.oracle.com/cn/java/" data-type="URL" data-id="https://www.oracle.com/cn/java/" target="_blank" rel="noreferrer noopener">Oracle官网https://www.oracle.com/cn/java/</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>选择立即下载java跳转下载界面，选择对应的版本后下载jdk</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>64位Windows：</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>jdk17下载链接：<a rel="noreferrer noopener" href="https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.exe" target="_blank">https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.exe</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>64位Ubuntu（基于树莓派）：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>ubuntu@ubuntu:~$ mkdir jdk
ubuntu@ubuntu:~$ cd jdk
ubuntu@ubuntu:~/jdk$ wget https://download.oracle.com/java/17/latest/jdk-17_linux-aarch64_bin.tar.gz</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>安装jdk</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>Windows：</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>打开安装程序，<strong>复制安装路径</strong>如：<strong>C:\Program Files\Java\jdk-17.0.2\</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Ubuntu：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>ubuntu@ubuntu:~/jdk$ sudo tar -zxvf jdk-17_linux-aarch64_bin.tar.gz</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>需要记住解压路径</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>添加环境变量</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>Windows：</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>此电脑（右键）——属性——系统——高级系统设置——系统属性——环境变量</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在系统变量里新建<strong>变量名</strong>：<strong>JAVA_HOME</strong>  <strong>变量值</strong>为安装时<strong>复制的地址</strong>：C:\Program Files\Java\jdk-17.0.2\</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在系统变量里找到变量名为<strong>Path</strong>的变量，在末尾添加<strong>%JAVA_HOME%bin</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Ubuntu：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>ubuntu@ubuntu:~/jdk$ sudo vim /etc/profile</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>在末尾添加：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>JAVA_HOME=/home/ubuntu/java/jdk/jdk-17.0.2/ # 值为解压路径
CLASSPATH=$JAVA_HOME/lib/
PATH=$PATH:$JAVA_HOME/bin
export PATH JAVA_HOME CLASSPATH</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>保存并退出，并且更新源</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>ubuntu@ubuntu:~/jdk$ source /etc/profile</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>验证</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>Windows：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Microsoft Windows &#091;版本 10.0.22000.493]
(c) Microsoft Corporation。保留所有权利。

C:\Users\zhuan&gt;java -version
java version "17.0.2" 2022-01-18 LTS
Java(TM) SE Runtime Environment (build 17.0.2+8-LTS-86)
Java HotSpot(TM) 64-Bit Server VM (build 17.0.2+8-LTS-86, mixed mode, sharing)

C:\Users\zhuan&gt;javac -version
javac 17.0.2

C:\Users\zhuan&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>Ubuntu：</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>ubuntu@ubuntu:~/jdk$ java -version
java version "17.0.2" 2022-01-18 LTS
Java(TM) SE Runtime Environment (build 17.0.2+8-LTS-86)
Java HotSpot(TM) 64-Bit Server VM (build 17.0.2+8-LTS-86, mixed mode, sharing)
ubuntu@ubuntu:~/jdk$ javac -version
javac 17.0.2
ubuntu@ubuntu:~/jdk$</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 21:07:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 13:07:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-23 21:07:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-23 13:07:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jdk_install]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MinGW环境安装]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/23/mingw_install/</link>
		<pubDate>Wed, 23 Feb 2022 13:28:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>下载</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在<a href="https://sourceforge.net/projects/mingw-w64/files/" data-type="URL" data-id="https://sourceforge.net/projects/mingw-w64/files/" target="_blank" rel="noreferrer noopener">sourceforge仓库（https://sourceforge.net/projects/mingw-w64/files/）</a>下载文件</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>下载列表如下：</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted"><strong>MinGW-W64 GCC-8.1.0</strong>
x86_64-posix-sjlj
x86_64-posix-seh
x86_64-win32-sjlj
x86_64-win32-seh
i686-posix-sjlj
i686-posix-dwarf
i686-win32-sjlj
i686-win32-dwarf</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>前4个为64位，后四个为32位。其中posix为一般使用，win32为运行Windows程序</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>配置环境变量</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>将下载的压缩包解压，并且获取<strong>其内bin文件夹的地址</strong>，如：C:\Program Files\mingw64\bin</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>此电脑（右键）——属性——系统——高级系统设置——系统属性——环境变量</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>将地址加入系统变量的<strong>Path</strong>变量后</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>测试</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>Microsoft Windows &#091;版本 10.0.22000.493]
(c) Microsoft Corporation。保留所有权利。

C:\Users\zhuan&gt;gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=C:/Program\ Files/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe
Target: x86_64-w64-mingw32
Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib '
Thread model: posix
gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)

C:\Users\zhuan&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>成功输出版本信息8.1.0</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 21:28:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 13:28:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-23 21:28:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-23 13:28:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mingw_install]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[MySQL的配置安装]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/23/mysql_install/</link>
		<pubDate>Wed, 23 Feb 2022 14:34:01 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=450</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>下载</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>进入MySQL官网<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noreferrer noopener">下载（https://dev.mysql.com/downloads/mysql/）</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>选择对应的版本下载</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>配置</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>将下载好的文件夹解压，并且获取<strong>文件夹的地址</strong>，如：C:\Users\zhuan\mysql-8.0.28-winx64</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在该目录下创建新文本文件，内容如下：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&#091;mysql]
# mysql默认字符集
default-character-set=utf8
&#091;mysqld]
# 端口
port=3306
# mysql安装目录
basedir=C:\Users\zhuan\mysql-8.0.28-winx64 #更改为文件夹地址
# 数据存放目录
datadir=C:\Users\zhuan\mysql-8.0.28-winx64\data #更改为文件夹地址+\data
# 最大连接数
max_connections=20
# 服务器端编码
character-set-server=utf8
# 创建新表时使用默认存储引擎
default-storage-engine=INNODB
# 设置协议认证方式
default_authentication_plugin=mysql_native_password</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>将文本文件更改名称为my.ini</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在该文件夹内创建一个文件夹命名为data</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在命令提示窗口进入bin目录下运行命令：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>C:\Users\zhuan\mysql-8.0.28-winx64\bin&gt;<strong>mysqld -install</strong>
Service successfully installed.

C:\Users\zhuan\mysql-8.0.28-winx64\bin&gt;<strong>mysqld --initialize-insecure --user=mysql</strong>

C:\Users\zhuan\mysql-8.0.28-winx64\bin&gt;<strong>net start mysql</strong>
MySQL 服务正在启动 .
MySQL 服务已经启动成功。


C:\Users\zhuan\mysql-8.0.28-winx64\bin&gt;<strong>mysql -u root -p</strong>
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.28 MySQL Community Server - GPL

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql&gt; <strong>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '新密码';</strong>
Query OK, 0 rows affected (0.01 sec)

mysql&gt; <strong>quit</strong>
Bye

C:\Users\zhuan\mysql-8.0.28-winx64\bin&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>此电脑（右键）——属性——系统——高级系统设置——系统属性——环境变量</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>将文件夹地址加上\bin后加入系统变量的<strong>Path</strong>变量</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>450</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 22:34:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 14:34:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-23 22:34:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-23 14:34:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mysql_install]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Tomcat安装配置]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/23/tomcat_install/</link>
		<pubDate>Wed, 23 Feb 2022 15:21:26 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=455</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>下载</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="https://tomcat.apache.org/" data-type="URL" data-id="https://tomcat.apache.org/" target="_blank" rel="noreferrer noopener">官网下载（https://tomcat.apache.org/）</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>选择对应的版本的core下载</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>eg.64位Windows10的<a href="https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.16/bin/apache-tomcat-10.0.16-windows-x64.zip" data-type="URL" data-id="https://dlcdn.apache.org/tomcat/tomcat-10/v10.0.16/bin/apache-tomcat-10.0.16-windows-x64.zip">下载链接</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>配置</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>解压并且获取<strong>文件夹的地址</strong>，如：C:\Users\zhuan\apache-tomcat-10.0.16</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在"系统变量"里新建变量名：<strong>CATALINA_BASE</strong>，变量值：C:\Users\zhuan\apache-tomcat-10.0.16（此处为你的解压包路径）</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在"系统变量"里新建变量名：<strong>CATALINA_HOME</strong>，变量值：C:\Users\zhuan\apache-tomcat-10.0.16</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在"系统变量"里打开<strong>Path</strong>变量，添加变量值：<strong>%CATALINA_HOME%\lib</strong> 和 <strong>%CATALINA_HOME%\bin</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>安装服务</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>C:\Users\zhuan\apache-tomcat-10.0.16\bin&gt;<strong>service.bat install</strong>
Installing the service 'Tomcat10' ...
Using CATALINA_HOME:    "C:\Users\zhuan\apache-tomcat-10.0.16"
Using CATALINA_BASE:    "C:\Users\zhuan\apache-tomcat-10.0.16"
Using JAVA_HOME:        "C:\Program Files\Java\jdk-17.0.2\"
Using JRE_HOME:         "C:\Program Files\Java\jdk-17.0.2\"
Using JVM:              "C:\Program Files\Java\jdk-17.0.2\\bin\server\jvm.dll"
The service 'Tomcat10' has been installed.

C:\Users\zhuan\apache-tomcat-10.0.16\bin&gt;</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>运行</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>访问bin文件夹下的startup.bat文件或者tomcat10.exe或者tomcat10w.exe打开服务</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>访问本机8080端口即可访问Tomcat</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>遇到的问题</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>localhost:8080无法打开页面，而127.0.0.1:8080可以打开页面</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>更改host文件（C:/WINDOWS/system32/drivers/etc/hosts）将下列解析添加进host</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>127.0.0.1       localhost
::1             localhost</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 23:21:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 15:21:26]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-23 23:21:26]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-23 15:21:26]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tomcat_install]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[数据结构——树与二叉树]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/03/treeandbinarytree/</link>
		<pubDate>Thu, 03 Mar 2022 15:39:11 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=465</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>头文件TreeAndBinaryTree.h</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// TreeAndBinaryTree.h - 树与二叉树
#include &lt;iostream&gt;

#define MAX_TREE_SIZE 100

/*********************************************************************************************************************************
 * 数据类型一览
 * ElemType 数据部分
 * TreeNoe 二叉树 顺序存储
 * BiTNode, *BiTree 二叉树 链式存储
 * ThreadNode, *ThreadTree 线索二叉树
 * BSTNode, *BSTree 二叉排序树
 * AVLNode, *AVLTree 二叉平衡树
 * HuffmanNode, *HuffmanTree 哈夫曼树
 * 
 * 操作函数 共享栈操作在函数名后加0或者1 不带头结点的链栈操作在函数名后加WithoutFirstNode
 * void InitTree(tree&#091;], n) 初始化顺序存储二叉树
 * int InsertBiTree(&amp;T, e) 二叉树的链式存储插入二叉树,默认左子树如果左子树满则插入右子树 插入根节点返回0，插入左子树返回1，插入右子树返回2
 * void Print(T) 输出二叉树结点
 * void PreOrder(T) 二叉树的链式存储先序遍历
 * void InOrder(T) 二叉树的链式存储中序遍历
 * void PostOrder(T) 二叉树的链式存储后序遍历
 * int TreeDepth(T) 利用递归求树的深度 返回树的深度
 * void LevelOrder(T) 二叉树的层序遍历
 * void Visit(*q) 访问节点
 * void InThread(T) 二叉树的链式存储中序遍历
 * void PreThread(T) 二叉树的链式存储先序遍历
 * void PostThread(T) 二叉树的链式存储后序遍历
 * void CreateInThread(&amp;T) 中序线索化二叉树T
 * void CreatePreThread(&amp;T) 先序线索化二叉树T
 * void CreatePostThread(&amp;T) 后序线索化二叉树T
 * ThreadNode *InOrderPre(*q) 中序线索二叉树找指定结点的中序前驱pre 返回其前驱结点，无法找到则输出信息并返回NULL
 * ThreadNode *InOrderNext(*q) 中序线索二叉树找指定结点的中序后继next 返回其后继结点
 * ThreadNode *PreOrderPre(*q) 先序线索二叉树找指定结点的先序前驱pre 返回其前驱结点
 * ThreadNode *PreOrderNext(*q) 先序线索二叉树找指定结点的先序后继next 返回其后继结点
 * ThreadNode *PostOrderPre(*q) 后序线索二叉树找指定结点的后序前驱pre 返回其前驱结点
 * ThreadNode *PostOrderNext(*q) 后序线索二叉树找指定结点的后序后继next 返回其后继结点，无法找到则输出信息并返回NULL
 * BSTNode *SearchBST_Recursive(T, key) 二叉排序树的递归查找 返回查找到的结点，没有则返回NULL
 * BSTNode *SearchBST(T, key) 二叉排序树的非递归查找 返回查找到的结点，没有则返回NULL
 * void InsertBST_Recursive(&amp;T, x) 二叉排序树的递归插入
 * void InsertBST(&amp;T, x) 二叉排序树的非递归插入
 * void DeleteBST(&amp;T, key) 二叉排序树的删除
 * void CreateBSTree(&amp;T, str&#091;], n) 二叉排序树的链式存储创建
 * AVLTree SingleRotateWithLeft(AVLTree &amp;T) LL右单旋
 * AVLTree SingleRotateWithRight(AVLTree &amp;T) LL左单旋
 * AVLTree DoubleRotateWithLeft(AVLTree &amp;T） LR双旋
 * AVLTree DoubleRotateWithRight(AVLTree &amp;T) RL双旋
 * void InsertAVL(&amp;T, x) 二叉平衡树的插入
 * void CreateHuffmanTree(&amp;T, n) 构造哈夫曼树
 * 
 *********************************************************************************************************************************/

// 数据部分用ElemType结构体表示
struct ElemType {
    int value;
};

// 二叉树的顺序存储
struct TreeNoe{
    ElemType data;
    bool isEmpty;
};

// 二叉树的链式存储
typedef struct BiTNode{
    ElemType data;  // 数据域
    struct BiTNode *lchild, *rchild;  // 左右孩子指针
}BiTNode, *BiTree;  // n个结点对应2n个指针对应n+1个空链域


// 初始化二叉树的顺序存储
void InitTree(TreeNoe tree&#091;], int n){
    for (int i = 0; i &lt; n; i++) {
        tree&#091;i].isEmpty = true;
    }
}

// 二叉树的链式存储插入根节点
void CreateBiTree(BiTree &amp;T, ElemType e){
    T = (BiTree)malloc(sizeof(BiTNode));
    if (T == NULL) {
        std::cout &lt;&lt; "分配空间失败" &lt;&lt; std::endl;
        exit(0);
    }
    T-&gt;data = e;
    T-&gt;lchild = NULL;
    T-&gt;rchild = NULL;
}

// 二叉树的链式存储插入二叉树（默认左子树如果左子树满则插入右子树）
int InsertBiTree(BiTree &amp;T, ElemType e){
    if (T == NULL) {
        CreateBiTree(T, e);
        return 0;  // 插入根节点
    }
    if (T-&gt;lchild == NULL) {
        CreateBiTree(T-&gt;lchild, e);
        return 1;  // 插入左子树
    }
    if (T-&gt;rchild == NULL) {
        CreateBiTree(T-&gt;rchild, e);
        return 2;  // 插入右子树
    }
    return -1;
}

// 输出二叉树结点
void Print(BiTree T){
    std::cout &lt;&lt; T-&gt;data.value &lt;&lt; " ";
}

// 二叉树的链式存储 先序遍历
void PreOrder(BiTree T){
    if (T != NULL) {
        Print(T);
        PreOrder(T-&gt;lchild);
        PreOrder(T-&gt;rchild);
    }
}

// 二叉树的链式存储 中序遍历
void InOrder(BiTree T){
    if (T != NULL) {
        InOrder(T-&gt;lchild);
        Print(T);
        InOrder(T-&gt;rchild);
    }
}

// 二叉树的链式存储 后序遍历
void PostOrder(BiTree T){
    if (T != NULL) {
        PostOrder(T-&gt;lchild);
        PostOrder(T-&gt;rchild);
        Print(T);
    }
}

// 利用递归求树的深度
int TreeDepth(BiTree T){
    if (T == NULL) {
        return 0;
    }
    int ldepth = TreeDepth(T-&gt;lchild);
    int rdepth = TreeDepth(T-&gt;rchild);
    return (ldepth &gt; rdepth ? ldepth : rdepth) + 1;
}

// 层序遍历辅助链队列
typedef struct LinkNode{
    BiTNode *data;
    struct LinkNode *next;
}LinkNode;
typedef struct LinkQueue{
    LinkNode *front, *rear;  // 队头队尾指针
}LinkQueue;
void InitQueue(LinkQueue &amp;Q){
    Q.front = Q.rear = (LinkNode *)malloc(sizeof(LinkNode));
    Q.front-&gt;next = NULL;
}
bool EmptyQueue(LinkQueue Q){
    return Q.front == Q.rear;
}
void EnQueue(LinkQueue &amp;Q, BiTNode *T){
    LinkNode *s = (LinkNode *)malloc(sizeof(LinkNode));
    s-&gt;data = T;
    s-&gt;next = NULL;
    Q.rear-&gt;next = s;
    Q.rear = s;
}
BiTree DeQueue(LinkQueue &amp;Q){
    LinkNode *p = Q.front-&gt;next;
    BiTNode *T = p-&gt;data;
    Q.front-&gt;next = p-&gt;next;
    if (Q.rear == p) {
        Q.rear = Q.front;
    }
    free(p);
    return T;
}

// 二叉树的层序遍历
void LevelOrder(BiTree T){
    if (T == NULL) {
        return;
    }
    LinkQueue Q;
    InitQueue(Q);
    EnQueue(Q, T);
    while (!EmptyQueue(Q)) {
        T = DeQueue(Q);
        Print(T);
        if (T-&gt;lchild != NULL) {
            EnQueue(Q, T-&gt;lchild);
        }
        if (T-&gt;rchild != NULL) {
            EnQueue(Q, T-&gt;rchild);
        }
    }
}

// 线索二叉树
typedef struct ThreadNode{
    ElemType data;
    struct ThreadNode *lchild, *rchild;
    int ltag,rtag;  // 左右线索标志，为0时指向孩子，为1时指向线索
}ThreadNode, *ThreadTree;

ThreadNode *Pre = NULL;

// 访问节点
void Visit(ThreadNode *q){
    if(q-&gt;lchild == NULL){
        q-&gt;lchild = Pre;  // 左子树为空，建立前驱线索
        q-&gt;ltag = 1;
    }
    if(Pre == NULL &amp;&amp; Pre-&gt;rchild == NULL){
        Pre-&gt;rchild = q;  // 建立前驱节点的后继线索
        Pre-&gt;rtag = 1;
    }
    Pre = q;
}

// 二叉树的链式存储 中序遍历
void InThread(ThreadTree T){
    if (T != NULL) {
        InThread(T-&gt;lchild);
        Visit(T);
        InThread(T-&gt;rchild);
    }
}

// 二叉树的链式存储 先序遍历
void PreThread(ThreadTree T){
    if (T != NULL) {
        Visit(T);
        if(T-&gt;ltag == 0){
            PreThread(T-&gt;lchild);  // 判断lchild是否指向的是孩子
            // 如果lchild指向的是前驱则不需要再进行递归遍历
        }
        PreThread(T-&gt;rchild);
    }
}

// 二叉树的链式存储 后序遍历
void PostThread(ThreadTree T){
    if (T != NULL) {
        PostThread(T-&gt;lchild);
        PostThread(T-&gt;rchild);
        Visit(T);
    }
}

// 中序线索化二叉树T
void CreateInThread(ThreadTree &amp;T){
    Pre = NULL;
    if(T != NULL){
        InThread(T);
        if(Pre-&gt;rchild == NULL){
            Pre-&gt;rtag = 1;  // 手动处理最后一个结点的右指针标识
        }
    }
}

// 先序线索化二叉树T
void CreatePreThread(ThreadTree &amp;T){
    Pre = NULL;
    if(T != NULL){
        PreThread(T);
        if(Pre-&gt;rchild == NULL){
            Pre-&gt;rtag = 1;  // 手动处理最后一个结点的右指针标识
        }
    }
}

// 后序线索化二叉树T
void CreatePostThread(ThreadTree &amp;T){
    Pre = NULL;
    if(T != NULL){
        PostThread(T);
        if(Pre-&gt;rchild == NULL){
            Pre-&gt;rtag = 1;  // 手动处理最后一个结点的右指针标识
        }
    }
}

// 中序线索二叉树找指定结点的中序前驱pre
ThreadNode *InOrderPre(ThreadNode *q){
    if(q-&gt;ltag == 1){  // 如果左指针指向的是前驱
        return q-&gt;lchild;
    }
    // 否则，左指针指向的是左边孩子，则循环查找前驱的前驱
    ThreadNode *p = q-&gt;lchild;
    while(p-&gt;rtag == 0){
        p = p-&gt;rchild;
    }
    // q的左孩子的右孩子方向的叶子结点即为q的前驱
    return p;
}

// 中序线索二叉树找指定结点的中序后继next
ThreadNode *InOrderNext(ThreadNode *q){
    if(q-&gt;rtag == 1){  // 如果右指针指向的是后继
        return q-&gt;rchild;
    }
    // 否则，右指针指向的是右边孩子，则循环查找后继的后继
    ThreadNode *p = q-&gt;rchild;
    while(p-&gt;ltag == 0){
        p = p-&gt;lchild;
    }
    // q的右孩子的左孩子方向的叶子结点即为q的后继
    return p;
}

// 先序线索二叉树找指定结点的先序前驱pre
ThreadNode *PreOrderPre(ThreadNode *q){
    if(q-&gt;ltag == 1){  // 如果左指针指向的是前驱
        return q-&gt;lchild;
    }
    // 否则，左指针指向的是左边孩子，则根据先序排序 根 -&gt; 左 -&gt; 右 无法判断前驱
    std::cout &lt;&lt; "无法找到该结点的先序前驱！" &lt;&lt; std::endl;
    return NULL;
}

// 先序线索二叉树找指定结点的先序后继next
ThreadNode *PreOrderNext(ThreadNode *q){
    if(q-&gt;rtag == 1){  // 如果右指针指向的是后继
        return q-&gt;rchild;
    }
    if(q-&gt;lchild != NULL){  // 如果左孩子不为空，则左孩子的前驱即为后继
        return q-&gt;lchild;
    }else{  // 根据先序排序 根 -&gt; 左 -&gt; 右，且左孩子为空，则右孩子的前驱即为后继
        return q-&gt;rchild;
    }
}

// 后序线索二叉树找指定结点的后序前驱pre
ThreadNode *PostOrderPre(ThreadNode *q){
    if(q-&gt;ltag == 1){  // 如果左指针指向的是前驱
        return q-&gt;lchild;
    }
    if(q-&gt;rchild != NULL){  // 如果右孩子不为空，则右孩子的前驱即为前驱
        return q-&gt;rchild;
    }else{  // 根据后序排序 左 -&gt; 右 -&gt; 根，且右孩子为空，则左孩子的前驱即为前驱
        return q-&gt;lchild;
    }
}

// 后序线索二叉树找指定结点的后序后继next
ThreadNode *PostOrderNext(ThreadNode *q){
    if(q-&gt;rtag == 1){  // 如果左指针指向的是前驱
        return q-&gt;rchild;
    }
    // 否则，右指针指向的是右边孩子，则根据后序排序 左 -&gt; 右 -&gt; 根 无法判断后继
    std::cout &lt;&lt; "无法找到该结点的后序后继！" &lt;&lt; std::endl;
    return NULL;
}

// 二叉排序树
typedef struct BSTNode{
    int data;
    struct BSTNode *lchild, *rchild;
}BSTNode, *BSTree;

// 查找二叉排序树中指定结点 递归
BSTNode *SearchBST_Recursive(BSTree T, int key){
    if(T == NULL || T-&gt;data == key){
        return T;
    }
    if(key &lt; T-&gt;data){
        return SearchBST_Recursive(T-&gt;lchild, key);
    }else{
        return SearchBST_Recursive(T-&gt;rchild, key);
    }
}

// 查找二叉排序树中指定结点 非递归
BSTNode *SearchBST(BSTree T, int key){
    while(T != NULL &amp;&amp; T-&gt;data != key){
        if(key &lt; T-&gt;data){
            T = T-&gt;lchild;
        }else{
            T = T-&gt;rchild;
        }
    }
    return T;
}

// 插入二叉排序树 递归
void InsertBST_Recursive(BSTree &amp;T, int x){
    if(T == NULL){
        T = (BSTree)malloc(sizeof(BSTNode));
        T-&gt;data = x;
        T-&gt;lchild = T-&gt;rchild = NULL;
    }else if(x == T-&gt;data){
        std::cout &lt;&lt; "该结点已存在！" &lt;&lt; std::endl;
    }else if(x &lt; T-&gt;data){
        InsertBST_Recursive(T-&gt;lchild, x);
    }else{
        InsertBST_Recursive(T-&gt;rchild, x);
    }
}

// 插入二叉排序树 非递归
void InsertBST(BSTree &amp;T, int x){
    BSTree p = T, q = NULL;
    while(p != NULL &amp;&amp; p-&gt;data != x){
        q = p;
        if(x &lt; p-&gt;data){
            p = p-&gt;lchild;
        }else{
            p = p-&gt;rchild;
        }
    }
    if(p == NULL){
        p = (BSTree)malloc(sizeof(BSTNode));
        p-&gt;data = x;
        p-&gt;lchild = p-&gt;rchild = NULL;
        if(q == NULL){
            T = p;
        }else if(x &lt; q-&gt;data){
            q-&gt;lchild = p;
        }else{
            q-&gt;rchild = p;
        }
    }else{
        std::cout &lt;&lt; "该结点已存在！" &lt;&lt; std::endl;
    }
}

// 删除二叉排序树
void DeleteBST(BSTree &amp;T, int key){
    BSTree p = T, q = NULL;
    while(p != NULL &amp;&amp; p-&gt;data != key){
        q = p;
        if(key &lt; p-&gt;data){
            p = p-&gt;lchild;
        }else{
            p = p-&gt;rchild;
        }
    }
    if(p == NULL){
        std::cout &lt;&lt; "该结点不存在！" &lt;&lt; std::endl;
    }else{
        if(p-&gt;lchild == NULL){
            if(q == NULL){
                T = p-&gt;rchild;
            }else if(p == q-&gt;lchild){
                q-&gt;lchild = p-&gt;rchild;
            }else{
                q-&gt;rchild = p-&gt;rchild;
            }
        }else if(p-&gt;rchild == NULL){
            if(q == NULL){
                T = p-&gt;lchild;
            }else if(p == q-&gt;lchild){
                q-&gt;lchild = p-&gt;lchild;
            }else{
                q-&gt;rchild = p-&gt;lchild;
            }
        }else{
            BSTree s = p-&gt;lchild;
            while(s-&gt;rchild != NULL){
                s = s-&gt;rchild;
            }
            p-&gt;data = s-&gt;data;
            DeleteBST(p-&gt;lchild, s-&gt;data);
        }
    }
}

// 创建二叉排序树
void CreateBSTree(BSTree &amp;T, int str&#091;], int n){
    T = NULL;
    for(int i = 0; i &lt; n; i++){
        InsertBST(T, str&#091;i]);
    }
}

// 平衡二叉树
typedef struct AVLNode{
    int data;  // 数据域
    int height;  // 平衡因子，即高度
    struct AVLNode *lchild, *rchild;
}AVLNode, *AVLTree;

// 求最大值
int Max(int a, int b){
    return a &gt; b ? a : b;
}

// LL右单旋转
AVLTree SingleRotateWithLeft(AVLTree &amp;T){
    AVLTree p = T-&gt;lchild;
    T-&gt;lchild = p-&gt;rchild;
    p-&gt;rchild = T;
    T-&gt;height = Max(T-&gt;lchild-&gt;height, T-&gt;rchild-&gt;height) + 1;
    p-&gt;height = Max(p-&gt;lchild-&gt;height, T-&gt;height) + 1;
    return p;
}

// RR左单旋转
AVLTree SingleRotateWithRight(AVLTree &amp;T){
    AVLTree p = T-&gt;rchild;
    T-&gt;rchild = p-&gt;lchild;
    p-&gt;lchild = T;
    T-&gt;height = Max(T-&gt;lchild-&gt;height, T-&gt;rchild-&gt;height) + 1;
    p-&gt;height = Max(p-&gt;rchild-&gt;height, T-&gt;height) + 1;
    return p;
}

// LR先左后右双旋转 即先变成LL结构再恢复平衡
AVLTree DoubleRotateWithLeft(AVLTree &amp;T){
    T-&gt;lchild = SingleRotateWithRight(T-&gt;lchild);
    return SingleRotateWithLeft(T);
}

// RL先右后左双旋转 即先变成RR结构再恢复平衡
AVLTree DoubleRotateWithRight(AVLTree &amp;T){
    T-&gt;rchild = SingleRotateWithLeft(T-&gt;rchild);
    return SingleRotateWithRight(T);
}

// 平衡二叉树的插入
void InsertAVL(AVLTree &amp;T, int x){
    if(T == NULL){
        T = (AVLTree)malloc(sizeof(AVLNode));
        T-&gt;data = x;
        T-&gt;lchild = T-&gt;rchild = NULL;
        T-&gt;height = 1;
    }else if(x == T-&gt;data){
        std::cout &lt;&lt; "该结点已存在！" &lt;&lt; std::endl;
    }else if(x &lt; T-&gt;data){
        InsertAVL(T-&gt;lchild, x);
        if(T-&gt;lchild-&gt;height - T-&gt;rchild-&gt;height == 2){
            if(T-&gt;lchild-&gt;lchild-&gt;height - T-&gt;lchild-&gt;rchild-&gt;height == 1){
                // 左左
                T = SingleRotateWithLeft(T);
            }else{
                // 左右
                T = DoubleRotateWithLeft(T);
            }
        }
    }else{
        InsertAVL(T-&gt;rchild, x);
        if(T-&gt;rchild-&gt;height - T-&gt;lchild-&gt;height == 2){
            if(T-&gt;rchild-&gt;rchild-&gt;height - T-&gt;rchild-&gt;lchild-&gt;height == 1){
                // 右右
                T = SingleRotateWithRight(T);
            }else{
                // 右左
                T = DoubleRotateWithRight(T);
            }
        }
    }
    T-&gt;height = (T-&gt;lchild-&gt;height &gt; T-&gt;rchild-&gt;height ? T-&gt;lchild-&gt;height : T-&gt;rchild-&gt;height) + 1;
}

// 构造哈夫曼树
typedef struct HuffmanNode{
    int weight;  // 权值
    int parent, lchild, rchild;  // 双亲，左孩子，右孩子
}HuffmanNode, *HuffmanTree;
// 构造哈夫曼树
void CreateHuffmanTree(HuffmanTree &amp;T, int n){
    int i, j, k;
    int *w = (int *)malloc(sizeof(int) * n);
    for(i = 0; i &lt; n; i++){
        std::cout &lt;&lt; "请输入第" &lt;&lt; i + 1 &lt;&lt; "个结点的权值：";
        std::cin &gt;&gt; w&#091;i];
    }
    for(i = 0; i &lt; n; i++){
        for(j = i + 1; j &lt; n; j++){
            if(w&#091;i] &gt; w&#091;j]){
                k = w&#091;i];
                w&#091;i] = w&#091;j];
                w&#091;j] = k;
            }
        }
    }
    T = (HuffmanTree)malloc(sizeof(HuffmanNode) * n);
    for(i = 0; i &lt; n; i++){
        T&#091;i].weight = w&#091;i];
        T&#091;i].parent = T&#091;i].lchild = T&#091;i].rchild = -1;
    }
    for(i = n - 1; i &gt; 0; i--){
        T&#091;i].parent = i - 1;
        T&#091;i - 1].lchild = i;
    }
}
</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>465</wp:post_id>
		<wp:post_date><![CDATA[2022-03-03 23:39:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-03 15:39:11]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-03 23:39:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-03 15:39:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[treeandbinarytree]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"><![CDATA[数据结构]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[47]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[八数码问题]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/10/eight_digital_problems/</link>
		<pubDate>Thu, 10 Mar 2022 09:23:51 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=475</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在3×3的棋盘上，摆有八个棋子，每个棋子上标有1至8的某一数字。棋盘中留有一个空格，空格用0来表示。空格周围的棋子可以移到空格中。要求解的问题是：给出一种初始布局（初始状态）和目标布局，找到一种移动方法，实现从初始布局到目标布局的转变。</p>
<!-- /wp:paragraph -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>思路</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>依据题意可以优先考虑<strong>广度优先算法</strong>(BFS)，创建一个队列先将根结点（初始状态）入队，然后再依次取出队列中队首元素，判断队首结点数据是否与目标数据相同。如果不同再，将空格可以移动的几个方向移动后的状态保存到结点后依次入队，重复上述出队操作直至找到目标数据或者队空。</p>
<!-- /wp:paragraph -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p><strong>深度优先算法</strong>要优先给出遍历的深度，因为数码移动没有限制，除了深度限制没有其他情况可以结束深度遍历，按照一个顺序（如上下左右）进行遍历，待循环到深度限制后开始回溯，回溯到第一个可以新增子节点的结点即可继续顺序往下遍历，此时需要跳过回溯到此节点次数个遍历方向（如第二次回溯到此结点，此结点能向上下左，第二次回溯到此节点要跳过往上和下的方向而去遍历左方向）。</p>
<!-- /wp:paragraph -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p><strong>启发式搜索(A*)</strong> ，在BFS搜索算法中，如果能在搜索的每一步都利用估价函数<strong>f(n)=g(n)+h(n)</strong>对表<strong>(队列)</strong>中的节点进行排序(<strong>g(n)表示从初始结点到任意结点n的实际代价，h(n)表示从结点n到目标点的启发式评估代价</strong>)，则该搜索算法为A*算法。由于估价函数中带有问题自身的启发性信息，因此，A算法又称为启发式搜索算法。对启发式搜索算法，又可根据搜索过程中选择扩展节点的范围，将其分为全局择优搜索算法和局部择优搜索算法。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在全局择优搜索中，每当需要扩展节点时，总是从表的所有节点中选择一个估价函数值最小的节点进行扩展。其搜索过程可能描述如下：</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>把初始节点originalData放入表中，f(originalData)=g(originalData)+h(originalData)；</li><li>如果表空则问题无解，如果表非空，取出表(队列)的第一个记录为temp；</li><li>判断temp是否是目标结点，如果是targetData则输出信息，结束运行；如果不是targetData则判断其是否有可拓展结点；</li><li>如果其不可拓展，则返回步骤2；</li><li>如果可拓展，则生成其可拓展的结点，计算每个结点的f(n)，并且设置指针指向其父节点后将其存入表中；</li><li>根据表中结点的f(n)值进行从小到大排序后返回步骤2；</li></ol>
<!-- /wp:list -->

<!-- wp:table {"hasFixedLayout":true} -->
<figure class="wp-block-table"><table class="has-fixed-layout"><tbody><tr><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">1</td><td class="has-text-align-center" data-align="center">2</td><td class="has-text-align-center" data-align="center">3</td><td class="has-text-align-center" data-align="center"></td><td></td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">1</td><td class="has-text-align-center" data-align="center">2</td><td class="has-text-align-center" data-align="center">3</td><td class="has-text-align-center" data-align="center"></td></tr><tr><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"><strong>2</strong></td><td class="has-text-align-center" data-align="center"><strong>8</strong></td><td class="has-text-align-center" data-align="center"><strong>3</strong></td><td class="has-text-align-center" data-align="center"></td><td></td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"><strong>2</strong></td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"><strong>3</strong></td><td class="has-text-align-center" data-align="center"></td></tr><tr><td class="has-text-align-center" data-align="center">8</td><td class="has-text-align-center" data-align="center"><strong>1</strong></td><td class="has-text-align-center" data-align="center"><strong>6</strong></td><td class="has-text-align-center" data-align="center"><strong>4</strong></td><td class="has-text-align-center" data-align="center">4</td><td></td><td class="has-text-align-center" data-align="center">8</td><td class="has-text-align-center" data-align="center"><strong>1</strong></td><td class="has-text-align-center" data-align="center"><strong>8</strong></td><td class="has-text-align-center" data-align="center"><strong>4</strong></td><td class="has-text-align-center" data-align="center">4</td></tr><tr><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"><strong>7</strong></td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"><strong>5</strong></td><td class="has-text-align-center" data-align="center">5</td><td></td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"><strong>7</strong></td><td class="has-text-align-center" data-align="center"><strong>6</strong></td><td class="has-text-align-center" data-align="center"><strong>5</strong></td><td class="has-text-align-center" data-align="center">5</td></tr><tr><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">7</td><td class="has-text-align-center" data-align="center">6</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"></td><td></td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center">7</td><td class="has-text-align-center" data-align="center">6</td><td class="has-text-align-center" data-align="center"></td><td class="has-text-align-center" data-align="center"></td></tr></tbody></table><figcaption>不带空格(0)的计算h(n)</figcaption></figure>
<!-- /wp:table -->

<!-- wp:paragraph -->
<p>例如上左表中h(n) = 1+1+0+0+0+1+0+2 = 5；上右表中h(n) = 1+1+0+0+0+0+0+1 = 2</p>
<!-- /wp:paragraph -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>代码及运行结果</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>广度优先</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>C++</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-03-12 13:10:57
 * @LastEditors: 转接
 * @LastEditTime: 2022-03-14 12:28:26
 * @Description: 八数码问题广度优先求解
 */

#include &lt;iostream&gt;
#include &lt;queue&gt;
#include &lt;time.h&gt;

typedef struct Data{
    int data&#091;9]; // 存放数据
    int step; // 记录步数
    int last; // 上一步操作 上 下 左 右 1 2 3 4
    int *action = new int&#091;step];// 每一步操作 上 下 左 右 1 2 3 4
} Data;

int tempPosition&#091;9]&#091;2] = { // 位置 上下左右 
    {0, 5}, // 0号位 0 1 0 1 = 5
    {1, 7}, // 1号位 0 1 1 1 = 7
    {2, 6}, // 2号位 0 1 1 0 = 6
    {3, 13}, // 3号位 1 1 0 1 = 13
    {4, 15}, // 4号位 1 1 1 1 = 15
    {5, 14}, // 5号位 1 1 1 0 = 14
    {6, 9}, // 6号位 1 0 0 1 = 9
    {7, 11}, // 7号位 1 0 1 1 = 11
    {8, 10}, // 8号位 1 0 1 0 = 10
};  // 上tempPosition&#091;i]&#091;1]&gt;=8 下tempPosition&#091;i]&#091;1]%8&gt;=4 左tempPosition&#091;i]&#091;1]%8%4&gt;=2 右tempPosition&#091;i]&#091;1]%8%4%2&gt;=1

int GetNextAction(Data data){
    int *temp = data.data;
    int i = 0;
    for(i = 0; i &lt; 9; i++){
        if(temp&#091;i] == 0){
            break;
        }
    }
    int tp = tempPosition&#091;i]&#091;1];
    int last = data.last;
    if(last == 1){ // 上一步向上移动
        tp = tp - 4; // 不让其向下移动
    }else if(last == 2){ // 上一步向下移动
        tp = tp - 8; // 不让其向上移动
    }else if(last == 3){ // 上一步向左移动
        tp = tp - 1; // 不让其向右移动
    }else if(last == 4){ // 上一步向右移动
        tp = tp - 2; // 不让其向左移动
    }
    return tp;
}

int Judge(int *arr1, int *arr2){
    for(int i = 0; i &lt; 9; i++){
        if(arr1&#091;i] != arr2&#091;i]){
            return 0;
        }
    }
    return 1;
}

void Print(Data data){
    for(int i = 0; i &lt; 3; i++){
        for(int j = 0; j &lt; 3; j++){
            std::cout &lt;&lt; data.data&#091;i * 3 + j] &lt;&lt; " ";
        }
        std::cout &lt;&lt; std::endl;
    }
    std::cout &lt;&lt; std::endl;
}

int main(){
    Data originalData, targetArray;
    int *arraytest1 = new int&#091;9];
    int *arraytest2 = new int&#091;9];
    originalData.step = 0;
    std::cout &lt;&lt; "请输入原始数据：" &lt;&lt; std::endl;
    for(int i = 0; i &lt; 9; i++){
        std::cin &gt;&gt; originalData.data&#091;i];
    }
    std::cout &lt;&lt; "请输入变换后数据：" &lt;&lt; std::endl;
    for(int i = 0; i &lt; 9; i++){
        std::cin &gt;&gt; targetArray.data&#091;i];
    }
    // 数组输到arraytest
    for(int i = 0; i &lt; 9; i++){
        arraytest1&#091;i] = originalData.data&#091;i];
        arraytest2&#091;i] = targetArray.data&#091;i];
    }
    // 判断问题是否有解
    int cnt1 = 0, cnt2 = 0;
    for(int i = 0; i &lt; 9; i++){
        if(arraytest1&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest1&#091;j] &gt; arraytest1&#091;i]){
                cnt1++;
            }
        }
    }
    for(int i = 0; i &lt; 9; i++){
        if(arraytest2&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest2&#091;j] &gt; arraytest2&#091;i]){
                cnt2++;
            }
        }
    }
    if(cnt1%2 != cnt2%2){
        std::cout &lt;&lt; "E0: 输入有误！问题无解" &lt;&lt; std::endl;
        return 0;
    }
    // 排序
    for(int i = 0; i &lt; 9; i++){
        for(int j = 0; j &lt; 9; j++){
            if(arraytest1&#091;i] &lt; arraytest1&#091;j]){
                int temp = arraytest1&#091;i];
                arraytest1&#091;i] = arraytest1&#091;j];
                arraytest1&#091;j] = temp;
            }
        }
    }
    for(int i = 0; i &lt; 9; i++){
        for(int j = 0; j &lt; 9; j++){
            if(arraytest2&#091;i] &lt; arraytest2&#091;j]){
                int temp = arraytest2&#091;i];
                arraytest2&#091;i] = arraytest2&#091;j];
                arraytest2&#091;j] = temp;
            }
        }
    }
    //判断排序后的数组是否相等
    for(int i = 0; i &lt; 9; i++){
        if(arraytest1&#091;i] != arraytest2&#091;i]){
            std::cout &lt;&lt; "E1: 输入有误！请检查输入" &lt;&lt; std::endl;
            return 0;
        }
    }
    delete&#091;] arraytest1;
    delete&#091;] arraytest2;
    clock_t start, finish;
	double Total_time;
    start = clock();
    std::queue&lt;Data&gt; q;
    q.push(originalData);
    int action = 0;
    Data temp;
    while(true){ // 没必要设置成!q.empty()，只要循环继续就不可避免增加队列中的数据
        temp = q.front();
        q.pop();
        // std::cout &lt;&lt; "==========当前取出的元素：=========" &lt;&lt; std::endl;
        // Print(temp);
        if(Judge(temp.data, targetArray.data)){
            std::cout &lt;&lt; "找到了！需要" &lt;&lt; temp.step &lt;&lt; "步" &lt;&lt; std::endl;
            break;
        }
        int i = 0; // 找到空(0)位置
        for(i = 0; i &lt; 9; i++){
            if(temp.data&#091;i] == 0){
                break;
            }
        }
        int nextAction = GetNextAction(temp);
        if(nextAction&gt;=8){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp.data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i-3];
            arrayList&#091;i-3] = 0;
            Data nextData;
            for(int j = 0; j &lt; 9; j++){
                nextData.data&#091;j] = arrayList&#091;j];
            }
            nextData.step = temp.step + 1;
            nextData.last = 1;
            for(int j = 0; j &lt; temp.step; j++){
                nextData.action&#091;j] = temp.action&#091;j];
            }
            nextData.action&#091;temp.step] = 1;
            q.push(nextData);
            // std::cout &lt;&lt; "上nextData" &lt;&lt; std::endl;
            // Print(nextData);
        }
        if(nextAction%8&gt;=4){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp.data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i+3];
            arrayList&#091;i+3] = 0;
            Data nextData;
            for(int j = 0; j &lt; 9; j++){
                nextData.data&#091;j] = arrayList&#091;j];
            }
            nextData.step = temp.step + 1;
            nextData.last = 2;
            for(int j = 0; j &lt; temp.step; j++){
                nextData.action&#091;j] = temp.action&#091;j];
            }
            nextData.action&#091;temp.step] = 2;
            q.push(nextData);
            // std::cout &lt;&lt; "下nextData" &lt;&lt; std::endl;
            // Print(nextData);
        }
        if(nextAction%8%4&gt;=2){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp.data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i-1];
            arrayList&#091;i-1] = 0;
            Data nextData;
            for(int j = 0; j &lt; 9; j++){
                nextData.data&#091;j] = arrayList&#091;j];
            }
            nextData.step = temp.step + 1;
            nextData.last = 3;
            for(int j = 0; j &lt; temp.step; j++){
                nextData.action&#091;j] = temp.action&#091;j];
            }
            nextData.action&#091;temp.step] = 3;
            q.push(nextData);
            // std::cout &lt;&lt; "左nextData" &lt;&lt; std::endl;
            // Print(nextData);
        }
        if(nextAction%8%4%2&gt;=1){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp.data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i+1];
            arrayList&#091;i+1] = 0;
            Data nextData;
            for(int j = 0; j &lt; 9; j++){
                nextData.data&#091;j] = arrayList&#091;j];
            }
            nextData.step = temp.step + 1;
            nextData.last = 4;
            for(int j = 0; j &lt; temp.step; j++){
                nextData.action&#091;j] = temp.action&#091;j];
            }
            nextData.action&#091;temp.step] = 4;
            q.push(nextData);
            // std::cout &lt;&lt; "右nextData" &lt;&lt; std::endl;
            // Print(nextData);
        }
        
    }
    finish = clock();
    // 输出结果
    int steps = temp.step;
    std::cout &lt;&lt; "步骤为：" &lt;&lt; std::endl;
    int *result = new int&#091;temp.step];
    for(int i = 0; i &lt; temp.step; i++){
        result&#091;i] = temp.action&#091;i];
    }
    Print(originalData);
    int tempArray&#091;9];
    for(int i = 0; i &lt; 9; i++){
        tempArray&#091;i] = originalData.data&#091;i];
    }
    int position;
    for(position = 0; position &lt; 9; position++){
        if(tempArray&#091;position] == 0){
            break;
        }
    }
    for(int i = 0; i &lt; temp.step; i++){
        if(result&#091;i] == 1){
            tempArray&#091;position] = tempArray&#091;position-3];
            tempArray&#091;position-3] = 0;
            position -= 3;
        }else if(result&#091;i] == 2){
            tempArray&#091;position] = tempArray&#091;position+3];
            tempArray&#091;position+3] = 0;
            position += 3;
        }else if(result&#091;i] == 3){
            tempArray&#091;position] = tempArray&#091;position-1];
            tempArray&#091;position-1] = 0;
            position -= 1;
        }else if(result&#091;i] == 4){
            tempArray&#091;position] = tempArray&#091;position+1];
            tempArray&#091;position+1] = 0;
            position += 1;
        }else{
            std::cout &lt;&lt; "E2: 计算错误！请重试" &lt;&lt; std::endl;
        }
        for(int j = 0; j &lt; 3; j++){
            for(int k = 0; k &lt; 3; k++){
                std::cout &lt;&lt; tempArray&#091;j*3+k] &lt;&lt; " ";
            }
            std::cout &lt;&lt; std::endl;
        }
        std::cout &lt;&lt; std::endl;
    }
    delete&#091;] result;
    std::cout &lt;&lt; steps &lt;&lt; "步，搜索用时：" &lt;&lt; (double)(finish - start) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; std::endl;
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>C++运行结果</h4>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">请输入原始数据：
1 2 3
0 4 5
6 7 8
请输入变换后数据：
0 2 3
1 7 5
4 6 8
找到了！需要5步
步骤为：
1 2 3
0 4 5
6 7 8

1 2 3
4 0 5
6 7 8

1 2 3
4 7 5
6 0 8

1 2 3
4 7 5
0 6 8

1 2 3
0 7 5
4 6 8

0 2 3
1 7 5
4 6 8

5步，搜索用时：0.001s</pre>
<!-- /wp:preformatted -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>深度优先</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>C++</h4>
<!-- /wp:heading -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>ATT: 此段代码存在bug，数据规模过大可能出现计算失败，空位在中间的时候为了节省内存可能不是最优先算法而将其先向上移动一格再进行计算</p></blockquote>
<!-- /wp:quote -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-03-10 12:24:48
 * @LastEditors: 转接
 * @LastEditTime: 2022-03-14 12:22:57
 * @Description: 八数码问题深度优先求解
 */

#include &lt;iostream&gt;
#include &lt;stack&gt;
#include &lt;algorithm&gt;
#include &lt;time.h&gt;

// 数据
typedef struct data{
    int data&#091;9];
    int step;
}Data;

// 链树
typedef struct NodeTag{
    Data data;
    int childNum;
    NodeTag *father; // 父结点
    NodeTag *child1; // 子结点1
    NodeTag *child2; // 子结点2
    NodeTag *child3; // 子结点3
    int lastFunction = 0; // 上一个功能 上下左右 1234
    int skip = 0; // 回溯到该结点的使用次数
    int back = 0; // 是否回溯到该结点过
}NodeTag, *NodeTree;

// 链表存储回溯结点
typedef struct NodeLink{
    NodeTree node; // 溯结点
    NodeLink *next;
}NodeLink, *NodeLinkList;

int childNum&#091;] = { // 子结点数量
        1,2,1,
        2,3,2,
        1,2,1
        /*
        1,2,3,
        4,5,6,
        7,8,9
        */
    };
int tempPosition&#091;9]&#091;2] = { // 位置 上下左右 
    {0, 5}, // 0号位 0 1 0 1 = 5
    {1, 7}, // 1号位 0 1 1 1 = 7
    {2, 6}, // 2号位 0 1 1 0 = 6
    {3, 13}, // 3号位 1 1 0 1 = 13
    {4, 15}, // 4号位 1 1 1 1 = 15
    {5, 14}, // 5号位 1 1 1 0 = 14
    {6, 9}, // 6号位 1 0 0 1 = 9
    {7, 11}, // 7号位 1 0 1 1 = 11
    {8, 10}, // 8号位 1 0 1 0 = 10
};  // 上tempPosition&#091;i]&#091;1]&gt;=8 下tempPosition&#091;i]&#091;1]%8&gt;=4 左tempPosition&#091;i]&#091;1]%8%4&gt;=2 右tempPosition&#091;i]&#091;1]%8%4%2&gt;=1

// 初始化树 将原始数据originalData存入第一个结点
int InitTree(NodeTree &amp;tree, Data originalData){
    tree = new NodeTag;
    tree-&gt;data = originalData;
    tree-&gt;childNum = 0;
    int i = 0;
    for(i = 0; i &lt; 9; i++){
        if(tree-&gt;data.data&#091;i] == 0){
            tree-&gt;childNum = childNum&#091;i]+1; // 设置子结点数量
        }
    }
    tree-&gt;father = NULL;
    tree-&gt;child1 = NULL;
    tree-&gt;child2 = NULL;
    tree-&gt;child3 = NULL;
    tree-&gt;lastFunction = 0;
    return i-1; // 将0的位置返回
}

// 插入结点到树
int InsertNode(NodeTree &amp;tree, NodeTree &amp;node){
    if(tree-&gt;childNum == 1){ // 只能有一个子结点的结点
        if(tree-&gt;child1 == NULL){
            tree-&gt;child1 = node;
            node-&gt;father = tree;
        }else{
            std::cout &lt;&lt; "E2.1:数据规模错误" &lt;&lt; std::endl;
            return 1;
        }
    }else if(tree-&gt;childNum == 2){ // 只能有两个子结点的结点
        if(tree-&gt;child1 == NULL){
            tree-&gt;child1 = node;
            node-&gt;father = tree;
        }else if(tree-&gt;child2 == NULL){
            tree-&gt;child2 = node;
            node-&gt;father = tree;
        }else{
            std::cout &lt;&lt; "E2.2:数据规模错误" &lt;&lt; std::endl;
            return 1;
        }
    }else if(tree-&gt;childNum == 3){ // 只能有三个子结点的结点
        if(tree-&gt;child1 == NULL){
            tree-&gt;child1 = node;
            node-&gt;father = tree;
        }else if(tree-&gt;child2 == NULL){
            tree-&gt;child2 = node;
            node-&gt;father = tree;
        }else if(tree-&gt;child3 == NULL){
            tree-&gt;child3 = node;
            node-&gt;father = tree;
        }else{
            std::cout &lt;&lt; "E2.3:数据规模错误" &lt;&lt; std::endl;
            return 1;
        }
    }
    return 0;
}

// 初始化链表
void InitLink(NodeLinkList &amp;link){
    link = new NodeLink;
    link-&gt;node = NULL;
    link-&gt;next = NULL;
}

// 插入结点到链表
void InsertLink(NodeLinkList &amp;link, NodeTree &amp;node){
    NodeLinkList temp = link;
    while(temp-&gt;next != NULL){
        temp = temp-&gt;next;
    }
    temp-&gt;next = new NodeLink;
    temp-&gt;next-&gt;node = node;
    temp-&gt;next-&gt;next = NULL;
}

// 在链表中查找结点是否存在
int SearchLink(NodeLinkList &amp;link, NodeTree &amp;node){
    NodeLinkList temp = link;
    while(temp-&gt;next != NULL){
        if(temp-&gt;next-&gt;node == node){
            return 1;
        }
        temp = temp-&gt;next;
    }
    return 0;
}

// 判断两Data中的数据是否相等
int judge(Data data1, Data data2){
    for(int i = 0; i &lt; 9; i++){
        if(data1.data&#091;i] != data2.data&#091;i]){
            return 0;
        }
    }
    return 1;
}

// 规范输出结点中的数据
void Print(NodeTree tempNode){
    for(int i = 0; i &lt; 3; i++){
        for(int j = 0; j &lt; 3; j++){
            std::cout &lt;&lt; tempNode-&gt;data.data&#091;i*3+j] &lt;&lt; " ";
        }
        std::cout &lt;&lt; std::endl;
    }
    std::cout &lt;&lt; std::endl;
}

int main(){
    Data originalData, targetArray; // 原始数据 和 目标数据
    int *arraytest1 = new int&#091;9];
    int *arraytest2 = new int&#091;9];
    originalData.step = 0; // 初始化步数
    targetArray.step = -1;
    int state = 1; // 程序错误状态
    int middle = 0; // 判断0是否为中间结点
    int deep;
    std::cout &lt;&lt; "请输入原始数据：" &lt;&lt; std::endl;
    for(int i = 0; i &lt; 9; i++){
        std::cin &gt;&gt; originalData.data&#091;i];
    }
    if(originalData.data&#091;4] == 0){
        middle = 1;
        originalData.data&#091;4] = originalData.data&#091;1];
        originalData.data&#091;1] = 0;
    }
    std::cout &lt;&lt; "请输入变换后数据：" &lt;&lt; std::endl;
    for(int i = 0; i &lt; 9; i++){
        std::cin &gt;&gt; targetArray.data&#091;i];
    }
    std::cout &lt;&lt; "请输入搜索深度：" &lt;&lt; std::endl;
    std::cin &gt;&gt; deep;
    clock_t start, finish;
	double Total_time;
    start = clock();
    // 数组输到arraytest
    for(int i = 0; i &lt; 9; i++){
        arraytest1&#091;i] = originalData.data&#091;i];
        arraytest2&#091;i] = targetArray.data&#091;i];
    }
    // 判断问题是否有解
    int cnt1 = 0, cnt2 = 0;
    for(int i = 0; i &lt; 9; i++){
        if(arraytest1&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest1&#091;j] &gt; arraytest1&#091;i]){
                cnt1++;
            }
        }
    }
    for(int i = 0; i &lt; 9; i++){
        if(arraytest2&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest2&#091;j] &gt; arraytest2&#091;i]){
                cnt2++;
            }
        }
    }
    if(cnt1%2 != cnt2%2){
        std::cout &lt;&lt; "E0: 输入有误！问题无解" &lt;&lt; std::endl;
        return 0;
    }
    // 排序
    for(int i = 0; i &lt; 9; i++){
        for(int j = 0; j &lt; 9; j++){
            if(arraytest1&#091;i] &lt; arraytest1&#091;j]){
                int temp = arraytest1&#091;i];
                arraytest1&#091;i] = arraytest1&#091;j];
                arraytest1&#091;j] = temp;
            }
        }
    }
    for(int i = 0; i &lt; 9; i++){
        for(int j = 0; j &lt; 9; j++){
            if(arraytest2&#091;i] &lt; arraytest2&#091;j]){
                int temp = arraytest2&#091;i];
                arraytest2&#091;i] = arraytest2&#091;j];
                arraytest2&#091;j] = temp;
            }
        }
    }
    //判断排序后的数组是否相等
    for(int i = 0; i &lt; 9; i++){
        if(arraytest1&#091;i] != arraytest2&#091;i]){
            state = 0;
        }
    }
    free(arraytest1);
    free(arraytest2);
    NodeTree tree;
    int tempNum = InitTree(tree, originalData);
    if(tree-&gt;childNum == 0 &amp;&amp; state){
        std::cout &lt;&lt; "E1:数据输入有误" &lt;&lt; std::endl;
        std::cout &lt;&lt; "输入的数据要用表示空位，请检查输入！" &lt;&lt; std::endl;
        return 0;
    }
    NodeTree tempNode = tree; // 临时当前结点
    NodeLinkList link; // 创建链表用来存储回溯结点
    InitLink(link);
    int step = 1;
    while(true){
        // 判断是否到达目标状态
        if(judge(tempNode-&gt;data, targetArray) == 1){
            if(middle){
                tempNode-&gt;data.step++;
            }
            std::cout &lt;&lt; "搜索完成，步数为：" &lt;&lt; tempNode-&gt;data.step &lt;&lt; std::endl;
            break;
        }
        // 开始搜索
        // 空格(0)向上移动
        if(tempNode-&gt;data.step&lt;deep &amp;&amp; tempPosition&#091;tempNum]&#091;1] &gt;= 8 &amp;&amp; tempNode-&gt;lastFunction != 4 &amp;&amp; (tempNode-&gt;back == 0 || --tempNode-&gt;skip &lt;= 0)){ 
            // 保证深度未达到目标深度，能向上交换的同时上一次不是向下移动，且不是跳过状态
            Data tempData;
            tempData.step = tempNode-&gt;data.step + 1;
            for(int i = 0; i &lt; 9; i++){ // 复制
                tempData.data&#091;i] = tempNode-&gt;data.data&#091;i];
            }
            // 交换
            tempData.data&#091;tempNum] = tempData.data&#091;tempNum-3];
            tempData.data&#091;tempNum-3] = 0;
            tempNum = tempNum-3; // 标记交换后的位置
            NodeTree node = new NodeTag;
            node-&gt;data = tempData;
            node-&gt;childNum = childNum&#091;tempNum];
            node-&gt;father = tempNode;
            node-&gt;child1 = NULL;
            node-&gt;child2 = NULL;
            node-&gt;child3 = NULL;
            node-&gt;lastFunction = 1;
            if(InsertNode(tempNode, node)){
                std::cout &lt;&lt; "查找失败！尝试增加查找深度!" &lt;&lt; std::endl;
                return 0;
            }
            tempNode = node;
            
        }
        // 下
        else if(tempNode-&gt;data.step&lt;deep &amp;&amp; tempPosition&#091;tempNum]&#091;1]%8&gt;=4 &amp;&amp; tempNode-&gt;lastFunction != 1 &amp;&amp; (tempNode-&gt;back == 0 || --tempNode-&gt;skip &lt;= 0)){
            // 保证深度未达到目标深度，能向下交换的同时上一次不是向上移动，且不是跳过状态
            Data tempData;
            tempData.step = tempNode-&gt;data.step + 1;
            for(int i = 0; i &lt; 9; i++){ // 复制
                tempData.data&#091;i] = tempNode-&gt;data.data&#091;i];
            }
            // 交换
            tempData.data&#091;tempNum] = tempData.data&#091;tempNum+3];
            tempData.data&#091;tempNum+3] = 0;
            tempNum = tempNum+3; // 标记交换后的位置
            NodeTree node = new NodeTag;
            node-&gt;data = tempData;
            node-&gt;childNum = childNum&#091;tempNum];
            node-&gt;father = tempNode;
            node-&gt;child1 = NULL;
            node-&gt;child2 = NULL;
            node-&gt;child3 = NULL;
            node-&gt;lastFunction = 4;
            if(InsertNode(tempNode, node)){
                std::cout &lt;&lt; "查找失败！尝试增加查找深度!" &lt;&lt; std::endl;
                return 0;
            }
            tempNode = node;
        }
        // 左
        else if(tempNode-&gt;data.step&lt;deep &amp;&amp; tempPosition&#091;tempNum]&#091;1]%8%4&gt;=2 &amp;&amp; tempNode-&gt;lastFunction != 3 &amp;&amp; (tempNode-&gt;back == 0 || --tempNode-&gt;skip &lt;= 0)){ 
            // 保证深度未达到目标深度，能向左交换的同时上一次不是向右移动，且不是跳过状态
            Data tempData;
            tempData.step = tempNode-&gt;data.step + 1;
            for(int i = 0; i &lt; 9; i++){ // 复制
                tempData.data&#091;i] = tempNode-&gt;data.data&#091;i];
            }
            // 交换
            tempData.data&#091;tempNum] = tempData.data&#091;tempNum-1];
            tempData.data&#091;tempNum-1] = 0;
            tempNum = tempNum-1; // 标记交换后的位置
            NodeTree node = new NodeTag;
            node-&gt;data = tempData;
            node-&gt;childNum = childNum&#091;tempNum];
            node-&gt;father = tempNode;
            node-&gt;child1 = NULL;
            node-&gt;child2 = NULL;
            node-&gt;child3 = NULL;
            node-&gt;lastFunction = 2;
            if(InsertNode(tempNode, node)){
                std::cout &lt;&lt; "查找失败！尝试增加查找深度!" &lt;&lt; std::endl;
                return 0;
            }
            tempNode = node;
        }
        // 右
        else if(tempNode-&gt;data.step&lt;deep &amp;&amp; tempPosition&#091;tempNum]&#091;1]%8%4%2&gt;=1 &amp;&amp; tempNode-&gt;lastFunction != 2 &amp;&amp; (tempNode-&gt;back == 0 || --tempNode-&gt;skip &lt;= 0)){
            // 保证深度未达到目标深度，能向右交换的同时上一次不是向左移动，且不是跳过状态
            Data tempData;
            tempData.step = tempNode-&gt;data.step + 1;
            for(int i = 0; i &lt; 9; i++){ // 复制
                tempData.data&#091;i] = tempNode-&gt;data.data&#091;i];
            }
            // 交换
            tempData.data&#091;tempNum] = tempData.data&#091;tempNum+1];
            tempData.data&#091;tempNum+1] = 0;
            tempNum = tempNum+1; // 标记交换后的位置
            NodeTree node = new NodeTag;
            node-&gt;data = tempData;
            node-&gt;childNum = childNum&#091;tempNum];
            node-&gt;father = tempNode;
            node-&gt;child1 = NULL;
            node-&gt;child2 = NULL;
            node-&gt;child3 = NULL;
            node-&gt;lastFunction = 3;
            if(InsertNode(tempNode, node)){
                std::cout &lt;&lt; "查找失败！尝试增加查找深度!" &lt;&lt; std::endl;
                return 0;
            }
            tempNode = node;
        }
        else{
            do{
                tempNode = tempNode-&gt;father;
                if(tempNode-&gt;childNum == 2 &amp;&amp; tempNode-&gt;child2 == NULL){
                    // 将结点插入链表
                    if(SearchLink(link, tempNode) == 0){
                        InsertLink(link, tempNode);
                        tempNode-&gt;skip++;
                    }
                    tempNode-&gt;skip++;
                    tempNode-&gt;back = 1;
                    step--;
                    break;
                }else if(tempNode-&gt;childNum == 3 &amp;&amp; tempNode-&gt;child3 == NULL){
                    if(SearchLink(link, tempNode) == 0){
                        InsertLink(link, tempNode);
                        tempNode-&gt;skip++;
                    }
                    tempNode-&gt;skip++;
                    tempNode-&gt;back = 1;
                    step--;
                    break;
                }else{
                    continue;
                }
            }while(tempNode != tree);
            int i = 0;
            for(i = 0; i &lt; 9; i++){
                if(tempNode-&gt;data.data&#091;i] == 0){
                    break;
                }
            }
            tempNum = i;
        }
        // std::cout &lt;&lt; "step: " &lt;&lt; step &lt;&lt; std::endl;
        // Print(tempNode);
    }
    finish = clock();
    int steps = tempNode-&gt;data.step;
    // 判断是否搜索完成将结点压入栈中
    std::stack &lt;NodeTree&gt; tempStack;
    while(tempNode != tree){
        tempStack.push(tempNode);
        tempNode = tempNode-&gt;father;
    }
    // 打印输出栈
    std::cout &lt;&lt; "输出步骤：" &lt;&lt; std::endl;
    if(middle){ //如果最开始空格(0)位置在中间
        tree-&gt;data.data&#091;1]=tree-&gt;data.data&#091;4];
        tree-&gt;data.data&#091;4]=0;
        Print(tree);
        tree-&gt;data.data&#091;4]=tree-&gt;data.data&#091;1];
        tree-&gt;data.data&#091;1]=0;
    }
    Print(tree);
    while(!tempStack.empty()){
        tempNode = tempStack.top();
        tempStack.pop();
        Print(tempNode);
    }
    std::cout &lt;&lt; steps &lt;&lt; "步，搜索用时：" &lt;&lt; (double)(finish - start) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; std::endl;
    return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>C++运行结果</h4>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">请输入原始数据：
1 2 3
4 5 6
7 8 0  
请输入变换后数据：
1 2 3
4 5 6
0 7 8
请输入搜索深度：
3
搜索完成，步数为：2
输出步骤：
1 2 3
4 5 6
7 8 0

1 2 3
4 5 6
7 0 8

1 2 3
4 5 6
0 7 8

2步，搜索用时：0.002s</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":4} -->
<h4>Python</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>'''
Author: 转接
Date: 2022-03-14 12:41:19
LastEditors: 转接
LastEditTime: 2022-03-14 14:16:59
Description: 八数码问题深度优先求解
'''

import numpy as np
import copy
from datetime import datetime

# 找到空位
def local(tempData):
    a = np.array(tempData)
    i,j = np.where(a == 0)
    return i&#091;0],j&#091;0]

# 向上移动
def ToUp(tempData):
    i,j =  local(tempData)
    arr = copy.deepcopy(tempData)
    if i in (1,len(tempData)-1):
        arr&#091;i]&#091;j],arr&#091;i-1]&#091;j] = arr&#091;i-1]&#091;j],arr&#091;i]&#091;j]       
        return arr

# 向下移动
def ToDown(tempData):
    i,j =  local(tempData)
    arr = copy.deepcopy(tempData)
    if i in (0,len(tempData)-2):
        arr&#091;i]&#091;j],arr&#091;i+1]&#091;j] = arr&#091;i+1]&#091;j],arr&#091;i]&#091;j]
        return arr

# 向左移动
def ToRight(tempData):
    i,j =  local(tempData)
    arr = copy.deepcopy(tempData)
    if j in (0,len(tempData)-2):
        arr&#091;i]&#091;j], arr&#091;i]&#091;j+1] = arr&#091;i]&#091;j+1],arr&#091;i]&#091;j]
        return arr
# 向右移动
def ToLeft(tempData):
    i,j =  local(tempData)
    arr = copy.deepcopy(tempData)
    if j in (1,len(tempData)-1):
        arr&#091;i]&#091;j],arr&#091;i]&#091;j-1] = arr&#091;i]&#091;j-1],arr&#091;i]&#091;j]
    return arr

# 格式化输出
def OutPrint(tempData):
    for arr in tempData:
        print(arr&#091;0],arr&#091;1],arr&#091;2])
    print()

# 定义一个节点类用于存放必要的数据
class Node:
    def __init__(self,data,level,parent):
        self.data=data
        self.level=level
        self.parent = parent


if __name__ == "__main__":
    # 输入数据
    originalData = &#091;list(map(int,input("请输入原始数据：\n").split())), list(map(int,input().split())), list(map(int,input().split()))]
    targetArray = &#091;list(map(int,input("请输入变换后数据：\n").split())), list(map(int,input().split())), list(map(int,input().split()))]
    list1 = &#091;]
    list2 = &#091;]
    # 数组输到list
    for arr in originalData:
        list1.append(arr&#091;0])
        list1.append(arr&#091;1])
        list1.append(arr&#091;2])
    for arr in targetArray:
        list2.append(arr&#091;0])
        list2.append(arr&#091;1])
        list2.append(arr&#091;2])
    cnt1 = 0
    cnt2 = 0
    for i in range(0,9):
        if i == 0:
            continue
        for j in range(i-1,0):
            if i &lt; list1&#091;j]:
                cnt1 = cnt1 + 1
    for i in range(0,9):
        if i == 0:
            continue
        for j in range(i-1,0):
            if i &lt; list2&#091;j]:
                cnt2 = cnt2 + 1
    if cnt1%2 != cnt2%2:
        print("E0: 输入有误！问题无解")
        exit(0)
    list1.sort()
    list2.sort()
    for i in range (0, 9):
        if list1&#091;i] != list2&#091;i]:
            print("E1: 输入有误！请检查输入")
            exit(0)
    Node0 = Node(originalData,0,"None")
    deep_level = int(input("请输入搜索深度："))
    open_ = &#091;Node0]
    close = &#091;]
    step = 0
    steps = 0
    start = datetime.now()
    while len(open_) &gt; 0:
        step = step + 1
        n = open_.pop(0)
        close.append(n)
        # 找到结果，则输出其最优路径
        if n.data == targetArray:
            print('搜索完毕！步骤为：')
            result = &#091;]
            result.append(n)
            while n.parent!="None":
                result.append(n.parent)
                n = n.parent
            steps = len(result)-1
            for j in range(len(result)):
                result_0 = result.pop(-1)
                OutPrint(result_0.data)
            break
        else:
            if n.level&lt;=int(deep_level):
                local(n.data)
                Up = ToUp(n.data)
                if Up not in &#091;open_&#091;i].data for i in range(len(open_))] and Up not in &#091;close&#091;i].data for i in range(len(close))] and Up is not None:
                    Node0 = Node(Up,n.level+1,n)
                    open_.insert(0,Node0)

                Down = ToDown(n.data)
                if Down not in &#091;open_&#091;i].data for i in range(len(open_))] and Down not in &#091;close&#091;i].data for i in range(len(close))] and Down is not None:
                    Node0 = Node(Down,n.level+1,n)
                    open_.insert(0,Node0)

                Left = ToLeft(n.data)
                if Left not in &#091;open_&#091;i].data for i in range(len(open_))] and Left not in &#091;close&#091;i].data for i in range(len(close))] and Left is not None:
                    Node0 = Node(Left,n.level+1,n)
                    open_.insert(0,Node0)

                Right = ToRight(n.data)
                if Right not in &#091;open_&#091;i].data for i in range(len(open_))] and Right not in &#091;close&#091;i].data for i in range(len(close))] and Right is not None:
                    Node0 = Node(Right,n.level+1,n)
                    open_.insert(0,Node0)         
    end = datetime.now()
    print(steps,'步，搜索用时：', end - start)
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>Python运行结果</h4>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">请输入原始数据：
1 2 3
0 4 5
6 7 8
请输入变换后数据：
0 2 3
1 7 5
4 6 8
请输入搜索深度：6
搜索完毕！步骤为：
1 2 3
0 4 5
6 7 8

1 2 3
4 0 5
6 7 8

1 2 3
4 7 5
6 0 8

1 2 3
4 7 5
0 6 8

1 2 3
0 7 5
4 6 8

0 2 3
1 7 5
4 6 8

5 步，搜索用时： 0:00:00.004012</pre>
<!-- /wp:preformatted -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>启发式搜索</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>C++</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-03-12 20:31:24
 * @LastEditors: 转接
 * @LastEditTime: 2022-03-13 19:01:10
 * @Description: 八数码问题启发式搜索
 */

#include &lt;iostream&gt;
#include &lt;stack&gt;
#include &lt;time.h&gt;

// 创建链表
typedef struct Data{
    int data&#091;9]; // 存放数据
    int value; // 存f(n)
    int step; // 记录步数
    int lastAction; // 上一步操作 上 下 左 右 1 2 3 4
    Data *next; // 链表中下一个结点
    Data *last; // 操作图中对应的上一个结点
}Data, *DataList;

int tempPosition&#091;9]&#091;2] = { // 位置 上下左右 
    {0, 5}, // 0号位 0 1 0 1 = 5
    {1, 7}, // 1号位 0 1 1 1 = 7
    {2, 6}, // 2号位 0 1 1 0 = 6
    {3, 13}, // 3号位 1 1 0 1 = 13
    {4, 15}, // 4号位 1 1 1 1 = 15
    {5, 14}, // 5号位 1 1 1 0 = 14
    {6, 9}, // 6号位 1 0 0 1 = 9
    {7, 11}, // 7号位 1 0 1 1 = 11
    {8, 10}, // 8号位 1 0 1 0 = 10
};

int distance&#091;9]&#091;9] = { // 位置 上下左右 
    {0, 1, 2, 1, 2, 3, 2, 3, 4},
    {1, 0, 1, 2, 1, 2, 3, 2, 3},
    {2, 1, 0, 3, 2, 1, 4, 3, 2},
    {1, 2, 3, 0, 1, 2, 1, 2, 3},
    {2, 1, 2, 1, 0, 1, 2, 1, 2},
    {3, 2, 1, 2, 1, 0, 3, 2, 1},
    {2, 3, 4, 1, 2, 3, 0, 1, 2}, 
    {3, 2, 3, 2, 1, 2, 1, 0, 1},
    {4, 3, 2, 3, 2, 1, 2, 1, 0}, 
};

int GetNextAction(Data data){
    int *temp = data.data;
    int i = 0;
    for(i = 0; i &lt; 9; i++){
        if(temp&#091;i] == 0){
            break;
        }
    }
    int tp = tempPosition&#091;i]&#091;1];
    int last = data.lastAction;
    if(last == 1){ // 上一步向上移动
        tp = tp - 4; // 不让其向下移动
    }else if(last == 2){ // 上一步向下移动
        tp = tp - 8; // 不让其向上移动
    }else if(last == 3){ // 上一步向左移动
        tp = tp - 1; // 不让其向右移动
    }else if(last == 4){ // 上一步向右移动
        tp = tp - 2; // 不让其向左移动
    }
    return tp;
}

int Judge(int *arr1, int *arr2){
    for(int i = 0; i &lt; 9; i++){
        if(arr1&#091;i] != arr2&#091;i]){
            return 0;
        }
    }
    return 1;
}

void Print(Data data){
    for(int i = 0; i &lt; 3; i++){
        for(int j = 0; j &lt; 3; j++){
            std::cout &lt;&lt; data.data&#091;i * 3 + j] &lt;&lt; " ";
        }
        std::cout &lt;&lt; std::endl;
    }
    std::cout &lt;&lt; std::endl;
}

// 初始化链表
void InitList(DataList &amp;head){
    head = (Data *)malloc(sizeof(Data));
    head-&gt;lastAction = 0;
    head-&gt;next = NULL;
    head-&gt;last = NULL;
}

int Gn(int *arr){
    int sum = 0;
    for(int i = 0; i &lt; 9; i++){
        sum += distance&#091;arr&#091;i]]&#091;i];
    }
    return sum;
}

// 按照f(n)值的大小插入链表 链表 数组 价值 上一步操作
void InsertList(DataList &amp;head, int *arr, int value, int lastAction){
    Data *temp = head;
    Data *newNode = (Data *)malloc(sizeof(Data));

    for(int i = 0; i &lt; 9; i++){
        newNode-&gt;data&#091;i] = arr&#091;i];
    }
    newNode-&gt;value = value;
    newNode-&gt;step = head-&gt;step + 1;
    newNode-&gt;next = NULL;
    newNode-&gt;last = head;
    // if(lastAction == 0){
    //     newNode-&gt;last = NULL;
    // }
    while(temp-&gt;next != NULL){
        if(temp-&gt;next-&gt;value &lt; value){
            temp = temp-&gt;next;
        }else{
            break;
        }
    }
    newNode-&gt;next = temp-&gt;next;
    temp-&gt;next = newNode;
}

int main(){
    int *originalData = new int&#091;9];
    int *targetArray = new int&#091;9];
    int *arraytest1 = new int&#091;9];
    int *arraytest2 = new int&#091;9];
    std::cout &lt;&lt; "请输入原始数据：" &lt;&lt; std::endl;
    for(int i = 0; i &lt; 9; i++){
        std::cin &gt;&gt; originalData&#091;i];
    }
    std::cout &lt;&lt; "请输入变换后数据：" &lt;&lt; std::endl;
    for(int i = 0; i &lt; 9; i++){
        std::cin &gt;&gt; targetArray&#091;i];
    }
    // 复制数组到arraytest
    for(int i = 0; i &lt; 9; i++){
        arraytest1&#091;i] = originalData&#091;i];
        arraytest2&#091;i] = targetArray&#091;i];
    }
    // 判断问题是否有解
    int cnt1 = 0, cnt2 = 0;
    for(int i = 0; i &lt; 9; i++){
        if(arraytest1&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest1&#091;j] &gt; arraytest1&#091;i]){
                cnt1++;
            }
        }
    }
    for(int i = 0; i &lt; 9; i++){
        if(arraytest2&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest2&#091;j] &gt; arraytest2&#091;i]){
                cnt2++;
            }
        }
    }
    if(cnt1%2 != cnt2%2){
        std::cout &lt;&lt; "E0: 输入有误！问题无解" &lt;&lt; std::endl;
        return 0;
    }
    // 排序
    for(int i = 0; i &lt; 9; i++){
        for(int j = 0; j &lt; 9; j++){
            if(arraytest1&#091;i] &lt; arraytest1&#091;j]){
                int temp = arraytest1&#091;i];
                arraytest1&#091;i] = arraytest1&#091;j];
                arraytest1&#091;j] = temp;
            }
        }
    }
    for(int i = 0; i &lt; 9; i++){
        for(int j = 0; j &lt; 9; j++){
            if(arraytest2&#091;i] &lt; arraytest2&#091;j]){
                int temp = arraytest2&#091;i];
                arraytest2&#091;i] = arraytest2&#091;j];
                arraytest2&#091;j] = temp;
            }
        }
    }
    //判断排序后的数组是否相等
    for(int i = 0; i &lt; 9; i++){
        if(arraytest1&#091;i] != arraytest2&#091;i]){
            std::cout &lt;&lt; "E1: 输入有误！请检查输入" &lt;&lt; std::endl;
            return 0;
        }
    }
    delete&#091;] arraytest1;
    delete&#091;] arraytest2;
    clock_t start, finish;
	double Total_time;
    start = clock();
    DataList head; // 定义链表存放数据
    InitList(head);  // 初始化链表 即创建头节点
    head-&gt;step = -1;
    DataList temp = head;
    InsertList(head, originalData, Gn(originalData), 0); // 将原始数据结点存放到头节点后的数据区域
    while(true){
        temp = temp-&gt;next;
        if(Judge(targetArray, temp-&gt;data)){
            std::cout &lt;&lt; "找到了！需要" &lt;&lt; temp-&gt;step &lt;&lt; "步" &lt;&lt; std::endl;
            break;
        }
        int i = 0; // 找到空(0)位置
        for(i = 0; i &lt; 9; i++){
            if(temp-&gt;data&#091;i] == 0){
                break;
            }
        }
        // int tempArraylist&#091;9];
        // for(int j = 0; j &lt; 9; j++){
        //     tempArraylist&#091;j] = temp-&gt;next-&gt;data&#091;j];
        // }
        int nextAction = GetNextAction(*temp);
        if(nextAction&gt;=8){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp-&gt;data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i-3];
            arrayList&#091;i-3] = 0;
            InsertList(temp, arrayList, Gn(arrayList)+temp-&gt;step, 1);
        }
        if(nextAction%8&gt;=4){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp-&gt;data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i+3];
            arrayList&#091;i+3] = 0;
            InsertList(temp, arrayList, Gn(arrayList)+temp-&gt;step, 2);
        }
        if(nextAction%8%4&gt;=2){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp-&gt;data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i-1];
            arrayList&#091;i-1] = 0;
            InsertList(temp, arrayList, Gn(arrayList)+temp-&gt;step, 3);
        }
        if(nextAction%8&gt;=4){
            int arrayList&#091;9];
            for(int j = 0; j &lt; 9; j++){
                arrayList&#091;j] = temp-&gt;data&#091;j];
            }
            arrayList&#091;i] = arrayList&#091;i+1];
            arrayList&#091;i+1] = 0;
            InsertList(temp, arrayList, Gn(arrayList)+temp-&gt;step, 4);
        }
    }
    finish = clock();
    std::stack&lt;int *&gt;s;
    int steps = temp-&gt;step;
    std::cout &lt;&lt; "步骤为：" &lt;&lt; std::endl;
    while(temp-&gt;last != NULL){
        s.push(temp-&gt;data);
        temp = temp-&gt;last;
    }
    
    while(!s.empty()){
        int *arr = s.top();
        s.pop();
        for(int i = 0; i &lt; 3; i++){
            for(int j = 0; j &lt; 3; j++){
                std::cout &lt;&lt; arr&#091;i * 3 + j] &lt;&lt; " ";
            }
            std::cout &lt;&lt; std::endl;
        }
        std::cout &lt;&lt; std::endl;
    }
    std::cout &lt;&lt; steps &lt;&lt; "步，搜索用时：" &lt;&lt; (double)(finish - start) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; std::endl;
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>C++运行结果</h4>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">请输入原始数据：
1 2 3
0 4 5
6 7 8
请输入变换后数据：
0 2 3
1 7 5
4 6 8
找到了！需要5步
步骤为：
1 2 3
0 4 5
6 7 8

1 2 3
4 0 5
6 7 8

1 2 3
4 7 5
6 0 8 

1 2 3
4 7 5
0 6 8

1 2 3
0 7 5
4 6 8

0 2 3
1 7 5
4 6 8

5步，搜索用时：0.005s</pre>
<!-- /wp:preformatted -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading -->
<h2>代码说明</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>判断可移动方向变量：tempPosition</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int tempPosition&#091;9]&#091;2] = { // 位置 上下左右 
    {0, 5},  // 0号位 0 1 0 1 = 5
    {1, 7},  // 1号位 0 1 1 1 = 7
    {2, 6},  // 2号位 0 1 1 0 = 6
    {3, 13}, // 3号位 1 1 0 1 = 13
    {4, 15}, // 4号位 1 1 1 1 = 15
    {5, 14}, // 5号位 1 1 1 0 = 14
    {6, 9},  // 6号位 1 0 0 1 = 9
    {7, 11}, // 7号位 1 0 1 1 = 11
    {8, 10}, // 8号位 1 0 1 0 = 10
}; </code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>通过四个二进制数字来表示四个方向移动（交换）的可行性再将二进制数字转换为十进制数字存在二维数组中。通过判断其值来判断能否向指定方向移动。如<strong>能向上</strong>则<strong>tempPosition[i][1]&gt;=8</strong>， <strong>能向下</strong>则<strong>tempPosition[i][1]%8&gt;=4</strong>， <strong>能向左</strong>则<strong>tempPosition[i][1]%8%4&gt;=2</strong>， <strong>能向右</strong>则<strong>tempPosition[i][1]%8%4%2&gt;=1</strong>。</p>
<!-- /wp:paragraph -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>判断两个点之间距离变量：distance</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int distance&#091;9]&#091;9] = { // 位置 上下左右 
    {0, 1, 2, 1, 2, 3, 2, 3, 4},
    {1, 0, 1, 2, 1, 2, 3, 2, 3},
    {2, 1, 0, 3, 2, 1, 4, 3, 2},
    {1, 2, 3, 0, 1, 2, 1, 2, 3},
    {2, 1, 2, 1, 0, 1, 2, 1, 2},
    {3, 2, 1, 2, 1, 0, 3, 2, 1},
    {2, 3, 4, 1, 2, 3, 0, 1, 2}, 
    {3, 2, 3, 2, 1, 2, 1, 0, 1},
    {4, 3, 2, 3, 2, 1, 2, 1, 0}, 
};</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>通过<strong>distance[i][j]</strong>来表示i号位置和j号位置的距离，进而去计算启发函数中的g(n)。 </p>
<!-- /wp:paragraph -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>判断问题是否有解</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>// 判断问题是否有解
    int cnt1 = 0, cnt2 = 0;
    for(int i = 0; i &lt; 9; i++){
        if(arraytest1&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest1&#091;j] &gt; arraytest1&#091;i]){
                cnt1++;
            }
        }
    }
    for(int i = 0; i &lt; 9; i++){
        if(arraytest2&#091;i] == 0){
            continue;
        }
        for(int j = i - 1; j &gt;= 0; j--){
            if(arraytest2&#091;j] &gt; arraytest2&#091;i]){
                cnt2++;
            }
        }
    }
    if(cnt1%2 != cnt2%2){
        std::cout &lt;&lt; "E0: 输入有误！问题无解" &lt;&lt; std::endl;
        return 0;
    }</code></pre>
<!-- /wp:code -->

<!-- wp:list -->
<ul><li>逆序：即在某个数字的前面比它大的数字个数。</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>左右移动，不影响逆序数；上下移动，逆序数加2或者减2。即如果初始状态能通过移动空格(0)来到达移动目标状态，则<strong>初始状态和目标状态的逆序数应该为同奇同偶</strong>。</p>
<!-- /wp:paragraph -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>广度优先代码优化思路 (DBFS)</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>可以将循环代码优化，使得不仅仅从原始数据广度优先开始搜索，也可以同时从目标数据广度优先进行搜索，能缩短约一半时间（双向广度优先算法DBFS）</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":485,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/03/image.png" alt="" class="wp-image-485" /></figure>
<!-- /wp:image -->

<!-- wp:separator {"opacity":"css"} -->
<hr class="wp-block-separator has-css-opacity" />
<!-- /wp:separator -->

<!-- wp:heading {"level":3} -->
<h3>启发式函数 f(n) = g(n) + h(n) 的分析</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li><strong>g(n)=0</strong>，一种极端情况如果g(n)=0，则只有h(n)起作用，此时A*演变成贪心算法。</li><li><strong>h(n)=0</strong>，一种极端情况如果h(n)=0，则只有g(n)起作用，此时<strong>A*演变成Dijkstra算法</strong>，这保证能找到最短路径，但效率不到。</li><li><strong>h(n)&lt;实际代价</strong> 如果h(n)经常都比从n移动到目标的实际代价小（或者相等），则A*保证<strong>能找到一条最短路径</strong>。<strong>h(n)越小</strong>，A扩展的结点越多，<strong>运行就越慢</strong>。</li><li><strong>h(n)=实际代价</strong> 如果h(n)精确地等于从n移动到目标的实际代价，则A*将会仅仅寻找最佳路径而不扩展别的任何结点，这会运行得非常快。尽管这不可能在所有情况下发生，你仍可以在一些特殊情况下让它们精确地相等（指让h(n)精确地等于实际代价）。只要提供完美的信息，A*就会运行得很完美。</li><li><strong>h(n)&gt;实际代价</strong> 如果h(n)有时比从n移动到目标的实际代价大，则A*<strong>不能保证找到一条最短路径</strong>，但它<strong>运行得更快</strong>。</li><li><strong>h(n)&gt;&gt;实际代价</strong>，即<strong>h(n)&gt;&gt;g(n)</strong>，则只有h(n)起作用，<strong>A*演变成BFS算法</strong>。</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date><![CDATA[2022-03-10 17:23:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-10 09:23:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-10 17:23:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-10 09:23:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[eight_digital_problems]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e4%ba%ba%e5%b7%a5%e6%99%ba%e8%83%bd"><![CDATA[人工智能]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[depth_first_solution_of_eight_digital_problems]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[61]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——高斯日记]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/17/day1/</link>
		<pubDate>Thu, 17 Mar 2022 06:19:39 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day1</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>大数学家高斯有个好习惯：无论如何都要记日记。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>他的日记有个与众不同的地方，他从不注明年月日，而是用一个整数代替，比如：4210。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>后来人们知道，那个整数就是日期，它表示那一天是高斯出生后的第几天。这或许也是个好习惯，它时时刻刻提醒着主人：日子又过去一天，还有多少时光可以用于浪费呢？</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>高斯出生于：1777年4月30日。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在高斯发现的一个重要定理的日记上标注着：5343，因此可算出那天是：1791年12月15日。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>高斯获得博士学位的那天日记上标着：8113。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>请你算出高斯获得博士学位的年月日。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输出格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>yyyy-mm-dd, 例如：1980-03-21</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>参考答案</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>1799-07-16</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;

int monthn&#091;12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
int monthd&#091;12] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

bool IsLeap(int year){
	if(year%400 == 0 || (year%100 != 0 &amp;&amp; year%4 == 0)){
		return true;
	}else{
		return false;
	}
}

int Last(int year, int month, int day){
	int *monthi;
	if(IsLeap(year)){
		monthi = &amp;monthd&#091;0];
	}else{
		monthi = &amp;monthn&#091;0];
	}
	int result = monthi&#091;month-1] - day;
	for(int i = month ; i &lt; 12; i++){
		result += monthi&#091;i];
	}
	return result;
}

int Past(int year, int month, int day){
	int *monthi;
	if(IsLeap(year)){
		monthi = &amp;monthd&#091;0];
	}else{
		monthi = &amp;monthn&#091;0];
	}
	int result = day;
	for(int i = 0 ; i &lt; month-1; i++){
		result += monthi&#091;i];
	}
	return result;
}

int To(int year, int month, int day){
	int result = 0;
	for(int i = 1777; i &lt;= year; i++){
		if(IsLeap(i)){
			result += 366;
		}else{
			result += 365;
		}
	}
	// 出生当天算第一天 
	return result-Past(1777, 4, 30)-Last(year, month, day)+1;
}

int main(){
//	printf("%d",To(1791,12,15));
//	printf("%d",To(1777,12,31));
	int num = 8113 - To(1777,12,31);
	int year = 1777;
	int month = 12, day = 31;
	while(true){
		int temp = num;
		if(IsLeap(year+1)){
			temp -= 366;
		}else{
			temp -= 365;
		}
		if(temp &lt; 0){
			year ++;
			break;
		}else{
			year ++;
			num = temp;
		}
	}
	int *monthi;
	if(IsLeap(year)){
		monthi = &amp;monthd&#091;0];
	}else{
		monthi = &amp;monthn&#091;0];
	}
	for(month = 1; month &lt;= 12; month++){
		if(num - monthi&#091;month-1] &gt; 0){
			num -= monthi&#091;month-1];
		}else{
			day = num;
			break;
		}
	}
	printf("%d-%d-%d",year,month,day);
	return 0;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date><![CDATA[2022-03-17 14:19:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-17 06:19:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-17 14:19:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-17 06:19:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——马虎的算式]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/18/day2/</link>
		<pubDate>Fri, 18 Mar 2022 10:31:01 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=504</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day2</li></ul>
<!-- /wp:list -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>小明是个急性子，上小学的时候经常把老师写在黑板上的题目抄错了。<br>有一次，老师出的题目是：36 x 495 = ?<br>他却给抄成了：396 x 45 = ?<br>但结果却很戏剧性，他的答案竟然是对的！！<br>因为 36 * 495 = 396 * 45 = 17820<br>类似这样的巧合情况可能还有很多，比如：27 * 594 = 297 * 54<br>假设 a b c d e 代表1~9不同的5个数字（注意是各不相同的数字，且不含0）<br>能满足形如： ab * cde = adb * ce 这样的算式一共有多少种呢？</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>请你利用计算机的优势寻找所有的可能，并回答不同算式的种类数。<br>满足乘法交换律的算式计为不同的种类，所以答案肯定是个偶数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输出格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>只提交一个表示最终统计种类数的数字，不要提交解答过程或其它多余的内容</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>参考答案</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>142</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;

bool judge(int a, int b,int c, int d,int e){
	return (a*10+b)*(c*100+d*10+e) == (a*100+d*10+b)*(c*10+e);
}

int main(){
	int num = 0;
	for(int a = 1; a &lt; 10; a++){
		for(int b = 1; b &lt; 10; b++){
			if(b == a){
				continue;
			}
			for(int c = 1; c &lt; 10; c++){
				if(c == b || c == a){
					continue;
				}
				for(int d = 1; d &lt; 10; d++){
					if(d == c || d == b || d == a){
						continue;
					}
					for(int e = 1; e &lt; 10; e++){
						if(e == d || e == c || e == b || e == a){
							continue;
						}
//						printf("%d%d%d%d%d\n",a, b, c, d, e);
						if(judge(a, b, c, d, e)){
							num++;
						}
					}
				}
			}
		}
	}
	printf("%d\n",num);
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>504</wp:post_id>
		<wp:post_date><![CDATA[2022-03-18 18:31:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-18 10:31:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-18 18:31:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-18 10:31:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——第39级台阶]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/19/day3/</link>
		<pubDate>Sat, 19 Mar 2022 13:36:20 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day3</li></ul>
<!-- /wp:list -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>小明刚刚看完电影《第39级台阶》，离开电影院的时候，他数了数礼堂前的台阶数，恰好是39级!<br>站在台阶前，他突然又想着一个问题：<br>如果我每一步只能迈上1个或2个台阶。先迈左脚，然后左右交替，最后一步是迈右脚，也就是说一共要走偶数步。那么，上完39级台阶，有多少种不同的上法呢？<br>请你利用计算机的优势，帮助小明寻找答案。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输出格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>输出一个整数</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>参考答案</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>51167078</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;stdio.h&gt;

int totol;

void fun(int last, int steps){
	if(last &lt; 0){
		return;
	}
	if(last == 0 &amp;&amp; steps%2 == 0){
		totol++;
	}
	fun(last - 1, steps + 1);
	fun(last - 2, steps + 1);
}

int main(){
	fun(39,0);
	printf("%d",totol);
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date><![CDATA[2022-03-19 21:36:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-19 13:36:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-19 21:36:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-19 13:36:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——黄金连分数]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/20/day4/</link>
		<pubDate>Sun, 20 Mar 2022 11:39:08 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day4</li></ul>
<!-- /wp:list -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>黄金分割数0.61803… 是个无理数，这个常数十分重要，在许多工程问题中会出现。有时需要把这个数字求得很精确。<br>对于某些精密工程，常数的精度很重要。也许你听说过哈勃太空望远镜，它首次升空后就发现了一处人工加工错误，对那样一个庞然大物，其实只是镜面加工时有比头发丝还细许多倍的一处错误而已，却使它成了“近视眼”!!<br>言归正传，我们如何求得黄金分割数的尽可能精确的值呢？有许多方法。<br>比较简单的一种是用连分数：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>                 1
黄金数 = ---------------------
                     1
         1 + -----------------
                      1
             1 + -------------
                        1
                 1 + ---------
                      1 + ...
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>这个连分数计算的“层数”越多，它的值越接近黄金分割数。<br>请你利用这一特性，求出黄金分割数的足够精确值，要求四舍五入到小数点后100位。<br>小数点后3位的值为：0.618<br>小数点后4位的值为：0.6180<br>小数点后5位的值为：0.61803<br>小数点后7位的值为：0.6180340<br>（注意尾部的0，不能忽略）<br>你的任务是：写出精确到小数点后100位精度的黄金分割值。<br>注意：尾数的四舍五入！ 尾数是0也要保留！</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输出格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>输出一个小数，其小数点后有100位数字</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>思路</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本题如果采用递归来计算就会造成栈溢出。观察黄金数，1层嵌套的结果是1，2层嵌套的结果是1/2，3层嵌套的结果是2/3，3层嵌套的结果是3/5...即每层的嵌套结果是斐波那契数列的前一项与后一项的比值。所以本题利用斐波那契数列的推导来求值。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>且由于C没有能表示一百位小数的数据类型，需要自己定义string类型是数据的加法和除法，而除法可以看作多次减法，即需要完成string类型数据的加减除。在函数体中要注意0的个数和位置。在加法中要先创建一个比加数和被加数长度中更长的那个的长度加一个的string类型数组用来存放结果，再将加数和被加数反序，依次相加，遇到进位需要进位（TODO：本代码中判断加数区域代码可优化，不必在b已经完成加法后且没有进位的情况下继续使用temp）。减法要注意循环借位，借完要保证中间的每一位都是'9'。除法要循环利用到减法，如果不够减，则将其末尾添0再减。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>最后结果肯定是随着斐波那契数列往后循环前100位小数一定不会再改变，要利用循环找到前一百位不再改变的数据。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>参考答案</h2>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">0.6180339887498948482045868343656381177203091798057628621354486227052604628189024497072072041893911375</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;iostream&gt;
#include&lt;algorithm&gt;
#include&lt;string&gt;

using namespace std;

// 判断a,b大小
int comp(string a, string b){
    if(a.find_first_not_of('0') == string::npos){
        a = "0";
    }else{
        a.substr(a.find_first_not_of('0'));
    }
    if(b.find_first_not_of('0') == string::npos){
        b = "0";
    }else{
        b.substr(b.find_first_not_of('0'));
    }
    if(a.length() &gt; b.length()){
        return 1;
    }else if(a.length() &lt; b.length()){
        return -1;
    }else{
        if(a &gt; b){
            return 1;
        }else if(a &lt; b){
            return -1;
        }else{
            return 0;
        }
    }
}

// 加法
string add(string a, string b){
    int tmp = 0; // 用于记录进位值
    // 去除首部的0后
    a = a.substr(a.find_first_not_of('0'));
    b = b.substr(b.find_first_not_of('0'));
    // 将a，b进行反序，方便后续计算
    reverse(a.begin(), a.end());
    reverse(b.begin(), b.end());
    // 创建结果字符串定义其长度为a，b长度的最大值加1（加一防止a，b相加后产生进位）
    string ans(max(a.length(),b.length())+1,'0');
    // 拷贝a到ans中准备计算
    for(int i = 0; i &lt; a.length(); i++){
        ans&#091;i] = a&#091;i];
    }
    // 依次循环进行相加
    for(int i = 0; i &lt; ans.length(); i++){
        if(i &lt; b.length()){
            tmp += (ans&#091;i] - '0') + (b&#091;i] - '0'); // 计算此位置的tmp
        }else{
            tmp += ans&#091;i] - '0';
        }
        ans&#091;i] = tmp%10 + '0'; // 将目前位置tmp中个位数存入ans
        tmp /= 10; // 标志下一位进位数
    }
    reverse(ans.begin(), ans.end());
    return ans.substr(ans.find_first_not_of('0'));
}

// 减法 默认a大于b的情况
string subtract(string a, string b){
    // 去除首部的0后
    if(a.find_first_not_of('0') == string::npos){
        a = "0";
    }else{
        a = a.substr(a.find_first_not_of('0'));
    }
    if(b.find_first_not_of('0') == string::npos){
        b = "0";
    }else{
        b = b.substr(b.find_first_not_of('0'));
    }
    // 将a，b进行反序，方便后续计算
    reverse(a.begin(), a.end());
    reverse(b.begin(), b.end());
    for(int i = 0; i &lt; b.length(); i++){
        if(a&#091;i] &gt;= b&#091;i]){
            a&#091;i] = a&#091;i] - b&#091;i] + '0';
        }else{
            int k = 1;
            while(a&#091;i+k] == '0'){
                a&#091;i+k] = '9';
                k++;
            }
            a&#091;i+k] = a&#091;i+k] - 1;
            // a&#091;i]变为a&#091;i]加上10（借）减去b&#091;i]
            // (a&#091;i] - '0' + 10) - (b&#091;i] - '0') + '0'
            // 化简为a&#091;i] - b&#091;i] + 10 + '0'
            a&#091;i] = a&#091;i] - b&#091;i] + 10 + '0';
        }
    }
    reverse(a.begin(), a.end());
    if(a.find_first_not_of('0') == string::npos){
        return "0";
    }
    return a.substr(a.find_first_not_of('0'));
}

// 除法 默认a小于b，且a，b大于0
string divide(string a, string b){
    // 由题意结果必然是以0.开头的小数
    string ans = "0.";
    // 记录减法次数
    int times;
    for(int i = 0; i &lt; 101; i++){
        a.append("0");
        // 初始化减去的次数
        times = 0;
        while(comp(a, b) &gt;= 0){
            a = subtract(a, b);
            times++;
        }
        char temp = times + '0';
        ans.append(1,temp);
    }
    return ans;
}

int main(){
    string a = "1";
    string b = "1";
    string res = "1";
    // 斐波那契数列
    while(true){
        string temp = b;
        b = add(a, b);
        a = temp;
        if(res == divide(a, b)){
            break;
        }else{
            res = divide(a, b);
        }
    }
    if(res&#091;102]-'0' &lt; 5){
        res = res.substr(0, res.length() - 1);
        cout &lt;&lt; res &lt;&lt; endl;
    }else{
        res = res.substr(2, res.length() - 3);
        res = add(res, "1");
        cout &lt;&lt; "0." &lt;&lt; res &lt;&lt; endl;
    }
    return 0;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date><![CDATA[2022-03-20 19:39:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-20 11:39:08]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-20 19:39:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-20 11:39:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——前缀判断]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/21/day5/</link>
		<pubDate>Mon, 21 Mar 2022 11:31:32 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=512</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day5</li></ul>
<!-- /wp:list -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>如下的代码判断 needle_start指向的串是否为haystack_start指向的串的前缀，如不是，则返回NULL。<br>比如："abcd1234" 就包含了 "abc" 为前缀</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>char* prefix(char* haystack_start, char* needle_start)
{
char* haystack = haystack_start;
char* needle = needle_start;
while(*haystack &amp;&amp; *needle){
if(<em><em><strong>__________________</strong></em></em>) return NULL; //填空位置
}
if(*needle) return NULL;
return haystack_start;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>请分析代码逻辑，并推测划线处的代码</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>答案格式</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>仅把应填在横线上缺少的代码作为答案</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>参考答案</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>*(haystack++) != *(needle++)</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>测试代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;iostream&gt;

using namespace std;

char* prefix(char* haystack_start, char* needle_start)
{
	char* haystack = haystack_start;
	char* needle = needle_start;
	while(*haystack &amp;&amp; *needle){
		if(*(haystack++) != *(needle++)) return NULL;  //填空位置
	}
	
	if(*needle) return NULL;
	
	return haystack_start;
}

int main() 
{
	char *a=prefix("abc123","abc");
	char *b=prefix("abc123","abd");
	if(a == NULL){
        cout &lt;&lt; "a = NULL" &lt;&lt; endl;
    }else{
        cout &lt;&lt; "a = " &lt;&lt; a &lt;&lt; endl;
    }
    if(b == NULL){
        cout &lt;&lt; "b = NULL" &lt;&lt; endl;
    }else{
        cout &lt;&lt; "b = " &lt;&lt; a &lt;&lt; endl;
    }
	return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">输出：
a = abc123
b = NULL</pre>
<!-- /wp:preformatted -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date><![CDATA[2022-03-21 19:31:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-21 11:31:32]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-21 19:31:32]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-21 11:31:32]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——三部排序]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/22/day6/</link>
		<pubDate>Tue, 22 Mar 2022 09:48:46 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=514</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day6</li></ul>
<!-- /wp:list -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>如果给定数组：<br>25,18,-2,0,16,-5,33,21,0,19,-16,25,-3,0<br>则排序后为：<br>-3,-2,-16,-5,0,0,0,21,19,33,25,16,18,25</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>请分析代码逻辑，并推测划线处的代码</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>void sort3p(int* x, int len)
{
	int p = 0;
	int left = 0;
	int right = len-1;
	while(p&lt;=right){
		if(x&#091;p]&lt;0){
			int t = x&#091;left];
			x&#091;left] = x&#091;p];
			x&#091;p] = t;
			left++;
			p++;
		}
		else if(x&#091;p]&gt;0){
			int t = x&#091;right];
			x&#091;right] = x&#091;p];
			x&#091;p] = t;
			right--;			
		}
		else{
			__________________________;  //填空位置
		}
	}
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>如果给定数组：<br>25,18,-2,0,16,-5,33,21,0,19,-16,25,-3,0<br>则排序后为：<br>-3,-2,-16,-5,0,0,0,21,19,33,25,16,18,25</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>请分析代码逻辑，并推测划线处的代码</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>答案格式</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>仅把应填在横线上缺少的代码作为答案</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>参考答案</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>p++</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>测试代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;iostream&gt;

using namespace std;

void sort3p(int* x, int len)
{
	int p = 0;
	int left = 0;
	int right = len-1;
	
	while(p&lt;=right){
		if(x&#091;p]&lt;0){
			int t = x&#091;left];
			x&#091;left] = x&#091;p];
			x&#091;p] = t;
			left++;
			p++;
		}
		else if(x&#091;p]&gt;0){
			int t = x&#091;right];
			x&#091;right] = x&#091;p];
			x&#091;p] = t;
			right--;			
		}
		else{
			p++;
		}
	}
	
}
int main(){
	int i;
	int a&#091;14]={25,18,-2,0,16,-5,33,21,0,19,-16,25,-3,0};
	sort3p(a,14);
	for(i = 0; i &lt; 14; i++)
		cout &lt;&lt; a&#091;i] &lt;&lt; " ";
	return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">输出：
-3 -2 -16 -5 0 0 0 21 19 33 25 16 18 25 </pre>
<!-- /wp:preformatted -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>514</wp:post_id>
		<wp:post_date><![CDATA[2022-03-22 17:48:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-22 09:48:46]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-22 17:48:46]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-22 09:48:46]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——错误票据]]></title>
		<link>https://blog.zhuanjie.ltd/2022/03/23/day7/</link>
		<pubDate>Wed, 23 Mar 2022 15:26:58 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=522</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day7</li></ul>
<!-- /wp:list -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>某涉密单位下发了某种票据，并要在年终全部收回。<br>每张票据有唯一的ID号。全年所有票据的ID号是连续的，但ID的开始数码是随机选定的。<br>因为工作人员疏忽，在录入ID号的时候发生了一处错误，造成了某个ID断号，另外一个ID重号。<br>你的任务是通过编程，找出断号的ID和重号的ID。<br>假设断号不可能发生在最大和最小号。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>（ATT：TODO改用vector获取字符流判断）</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输入格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>要求程序首先输入一个整数N(N&lt;100)表示后面数据行数。<br>接着读入N行数据。<br>每行数据长度不等，是用空格分开的若干个（不大于100个）正整数（不大于100000），请注意行内和行末可能有多余的空格，你的程序需要能处理这些空格。<br>每个整数代表一个ID号。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>输出格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>要求程序输出1行，含两个整数m n，用空格分隔。<br>其中，m表示断号ID，n表示重号ID</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>输入输出样例</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>样例输入1</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>2<br>5 6 8 11 9<br>10 12 9</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>样例输出1</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>7 9</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>样例输入2</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>6<br>164 178 108 109 180 155 141 159 104 182 179 118 137 184 115 124 125 129 168 196<br>172 189 127 107 112 192 103 131 133 169 158<br>128 102 110 148 139 157 140 195 197<br>185 152 135 106 123 173 122 136 174 191 145 116 151 143 175 120 161 134 162 190<br>149 138 142 146 199 126 165 156 153 193 144 166 170 121 171 132 101 194 187 188<br>113 130 176 154 177 120 117 150 114 183 186 181 100 163 160 167 147 198 111 119</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>样例输出2</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>105 120</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#include&lt;iostream&gt;
#include&lt;stdio.h&gt;

using namespace std;

#define n 10000 

int main(){
	int a&#091;n] = {0},   
		N,     //行数 
		min = 10000, max = 0, //id开始值和id结束值 
		m;   //中间值 
	char c;  //用来判断空格和回车	
	cin&gt;&gt;N;
	for(int i = 0; i &lt; N; i++){  //外循环，循环 “输入的行数” 的次数 
		while(1){
			cin&gt;&gt;m;
			if(m &gt; max) max = m;
			if(m &lt; min) min = m;//注意：这里不能用else if()语句。。。。
			
			a&#091;m]++;    //用数组的下标存连续的id值（不用0下标）
					   //确定范围后，数组的值==0，为断号
					   //数组的值==2，为重号 
					   
			c = getchar(); //提取空格或换行符
			if(c != ' ') break;
		} 
	}
	for(int i = min; i &lt;= max; i++){
		if(a&#091;i] == 0)cout&lt;&lt;" "&lt;&lt;i&lt;&lt;" ";
		else if(a&#091;i] == 2)cout&lt;&lt;" "&lt;&lt;i&lt;&lt;" ";
	} 
	return 0;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>522</wp:post_id>
		<wp:post_date><![CDATA[2022-03-23 23:26:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-23 15:26:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-03-23 23:26:58]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-03-23 15:26:58]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[42]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——九进制转十进制]]></title>
		<link>https://blog.zhuanjie.ltd/2022/04/11/day8/</link>
		<pubDate>Mon, 11 Apr 2022 04:09:20 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=623</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:list -->
<ul><li>day8</li></ul>
<!-- /wp:list -->

<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>九进制正整数 (2022)9 转换成十进制等于多少？</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一<br>个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-04-11 12:00:25
 * @LastEditors: 转接
 * @LastEditTime: 2022-04-11 12:08:28
 * @Description: 九进制转十进制
 */
/*
day8

每日一题——九进制转十进制

九进制正整数 (2022)9 转换成十进制等于多少？
*/
#include&lt;iostream&gt;
#include&lt;math.h&gt;

using namespace std;

int switch_num(int num){
    int sum = 0;
    int i = 0;
    while(num){
        sum += (num%10)*pow(9,i);
        num /= 10;
        i++;
    }
    return sum;
}

int main(){
    int num;
    cin&gt;&gt;num;
    cout&lt;&lt;switch_num(num);
    return 0;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>623</wp:post_id>
		<wp:post_date><![CDATA[2022-04-11 12:09:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-11 04:09:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-11 12:09:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-11 04:09:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[关于各种排序]]></title>
		<link>https://blog.zhuanjie.ltd/2022/04/11/all_kinds_of_sort/</link>
		<pubDate>Mon, 11 Apr 2022 07:51:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=625</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:paragraph -->
<p><a href="http://startpage.zhuanjie.ltd:8888/down/W4UMsxpMhjTb" target="_blank" rel="noreferrer noopener">源码及测试样例下载</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>LSD(Least Significant Digit)基数排序</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>需要r个辅助队列（本代码中r为10）</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>时间复杂度O(d(n+r))</li><li>空间复杂度O(r)</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int *LSD(int *a, int f, int l)
{
    int n = l - f + 1;
    int m = log(n) / log(10);
    queue&lt;int&gt; q&#091;10];
    for(int i = 0; i &lt; m; i++){
        for(int j = 0; j &lt; n; j++){
            int t = a&#091;f + j] % (int)pow(10, i + 1);
            t = t / (int)pow(10, i);
            q&#091;t].push(a&#091;f + j]);
        }
        int k = 0;
        for(int j = 0; j &lt; 10; j++){
            while(!q&#091;j].empty()){
                a&#091;f + k] = q&#091;j].front();
                q&#091;j].pop();
                k++;
            }
        }
    }
    return a;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>MSD(Most Significant Digit)基数排序</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>需要r个辅助队列（本代码中r为10）</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>时间复杂度O(d(n+r))</li><li>空间复杂度O(r)</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int *MSD(int *a, int f, int l)
{
    int n = l - f + 1;
    int m = log(n) / log(10);
    queue&lt;int&gt; q&#091;10];
    for(int i = 0; i &lt; m; i++){
        for(int j = 0; j &lt; n; j++){
            int t = a&#091;f + j] / (int)pow(10, i);
            t = t % 10;
            q&#091;t].push(a&#091;f + j]);
        }
        int k = 0;
        for(int j = 0; j &lt; 10; j++){
            while(!q&#091;j].empty()){
                a&#091;f + k] = q&#091;j].front();
                q&#091;j].pop();
                k++;
            }
        }
    }
    return a;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>QS(Quick Sort)快速排序</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>时间复杂度O(nlogn)</li><li>空间复杂度O(1)</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int *QS(int *a, int f, int l)
{
    if(f &gt;= l) return a;
    int i = f, j = l;
    int x = a&#091;f];
    while(i &lt; j){
        while(i &lt; j &amp;&amp; a&#091;j] &gt;= x) j--;
        if(i &lt; j) a&#091;i++] = a&#091;j];
        while(i &lt; j &amp;&amp; a&#091;i] &lt;= x) i++;
        if(i &lt; j) a&#091;j--] = a&#091;i];
    }
    a&#091;i] = x;
    QS(a, f, i - 1);
    QS(a, i + 1, l);
    return a;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>MS(Merge Sort)归并排序</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>时间复杂度O(nlogn)</li><li>空间复杂度O(n)</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int *MS(int *a, int f, int l)
{
    if(f &gt;= l) return a;
    int m = (f + l) / 2;
    MS(a, f, m);
    MS(a, m + 1, l);
    int *b = new int&#091;l - f + 1];
    int i = f, j = m + 1, k = 0;
    while(i &lt;= m &amp;&amp; j &lt;= l){
        if(a&#091;i] &lt; a&#091;j]) b&#091;k++] = a&#091;i++];
        else b&#091;k++] = a&#091;j++];
    }
    while(i &lt;= m) b&#091;k++] = a&#091;i++];
    while(j &lt;= l) b&#091;k++] = a&#091;j++];
    for(int i = 0; i &lt; k; i++) a&#091;f + i] = b&#091;i];
    return a;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>SS(Shell Sort)希尔排序</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>时间复杂度O(n^1.3)</li><li>空间复杂度O(1)</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int *SS(int *a, int f, int l)
{
    int n = l - f + 1;
    int h = 1;
    h = n / 2;
    while(h &gt;= 1){
        for(int i = f + h; i &lt;= l; i++){
            int t = a&#091;i];
            int j = i - h;
            while(j &gt;= f &amp;&amp; a&#091;j] &gt; t){
                a&#091;j + h] = a&#091;j];
                j -= h;
            }
            a&#091;j + h] = t;
        }
        h /= 2;
    }
    return a;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>IS(Insertion Sort)插入排序</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>时间复杂度O(n^2)</li><li>空间复杂度O(1)</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int *IS(int *a, int f, int l){
    for(int i = f + 1; i &lt;= l; i++){
        int t = a&#091;i];
        int j = i - 1;
        while(j &gt;= f &amp;&amp; a&#091;j] &gt; t){
            a&#091;j + 1] = a&#091;j];
            j--;
        }
        a&#091;j + 1] = t;
    }
    return a;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>BS(Bubble Sort)冒泡排序</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>时间复杂度O(n^2)</li><li>空间复杂度O(1)</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int *BS(int *a, int f, int l){
    for(int i = f; i &lt; l; i++){
        for(int j = f; j &lt; l - i; j++){
            if(a&#091;j] &gt; a&#091;j + 1]){
                int t = a&#091;j];
                a&#091;j] = a&#091;j + 1];
                a&#091;j + 1] = t;
            }
        }
    }
    return a;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>测试部分：</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-04-11 13:27:41
 * @LastEditors: 转接
 * @LastEditTime: 2022-04-11 15:19:31
 * @Description: 各种排序算法
 */

#include &lt;iostream&gt;
#include &lt;math.h&gt;
#include &lt;queue&gt;
#include &lt;time.h&gt;
#include &lt;fstream&gt;

using namespace std;

// LSD(Least Significant Digit)基数排序
// 需要r个辅助队列（本代码中r为10）
// 时间复杂度O(d(n+r))
// 空间复杂度O(r)
int *LSD(int *a, int f, int l)
{
    int n = l - f + 1;
    int m = log(n) / log(10);
    queue&lt;int&gt; q&#091;10];
    for(int i = 0; i &lt; m; i++){
        for(int j = 0; j &lt; n; j++){
            int t = a&#091;f + j] % (int)pow(10, i + 1);
            t = t / (int)pow(10, i);
            q&#091;t].push(a&#091;f + j]);
        }
        int k = 0;
        for(int j = 0; j &lt; 10; j++){
            while(!q&#091;j].empty()){
                a&#091;f + k] = q&#091;j].front();
                q&#091;j].pop();
                k++;
            }
        }
    }
    return a;
}

// MSD(Most Significant Digit)基数排序
// 需要r个辅助队列（本代码中r为10）
// 时间复杂度O(d(n+r))
// 空间复杂度O(r)
int *MSD(int *a, int f, int l)
{
    int n = l - f + 1;
    int m = log(n) / log(10);
    queue&lt;int&gt; q&#091;10];
    for(int i = 0; i &lt; m; i++){
        for(int j = 0; j &lt; n; j++){
            int t = a&#091;f + j] / (int)pow(10, i);
            t = t % 10;
            q&#091;t].push(a&#091;f + j]);
        }
        int k = 0;
        for(int j = 0; j &lt; 10; j++){
            while(!q&#091;j].empty()){
                a&#091;f + k] = q&#091;j].front();
                q&#091;j].pop();
                k++;
            }
        }
    }
    return a;
}

// QS(Quick Sort)快速排序
// 时间复杂度O(nlogn)
// 空间复杂度O(1)
int *QS(int *a, int f, int l)
{
    if(f &gt;= l) return a;
    int i = f, j = l;
    int x = a&#091;f];
    while(i &lt; j){
        while(i &lt; j &amp;&amp; a&#091;j] &gt;= x) j--;
        if(i &lt; j) a&#091;i++] = a&#091;j];
        while(i &lt; j &amp;&amp; a&#091;i] &lt;= x) i++;
        if(i &lt; j) a&#091;j--] = a&#091;i];
    }
    a&#091;i] = x;
    QS(a, f, i - 1);
    QS(a, i + 1, l);
    return a;
}

// MS(Merge Sort)归并排序
// 时间复杂度O(nlogn)
// 空间复杂度O(n)
int *MS(int *a, int f, int l)
{
    if(f &gt;= l) return a;
    int m = (f + l) / 2;
    MS(a, f, m);
    MS(a, m + 1, l);
    int *b = new int&#091;l - f + 1];
    int i = f, j = m + 1, k = 0;
    while(i &lt;= m &amp;&amp; j &lt;= l){
        if(a&#091;i] &lt; a&#091;j]) b&#091;k++] = a&#091;i++];
        else b&#091;k++] = a&#091;j++];
    }
    while(i &lt;= m) b&#091;k++] = a&#091;i++];
    while(j &lt;= l) b&#091;k++] = a&#091;j++];
    for(int i = 0; i &lt; k; i++) a&#091;f + i] = b&#091;i];
    return a;
}

// SS(Shell Sort)希尔排序
// 时间复杂度O(n^1.3)
// 空间复杂度O(1)
int *SS(int *a, int f, int l)
{
    int n = l - f + 1;
    int h = 1;
    h = n / 2;
    while(h &gt;= 1){
        for(int i = f + h; i &lt;= l; i++){
            int t = a&#091;i];
            int j = i - h;
            while(j &gt;= f &amp;&amp; a&#091;j] &gt; t){
                a&#091;j + h] = a&#091;j];
                j -= h;
            }
            a&#091;j + h] = t;
        }
        h /= 2;
    }
    return a;
}

// IS(Insertion Sort)插入排序
// 时间复杂度O(n^2)
// 空间复杂度O(1)
int *IS(int *a, int f, int l){
    for(int i = f + 1; i &lt;= l; i++){
        int t = a&#091;i];
        int j = i - 1;
        while(j &gt;= f &amp;&amp; a&#091;j] &gt; t){
            a&#091;j + 1] = a&#091;j];
            j--;
        }
        a&#091;j + 1] = t;
    }
    return a;
}

// BS(Bubble Sort)冒泡排序
// 时间复杂度O(n^2)
// 空间复杂度O(1)
int *BS(int *a, int f, int l){
    for(int i = f; i &lt; l; i++){
        for(int j = f; j &lt; l - i; j++){
            if(a&#091;j] &gt; a&#091;j + 1]){
                int t = a&#091;j];
                a&#091;j] = a&#091;j + 1];
                a&#091;j + 1] = t;
            }
        }
    }
    return a;
}



int main(){
    int n = 10000;
    // 生成n个随机数
    int a&#091;n];
    for(int i = 0; i &lt; n; i++){
        a&#091;i] = rand() % 10000;
    }
    // 将数据写入文件
    ofstream fout("data.txt");
    fout &lt;&lt;  "排序前：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; a&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();
    // LSD基数排序
    // 记录时间
    clock_t time1 = clock();
    int *b = LSD(a,0,n-1);
    clock_t time2 = clock();
    // 输出结果追加到data.txt
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "LSD基数排序后：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; b&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();

    // MSD基数排序
    // 记录时间
    clock_t time3 = clock();
    int *c = MSD(a,0,n-1);
    clock_t time4 = clock();
    // 输出结果追加到data.txt
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "MSD基数排序后：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; c&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();

    // QS快速排序
    // 记录时间
    clock_t time5 = clock();
    int *d = QS(a,0,n-1);
    clock_t time6 = clock();
    // 输出结果追加到data.txt
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "QS快速排序后：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; d&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();

    // MS归并排序
    // 记录时间
    clock_t time7 = clock();
    int *e = MS(a,0,n-1);
    clock_t time8 = clock();
    // 输出结果追加到data.txt
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "MS归并排序后：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; e&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();

    // SS希尔排序
    // 记录时间
    clock_t time9 = clock();
    int *f = SS(a,0,n-1);
    clock_t time10 = clock();
    // 输出结果追加到data.txt
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "SS希尔排序后：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; f&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();

    // IS插入排序
    // 记录时间
    clock_t time11 = clock();
    int *g = IS(a,0,n-1);
    clock_t time12 = clock();
    // 输出结果追加到data.txt
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "IS插入排序后：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; g&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();

    // BS冒泡排序
    // 记录时间
    clock_t time15 = clock();
    int *k = BS(a,0,n-1);
    clock_t time16 = clock();
    // 输出结果追加到data.txt
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "BS冒泡排序后：" &lt;&lt; endl;
    for(int i = 0; i &lt; n; i++){
        fout &lt;&lt; k&#091;i] &lt;&lt; " ";
    }
    fout &lt;&lt; endl;
    fout.close();

    // 最后输出排序时间比较
    fout.open("data.txt", ios::app);
    fout &lt;&lt; "-----------------------------------------------" &lt;&lt; endl;
    fout &lt;&lt; "LSD基数排序用时：" &lt;&lt; (double)(time2 - time1) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; endl;
    fout &lt;&lt; "MSD基数排序用时：" &lt;&lt; (double)(time4 - time3) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; endl;
    fout &lt;&lt; "QS快速排序用时：" &lt;&lt; (double)(time6 - time5) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; endl;
    fout &lt;&lt; "MS归并排序用时：" &lt;&lt; (double)(time8 - time7) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; endl;
    fout &lt;&lt; "SS希尔排序用时：" &lt;&lt; (double)(time10 - time9) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; endl;
    fout &lt;&lt; "IS插入排序用时：" &lt;&lt; (double)(time12 - time11) / CLOCKS_PER_SEC &lt;&lt; "s" &lt;&lt; endl;
    fout.close();
    return 0;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>625</wp:post_id>
		<wp:post_date><![CDATA[2022-04-11 15:51:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-11 07:51:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-11 15:51:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-11 07:51:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[all_kinds_of_sort]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[编译原理实验1]]></title>
		<link>https://blog.zhuanjie.ltd/2022/06/02/byyl1/</link>
		<pubDate>Thu, 02 Jun 2022 02:16:10 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=638</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>实验内容与要求</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>设计一种程序设计语言并定义其词法，输入使用该程序语言编写的源程序，输出经过词法分析生成的符号表及将源程序的字节流转换成单词的单词流。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>创建一个词法分析程序，它支持对正规文法的分析。必须使用DFA（确定性有限自动机）或NFA（非确定性有限自动机）来实现这一项目。该程序的输入是一个文本文件，包括一组由该正规文法产生的产生式以及待识别源代码字符串。该程序的输出是一个符号表（二元式），它由5种类型符号：关键词，识别符，常量，界符和操作符。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验目的：</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>通过实验理解文法及文法在编写词法分析中的应用、理解符号表及掌握符号管理技术。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验准备：</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>程序设计语言：</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>程序设计语言为PL0语言，其特点是数据类型只有整数类型，具有三种程序结构（顺序、分支及循环），有过程定义，但过程无参数，允许分程序嵌套定义。具有常量定义、变量定义等。PL0语言的单词分类：分隔符、运算符、常数、标识符及保留字，具体如下</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li><strong>分隔符</strong>：.(圆点)、,(逗号)、;(分号)、((左圆括号)、)(右圆括号)、=(等号)及:=(赋值号)；</li><li><strong>运算符</strong>：分为算术运算符和关系运算符；</li><li><strong>算术运算符</strong>：+(加)、-(减)、*(乘)、/(除)及+(取正)、-(取负)；</li><li><strong>关系运算符</strong>：=(等于)、#(不等)、&lt;(小于)、&lt;=(小于等于)、&gt;(大于)、&gt;=(大于等于)及odd(是否为偶数)；</li><li><strong>常数</strong>：由0到9组成的整形常数；</li><li><strong>标识符</strong>：由字母开始由字母及数字组成的符号串；</li><li><strong>保留字</strong>：保留字不分大小写，有如下这些：begin、call、const、do、end、if、odd、procedure、read、then、var、while、write、else、BEGIN、CALL、CONST、DO、END、IF、ODD、PROCEDURE、READ、THEN、VAR、WHILE、WHILE、ELSE；</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>char *kword[28]={"begin","call","const","do","end","if","odd","procedure","read","then","var","while","write","else","BEGIN","CALL","CONST","DO","END","IF","ODD","PROCEDURE","READ","THEN","VAR","WHILE","WHILE","ELSE"};</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>常数的文法定义</strong>：</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>N::=D|DN</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>D::=[0..9]；</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>标识符的文法定义</strong>：</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>ID::=LT|L</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>L::=[a..z]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>T::=LT|LD</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>D::=[0..9]；</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li><strong>单词的处理</strong>：一个单词由单词类别及单词值组成。分隔符、运算符及保留字一个单词一个类别，常数一个类别，标识符一个类别，每个类别使用一个整数编码。标识符、运算符及保留字保存在符号表中；</li><li><strong>单词表示</strong>：使用结构体表示一个单词，结构体的组成如下：</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><strong>单词类别</strong>：使用一个整数编码；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>单词值</strong>：如果是分隔符、运算符则单词值无意义，如果是标识符或保留字，则单词值为其存储在符号表中的下标，如果是常数，则单词值为常数值；</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>存储NFA的数据结构为二维结构体，结构体定义如下</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>struct NFA_set</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>{</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>char set[100];</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>int len=0;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>};</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>用子集法将NFA转化为DFA。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>实验过程：</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>源程序</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><a href="http://gitlab.zhuanjie.ltd/Randall/byyl1">Randall Chu / 编译原理实验一 · GitLab (zhuanjie.ltd)</a></p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>运行结果之载图</li></ul>
<!-- /wp:list -->

<!-- wp:image {"id":639,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image.png" alt="" class="wp-image-639" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":640,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-1.png" alt="" class="wp-image-640" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>实验总结：</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>通过本次实验，我学到了很多东西。首先是加深了对编译原理课程的理解，对词法分析有了更进一步的掌握，其次是编程能力的提高。这一次的编译原理课程实验，我更注重数据结构的使用，数据结构的好坏直接决定了代码的复杂度和代码量，有一些可以用链表结构的地方尽量避免用链表，换用数组和一个表示长度的整型变量的数据结构来表示，因为链表虽然方便灵活，但是链接的使用会导致后台运算量的增加。通过这一段时间写词法分析器，我对一个编译器的组成有了更深层次的认识。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果增加判断数据的类型，新增单精度和双精度数据。单精度：取值范围在正负1.5X10的负45次方到3.4X10的38次方之间，精度为7位数。双精度：取值范围在正负5.0X10的负324到1.7X10的308次方之间，精度为15到16位数。增加科学计数法表示数字的模式，在运算符中新增符号e。如果整数类型引入八进制整数、十六进制整数、长整数及短整数应该在判断数字之前增加判断，新增前缀判断0b、0B为二进制，0开头为八进制，0x、0X开头为十六进制，在判断为几进制数后还要新增判断该数字中的每个数字是否都有该进制的有效的数字。词法分析器的主要任务是读入源程序的输入字符、将它们组成词素，生成并输出一个词法单元序列。过滤掉源程序中的注释和空白，将编译器生成的错误消息和源程序的位置联系起来。有时，词法分析器可以分成两个级联的处理阶段：1）扫描阶段主要负责完成一些不需要生词词法单元的简单处理，比如删除注释和将多个连续的空白字符压缩成一个字符2）&nbsp;&nbsp;&nbsp;&nbsp; 词法分析阶段是较为复杂的部分，它处理扫描阶段的输出并生成词法单元用子集法将NFA转化为DFA。转化过程与课本中子集法的转化过程是一致的。我的程序中，int Is_in(NFA_set temp)函数用于判断新产生的一个子集是否是已经存在的，防止重复。不重复则返回-1，重复则返回重复的编号。void get_closure(NFA_set &amp;temp)函数用于计算ε-closure。bool Is_contained_Y(NFA_set temp)函数用于判断该状态是否是终态。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>转化过程是具体实现是：做一个NFA_set类型的栈，新状态不停的进栈，每次从堆栈中弹出一个，计算其转换的结果，是新状态就进栈，重复则丢弃，只记录好dfa的转换，直到栈空。最后成功构造出DFA。对输入源程序的扫描过程很简单，一次读入一个字符，成串的送入匹配和DFA判断其合法性。给出输出结果。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>删除注释需要读取到“//”直接跳过本行后面的内容，读取到“/*”则暂停分析程序一路扫描跳过，直到扫描到“*/”恢复程序运行。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>宏替换需要在调用宏时，首先对参数进行检查，看看是否包含任何由#define定义的符号。如果是，它们首先被替换。替换文本随后被插入到程序中原来文本的位置。对于宏，参数名被它们的值替换。最后，再次对结果文件进行扫描，看看它是否包含任何由#define定义的符号。如果是，就重复上述处理过程。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>宏展开是一个替换的过程，考虑对上述宏的调用则是一个无限递归的展开过程；为了防止无限递归这种情况的产生，宏展开时会做一个标记，再次对于展开时就不再对其进行替换，这种情况同样适用于非直接自引用的情况。如果宏的参数不是被字符串化或与其它token进行拼接，则宏的参数是完全进行替换的。一旦替换完成，替换后的宏体会被再次扫描完成宏体部分的宏展开。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>638</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:16:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:16:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:16:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:16:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[byyl1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="%e7%bc%96%e8%af%91%e5%8e%9f%e7%90%86"><![CDATA[编译原理]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[640]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[编译原理实验2]]></title>
		<link>https://blog.zhuanjie.ltd/2022/06/02/byyl2/</link>
		<pubDate>Thu, 02 Jun 2022 02:35:15 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=642</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2><strong>实验内容：</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>输入一组正则表达式，输出其转换后的最简的确定有限自动机，并根据生成的确定有限自动机完成实验一的任务。（即完成词法分析任务）</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>输入一转换图，生成与之等价的正则表达式（未完成）</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>实验准备：</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>正则表达式的语义定义：符号表Σ上的正则表达式α定义一个Σ上的一个符号串的集合，记为L(α)，其定义如下：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>R::=R1|R2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {L(R)=L(R1)∪L(R2)}</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>R::=R1R2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {L(R)=L(R1)L(R2)}</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>R::=R1*          {L(R)=</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":643,"width":77,"height":20,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full is-resized"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-2.png" alt="" class="wp-image-643" width="77" height="20" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>}</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>R::=(R1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {L(R)=L(R1)&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>R::=a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {a∈Σ,且 L(R)={a} }</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>R::=ε&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {ε不是Σ中的元素，L(R)={} }</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>转换图的定义：符号表Σ上转移T是一个带有权值的有向图T=(V,A),这是V是有向图T的顶点集合，其中的元素称之为状态，因此V亦称状态集，A是弧的集合，弧带有一个权α，其是Σ上的一个正则表达式。其满足如下条件：</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>存在唯一一个状态S0称为开始状态，其无引入弧</li><li>存在唯一一个状态S1称为终止状态，其无引出弧</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>转换图定义的语言记为L(T)，其是Σ上的一个符号串的集合，Σ上的符号串α∈L(T)当且仅当存在一个由开始状态S0到终止状态S1的路径V<sub>0</sub>α<sub>1</sub>V<sub>1</sub>α<sub>2</sub>……V<sub>n-1</sub>α<sub>n</sub>V<sub>n</sub>。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>其中V<sub>0</sub>=S<sub>0</sub>，V<sub>n</sub>=S<sub>1</sub>，（V<sub>i-1</sub>,V<sub>i</sub>, α<sub>i</sub>） (i=1,2,……,n)是T上的弧，且α∈L(α<sub>1</sub>)……L(α<sub>n</sub>)。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果A中每个弧上的正则表达式是Σ上的一个符号或ε（无任何符号），则转换图称之为不确定的有限自动机。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果A中每个弧上的正则表达式只能是Σ上的符号且任两个弧（V<sub>1</sub>,V<sub>2</sub>,α<sub>1</sub>）、（V’<sub>1</sub>,V’<sub>2</sub>,α’<sub>1</sub>），如果V<sub>1</sub>=V’<sub>1</sub>，则V<sub>2</sub>&lt;&gt;V’<sub>2</sub>。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>基本算法：</strong></h2>
<!-- /wp:heading -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph -->
<p>将正则表达式转换成不确定的有限自动机：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对于一个正则表达式α，构造一个转移图，由开始状态S0引出一个到终止状态S1的弧，（S<sub>0</sub>,S<sub>1</sub>, α）。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果有多个正则表达式α<sub>1</sub>，……，α<sub>n</sub>，先为每个α<sub>i</sub>(1&lt;=i&lt;=n)构造一个转换图T<sub>i</sub>。建立一个新的转换图T，构造如下：添加一个S<sub>b</sub>状态，为Ｔ的开始状态，对每个α<sub>i</sub>对应的转换图T<sub>i</sub>的开始状态S<sub>i</sub>，添加弧(S<sub>b</sub>,S<sub>i</sub>,ε)。添加一个新状态Se，为T的终止状态，对每个α<sub>i</sub>对应转换图T<sub>i</sub>的终止状态S’<sub>i</sub>，添加弧（S’<sub>i</sub>,S<sub>b</sub>,ε）。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>重复如下操作，直到无状态转换图T无变化</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对T中的每个弧(S<sub>1</sub>,S2,α)，将α分解成两个正则表达式α<sub>1</sub>与α<sub>2</sub>由运算OP组成，即α=α<sub>1</sub>　OP　α<sub>2</sub>。根据OP做如下操作：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OP是链接运算且α<sub>1</sub>与α<sub>2</sub>皆非ε(即不为空串)，则于T中删除弧(S<sub>1</sub>,S<sub>2</sub>,α),于T中添加一个状态S，并将弧(S<sub>1</sub>,S,α<sub>1</sub>)与(S,S<sub>2</sub>,α<sub>2</sub>)添加到T中；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OP是链接运算且α<sub>1</sub>=(α’)，α2=ε，则于T中删除弧(S<sub>1</sub>,S<sub>2</sub>,α)，添加弧(S<sub>1</sub>,S<sub>2</sub>,α’)到T中；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OP是或运算，则于T中删除弧(S<sub>1</sub>,S<sub>2</sub>,α)，将弧(S<sub>1</sub>,S<sub>2</sub>,α<sub>1</sub>)与弧(S<sub>1</sub>,S<sub>2</sub>,α)添加到T中；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>OP是闭包运算，且α2=ε，则于T中删除弧(S<sub>1</sub>,S<sub>2</sub>,α)，于T中添加一个新状态S，并将弧(S<sub>1</sub>,S,ε)、(S,S,α<sub>1</sub>)及(S,S<sub>2</sub>,ε)添加到T中。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>将不确定有限自动机确定化：不确定有限自动机记为NFA，则按照如下操作构造一个确定有限自动机DFA其与NFA等价。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>构造NFA中的状态集组成的集合Ｆ，初始时Ｆ为空；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>将NFA状态集closure({S<sub>0</sub>})添加到Ｆ中（S<sub>0</sub>是NFA的开始状态）；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>重复如下操作，直到Ｆ中无新元素增加止</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对Ｆ中任一元素Ｓ(NFA的状态集)，对符号表Σ中的每个符号a，将closure(Ｓ<sub>a</sub>)添加到Ｆ中。有关Ｓa定义如下：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Ｓ<sub>a</sub>={s | 于Ｓ中存在一个状态s’，使得（s’, s, a）是NFA中的一个弧}</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>定义转移图T如下：则以Ｆ中元素为状态，对Ｆ中每个元素Ｓ，则有弧(Ｓ，Ｓ<sub>a</sub>, a)。如果Ｆ中的元素Ｓ（NFA的状态集）中含有NFA的终止状态，则其Ｓ是T的终止状态。T的开始状态是closure({S<sub>0</sub>})。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>确定有限自动机的化简操作：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>将DFA化简为最简单的sDFA操作如下：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>建立DFA状态集的一个分划：π，初始时π中仅有两个集合，一个是由DFA中状态组成的集合，另一个不是终止状态组成的集合。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>重复如下操作</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对符号表Σ上的每一个符号a做如下操作</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>建立一个空分划π<sub>0</sub>（即π<sub>0</sub>是一个空的状态集合之集合）</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对π中的每个集合Ｓ0</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对π中的第i个集合Ｓ<sub>i</sub></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>令Ｓ0,i,a={s∈Ｓ<sub>0</sub>　| 存在弧(s,s1,a)，这里s<sub>1</sub>∈Ｓ<sub>i</sub>}</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If(Ｓ0,i,a非空)将Ｓ0,i,a添加到π<sub>0</sub>中</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>将π<sub>0</sub>记之为π</p>
<!-- /wp:paragraph --></div>
<!-- /wp:group -->

<!-- wp:heading -->
<h2><strong>自动生成词法分析程序：</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>类Disjoint:并查集, 用于计算等价关系；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>类Automata:有穷自动机：</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>有穷状态集(对应有向图中的节点)</li><li>输入字母表(状态转移边的标注)</li><li>状态转移规则(对应有向图中的边)</li><li>初始状态</li><li>终止状态集</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>检查转移图的合法性:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>起始状态必须在状态集中</li><li>终止状态必须在状态集中</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>检验是否为确定的有穷自动机(DFA) 标准:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>不能有 epsilon 作为输入的字母</li><li>存在某状态对于某字母有多种后继状态</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2><strong>实验过程：</strong></h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>编写代码</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>源码：<a href="http://gitlab.zhuanjie.ltd/Randall/byyl2">Randall Chu / 编译原理实验2 · GitLab (zhuanjie.ltd)</a></p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>测试运行(实验环境Windows11 Python3.10 pycharm)，如图：</li></ol>
<!-- /wp:list -->

<!-- wp:image {"id":644,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-3.png" alt="" class="wp-image-644" /></figure>
<!-- /wp:image -->

<!-- wp:list {"ordered":true,"type":"1"} -->
<ol type="1"><li>输出信息：</li></ol>
<!-- /wp:list -->

<!-- wp:image {"id":645,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-4.png" alt="" class="wp-image-645" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":646,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-5.png" alt="" class="wp-image-646" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":647,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-6.png" alt="" class="wp-image-647" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":648,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-7.png" alt="" class="wp-image-648" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><strong>实验总结：</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>通过本次实验我学会了从正则表达式转NFA(不确定的有穷自动机)、NFA转DFA(确定的有穷自动机)和DFA的最小化。同时我也尝试输出了自动机的转移矩阵和输出自动机的状态转移图。输出自动机的状态转移图使用的是图形可视化软件Graphviz的使用，他能够将将结构信息表示为抽象图形和网络图。在编程过程中程序抛出了ExecutableNotFound的异常信息，经过检查发现为未将Graphviz的安装地址置于系统的环境变量中。状态图中：以圆圈表示状态（圆圈内为状态名），箭头表示状态转移边。以start标记引出箭头指向起始状态，以双圈表示终止状态。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>642</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 10:35:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 02:35:15]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 10:35:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 02:35:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[byyl2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="%e7%bc%96%e8%af%91%e5%8e%9f%e7%90%86"><![CDATA[编译原理]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[648]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[编译原理实验3]]></title>
		<link>https://blog.zhuanjie.ltd/2022/06/02/byyl3/</link>
		<pubDate>Thu, 02 Jun 2022 10:16:53 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=650</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>语义分析常用算法的实现及应用实验<br>以某种方式输入一个上下文无关文法，构造其LL分析表、算符优先分析表及LR分析表，并能够差别一个字符串是否是给定文法中的句子</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>实验内容</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>以某种方式输入一个上下文无关文法，构造其LL分析表、算符优先分析表及LR分析表，并能够差别一个字符串是否是给定文法中的句子</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在实验一或实验二的基础上，建立一个表达式的文法，并生成该表达式的计算程序。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>实验目的</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>1、进一步理解文法特别是上下文无关文法相关概念</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>2、掌握求First集、Follow集、FirstVt集及LastVt集算法，并能够应用其构造文法的LL分析表、算符优先分析表及LR分析表</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>3、通过分析LL(1)文法、算符优先文法及LR(1)文法进一步理解自动编程方法</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>实验准备</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3><strong>文法的输入</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在一个文框中输入文法规则，每个规则占一行，文法规则以如下形式输入：左部符号::=文法规则右部符号串</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>第一条规则的左部符号即为文法的开始符号。一个（左部符号或右部符号）符号使用一个字符串表示，如果有两个形如“A::=α和A::=β”的规则，则可以合并成“A::=α｜β”。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>左部符号与右部符号的确定</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>左部符号的确定：位于每个规则左部即为左部符号。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>右部符号的确定：将每个右部符号串使用左部符号之符号串将其分隔成字符串序列，则不是左部符号之符号串即为右部符号或右部符号串组成的字符串。分隔的原则是“长度优先”，即一个长左部符号串不得再分隔成字符串序列，一个字符串优先使用较长的左部符号之符号串分隔。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>文法的存储表示</strong></h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>关键记数：左部符号个数nVn，右部符号个数nVt，规则个数nRule</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>符号表：使用一个字符串数组存储左部及右部符号，左部符号字符串在前，右部字符串在后。每个符号使用其在符号表中的下标表示，当下标是nVn+nVt时，符号是空符号（ε），当下标是nVn+nVt+1时，符号是结束符号（#）。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>规则列表：使用一个规则数组存储规则列表，一条规则由左部符号（使用其在符号表中下标表示）及左部符号序列（即符号之下标序列）表示。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><strong>基本操作算法描述</strong></h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4><strong>求First集算法</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>先初始化非终结符的First集为空，初始化终结符的First集合为自己；开始循环，当First集没有更新就结束循环。循环内：新建一个标记flag初始化为False，遍历所有非终结符，每次遍历非终结符时遍历所有产生式。新建一个标记mark初始化为True，当mark为True并且遍历到产生式的末尾就结束。如果还存在没有添加的即First[Yi]中没有ε，则将First[Yi]添加到First[X]中，同时将标记mark更新为False。如果是第一个符号，则将First[Yi]中的非ε添加到First[X]中，同时flag标记更新为True。如果Yi不能推出ε就标记为False；如果所有的Yi都推出ε则将ε添加到First[X]中。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>def getFirst() -&gt; None:
    global non_term, term, First
    # 初始化非终结符的First集为空
    for it in non_term: First&#091;it] = set()
    # 初始化终结符的First集合为自己
    for it in term:
        First&#091;it] = set(it)
    flag = True
    while flag:  # 当First集没有更新就结束
        flag = False  # 新建一个标记flag初始化为False
        for X in non_term:  # 遍历所有非终结符
            for Y in production&#091;X]:  # 遍历所有产生式
                i = 0
                mark = True  # 新建一个标记mark初始化为True
                while mark and i &lt; len(Y):  # 当mark为True并且遍历到产生式的末尾就结束
                    if not First&#091;Y&#091;i]] - set(epsilon) &lt;= First&#091;X]:  # 还存在没有添加的
                        # print('First&#091;' , X, '] = ', "   ", First&#091;X], 'First&#091;', Y&#091;i] , '] = ' , First&#091;Y&#091;i]])
                        # First&#091;Yi] 中没有 ε
                        if epsilon not in First&#091;Y&#091;i]] and Y&#091;i] in non_term and i &gt; 0:  # 如果不是第一个符号
                            First&#091;X] |= First&#091;Y&#091;i]]  # 将 First&#091;Yi] 添加到 First&#091;X] 中
                            mark = False  # 标记更新为False
                        else:  # 如果是第一个符号
                            First&#091;X] |= First&#091;Y&#091;i]] - set(epsilon)  # 将 First&#091;Yi] 中的非 ε 添加到 First&#091;X] 中
                            flag = True  # flag标记更新为True
                    if epsilon not in First&#091;Y&#091;i]]:  # 如果 Yi 不能推出 ε 就标记为 False
                        mark = False  # mark标记更新为False
                    i += 1
                if mark:  # 如果所有的 Yi 都推出 ε
                    First&#091;X] |= set(epsilon)  # 将 ε 添加到 First&#091;X] 中
return None
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4><strong>求Follow集算法</strong></h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>初始化后将 # 号加入到Follow[s] 中，新建一个标记flag初始化为True。开始循环，当Follow集不再更新，算法结束。循环内：标记flag初为False，遍历所有非终结符。每次遍历非终结符时遍历所有产生式，扫描产生式时遍历所有产生式的每一个符号。bi 是终结符则跳过，否则新建一个标记mark初始化为True，遍历所有产生式的每一个符号。如果可以更新则将 First[Bj] 中的非 ε 添加到 Follow[Bi] 中，设置标记flag为True。如果 Bj 不能推出 ε 就标记为 False，设置mark标记为False。判断mark，如果为True，那么A-&gt;αBβ and β-&gt;ε。如果可以更新，将 Follow[A] 添加到 Follow[B] 中，设置flag为True。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>def getFollow() -&gt; None:
    global non_term, term, First, Follow, start_sym
    for A in non_term:
        Follow&#091;A] = set()  # 初始化
    Follow&#091;start_sym].add(end_sym)  # 将 # 号加入到Follow&#091;s] 中
    flag = True  # 新建一个标记flag初始化为True
    while flag:  # 当Follow集不再更新，算法结束
        flag = False  # 标记flag初为False
        for A in non_term:  # 遍历所有非终结符
            for B in production&#091;A]:  # 遍历所有产生式
                for i in range(len(B)):  # 遍历所有产生式的每一个符号
                    # bi 是终结符则跳过
                    if B&#091;i] in term:
                        continue
                    mark = True  # 新建一个标记mark初始化为True
                    for j in range(i + 1, len(B)):  # 遍历所有产生式的每一个符号
                        if not First&#091;B&#091;j]] - set(epsilon) &lt;= Follow&#091;B&#091;i]]:  # 可以更新
                            Follow&#091;B&#091;i]] |= First&#091;B&#091;j]] - set(epsilon)  # 将 First&#091;Bj] 中的非 ε 添加到 Follow&#091;Bi] 中
                            flag = True  # 发生了改变
                        if epsilon not in First&#091;B&#091;j]]:  # 如果 Bj 不能推出 ε 就标记为 False
                            mark = False  # 设置mark标记为False
                        break
                    if mark:  # A-&gt;αBβ and β-&gt;ε
                        if not Follow&#091;A] &lt;= Follow&#091;B&#091;i]]:  # 可以更新
                            Follow&#091;B&#091;i]] |= Follow&#091;A]  # 将 Follow&#091;A] 添加到 Follow&#091;B] 中
                            flag = True  # 发生了改变
    return None
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>实验过程</h2>
<!-- /wp:heading -->

<!-- wp:group -->
<div class="wp-block-group"><!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph -->
<p>1. 编写代码 </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="http://gitlab.zhuanjie.ltd/Randall/byyl3">Randall Chu / 编译原理实验3 · GitLab (zhuanjie.ltd)</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>2. 测试文法</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>    LL1文法</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">E-&gt;TA
A-&gt;+TA|ε
T-&gt;FB
B-&gt;*FB|ε
F-&gt;i|(E)
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>    非LL1文法</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">S-&gt;AB
S-&gt;bC
A-&gt;ε
A-&gt;b
B-&gt;ε
B-&gt;aD
C-&gt;AD
C-&gt;b
D-&gt;aS
D-&gt;c
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>3. 测试运行(实验环境Windows11 Python3.10 pycharm)，如图：</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":653,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-8.png" alt="" class="wp-image-653" /></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>4. 输出信息</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":654,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-9.png" alt="" class="wp-image-654" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":656,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-11.png" alt="" class="wp-image-656" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":657,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/image-12.png" alt="" class="wp-image-657" /></figure>
<!-- /wp:image --></div>
<!-- /wp:group --></div>
<!-- /wp:group -->

<!-- wp:heading -->
<h2>实验总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>通过本次实验我进一步理解了文法特别是上下文无关文法相关概念，掌握了求First集、Follow集、FirstVt集及LastVt集算法，并能够应用其构造文法的LL分析表、算符优先分析表及LR分析表。我也通过分析LL(1)文法、算符优先文法及LR(1)文法进一步理解了自动编程方法。刚刚写完分析符号串逻辑思路代码，这个心情是无比激动的，但是又有诸多的bug，内心是无比崩溃的，然后经过一行一行的修改，慢慢的调终于弄好了。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>650</wp:post_id>
		<wp:post_date><![CDATA[2022-06-02 18:16:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-02 10:16:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-02 18:16:53]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-02 10:16:53]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[byyl3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="%e7%bc%96%e8%af%91%e5%8e%9f%e7%90%86"><![CDATA[编译原理]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[657]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[137]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[编译原理实验4]]></title>
		<link>https://blog.zhuanjie.ltd/2022/06/11/byyl4/</link>
		<pubDate>Sat, 11 Jun 2022 15:33:27 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=661</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>编译器设计与实现</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>实验内容</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>定义一个程序设计语言，确定编译器设计方法，构造相应的属性文法。根据属性文法设计编译器（可以手工设计亦可自动生成），并设计中间代码解释器，其能够解释执行编译后的中间代码。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>要求输入一个合法的源程序，输出其中间代码形式的目标程序并能够解释执行生成的目标代码，并得到预期人结果。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>实验目的</strong></h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>通过实验完整地了解编译器设计过程，掌握编译原理中各种算法及算法的应用。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2><strong>实验准备</strong></h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>程序设计语言的文法定义</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>可以定义PL/1语言的文法，亦可根据C语言定义一个简单的C语言文法。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>lexical 词法分析</strong>：token类型token_type、分隔符号split_char_type、注释note_char_type、正则表达式字典regex_dict</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>syntax 语法分析</strong>：Sign类为符号类。Production类为产生式。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>semantic 语义分析</strong>：定义一个符号表池，每次调用函数的时候使用深拷贝从这里取局部变量表。SemanticRule类别为语义规则。SemanticRuleFactory类为语义规则工厂，根据给出的 rule_key 返回相应的实例。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>确定编译器设计方法，构造相应的属性文法</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>def put_source(self, source):
        """
        装填词法分析结果
        :param source: 词法分析结果
        """
        self.__source.clear()
        self.__terminals.clear()
        # 装填词法分析结果
        for s in source:
            self.__source.append(s)
        # 将 tokens 转换成终结符
        for s in self.__source:
            self.__terminals.append(Sign(s.type, s.str, s.line))
        # 在所有 tokens 的最后填入一个 #
        self.__terminals.append(Sign('pound'))
</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>实验过程</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>实验源码</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href="http://gitlab.zhuanjie.ltd/Randall/byyl4">Randall Chu / 编译原理实验4 · GitLab (zhuanjie.ltd)</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>输出代码</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int gcd(int u, int v) {
    if (v == 0) {
        return u;
    } else {
        return gcd(v, u-u/v*v);
    }
    /* u-u/v*v* == u mod v */
}

void main() {
    int x;
    int y;
    x = input();
    y = input();
    output(gcd(x, y));
    return;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>实验截图</h3>
<!-- /wp:heading -->

<!-- wp:image {"id":662,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/1.png" alt="" class="wp-image-662" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":663,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/2.png" alt="" class="wp-image-663" /></figure>
<!-- /wp:image -->

<!-- wp:image {"id":664,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/06/3.png" alt="" class="wp-image-664" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>实验总结</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>通过这次编译器设计，我完整地了解编译器设计过程，掌握编译原理中各种算法及算法的应用。首先是词法分析识别Token序列，syntax 语法分析和semantic 语义分析。词法分析使用正则表达式，语法分析使用LL(1)文法分析器， 语义分析使用自上而下翻译，使用 Python 语言编写。main.py 编译器主程序；error.py 存放错误相关的类和代码；test.c 要编译的文件。三大分析中 rule.py 即是支持编译器的所有文法、词法、语义规则。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>661</wp:post_id>
		<wp:post_date><![CDATA[2022-06-11 23:33:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-11 15:33:27]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-11 23:33:27]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-11 15:33:27]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[byyl4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="%e7%bc%96%e8%af%91%e5%8e%9f%e7%90%86"><![CDATA[编译原理]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[664]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[141]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Linux下将长期运行命令变为系统服务]]></title>
		<link>https://blog.zhuanjie.ltd/2022/06/13/linux_systemctl/</link>
		<pubDate>Mon, 13 Jun 2022 04:21:10 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=670</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>在/lib/systemd/system/中新建“服务名.service”文件。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>vim /lib/systemd/system/服务名.service 内容如下：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>&#091;Unit]
Desctiption = 服务名称
After = network.target syslog.target
Wants = network.target

&#091;Service]
Type = simple
ExecStart = “命令”

&#091;Install]
WantedBy = multi-user.target
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><strong>启动服务</strong></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>systemctl start 服务名.service</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><strong>查看状态</strong></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>systemctl status 服务名.service</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p><strong>设置开机自启</strong></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>systemctl enable 服务名.service</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>670</wp:post_id>
		<wp:post_date><![CDATA[2022-06-13 12:21:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-06-13 04:21:10]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-06-13 12:21:10]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-06-13 04:21:10]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux_systemctl]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[136]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[今日校园自动签到]]></title>
		<link>https://blog.zhuanjie.ltd/2022/07/08/jrxy_auto_sign/</link>
		<pubDate>Fri, 08 Jul 2022 13:16:25 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=691</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>介绍</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><strong>此项目本意是为北京印刷学院学子提供方便，代码方面针对性的对北印信工22暑期签到进行了优化</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><s>北京印刷学院服务器目前每天晚上例行维护，签到时间请自行设定到早上七点半以后</s></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如有疑问可以在GitHub上提交issue或在本文下方评论</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>项目Github地址：<a href="https://github.com/Zhuanjier/jrxySign">Zhuanjier/jrxySign: 北京印刷学院今日校园自动签到 (github.com)</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>稳定版阿里云函数直接上传<a href="https://github.com/Zhuanjier/jrxySign/files/9104079/stable-code.zip" target="_blank" rel="noreferrer noopener">此链接</a>下载的压缩包解压后的文件夹即可</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="https://github.com/Zhuanjier/jrxySign/releases" target="_blank" rel="noreferrer noopener">GitHub发布</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>近期运行日志</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>如果乱码请更换设备查看，url直接指向文本文件</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href="https://startpage.zhuanjie.ltd/api/signlog.txt">https://startpage.zhuanjie.ltd/api/signlog.txt</a></p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<iframe src="https://startpage.zhuanjie.ltd/api/signlog.txt" scrolling="auto"></iframe>
<!-- /wp:html -->

<!-- wp:heading -->
<h2>更新日志</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>v1.8.8(beta)</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>适配了北印信工的签到系统</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>调整新增了签到选项为其他需要填写信息的情况</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3><a href="https://github.com/Zhuanjier/jrxySign#v189"></a>v1.8.9</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>完善上一版本更新的稳定性</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>更新了日志文档</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3><a href="https://github.com/Zhuanjier/jrxySign#v190beta"></a>v1.9.0(beta)</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li><s>新增本地保存登录信息session的<code>wise</code>模块，免于签到一次登录一次（未测试）</s>（由于会挤掉手机端今日校园，该功能已废弃）</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3><a href="https://github.com/Zhuanjier/jrxySign#v192"></a>v1.9.2</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>提高代码稳定性</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>优化文档</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>v2.0.0</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>修复部分代码上的bug</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>v2.5.0</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>完成对新教务和日期变量的适配，配置文件中的extra可填写$Data表示当前UTC日期的前一天</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>配置文件说明</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><!-- wp:list-item -->
<li>notifyOption（通知方式）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>0为禁用</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>1为webApi模式<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>此方式正在调试</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>2为APPRISE模式<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>此方式正在调试</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>3为企业微信</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>ocrOption（腾讯云OCR服务）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>用来防止学校教务验证码</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>httpProxy（全局HTTP代理）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>填入家用ip即可</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>users（用户配置）<!-- wp:list {"ordered":true} -->
<ol><!-- wp:list-item -->
<li>user（用户1）<!-- wp:list {"ordered":true} -->
<ol><!-- wp:list-item -->
<li>type（任务类型）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>0：收集</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>1：签到</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>2：查寝</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>3：政工签到</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>4：教师工作日志</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>schoolName（学校全称）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>username（教务登录账号）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>password（教务登录密码）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>address（签到等显示地址）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>formTitle（签到等表单包含字段）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>notifyOption（通知方式）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>和顶部参数一致，不填默认按照顶部参数执行，填入不同参数即为独立配置</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>rcvOption（为接受消息的账号，可以为Email账号（需要配置邮箱）、QQ号（需要配置qq机器人）、或者是企业微信ID（需要配置企业微信））</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>abnormalReason（反馈信息，置空）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>lon（经度）（经纬度查询网址:<a href="http://api.map.baidu.com/lbsapi/getpoint/index.html">http://api.map.baidu.com/lbsapi/getpoint/index.html</a>）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>lat（纬度）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>checkTitle（是否检查表单的标题）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>1：检查</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>0：不检查</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>forms（表单信息）<!-- wp:list {"ordered":true} -->
<ol><!-- wp:list-item -->
<li>form（问题1）<!-- wp:list {"ordered":true} -->
<ol><!-- wp:list-item -->
<li>title（问题标题）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>value（需要选择问题选项的值）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>如果要选择选项“体温低于37.3”，则填入“体温低于37.3”</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>extra（附加结果）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>如果选项中选择其它后需要填入信息，在此处填入信息（如果不需要可以删除此条），可以用$Date表示运行时的前一天，如“yyyy年mm月dd日”</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item --></ol>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>form（问题2...）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>同上一条同级配置</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item --></ol>
<!-- /wp:list --></li>
<!-- /wp:list-item --></ol>
<!-- /wp:list --></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>user（用户2...）<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>同上一条同级配置</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item --></ol>
<!-- /wp:list --></li>
<!-- /wp:list-item --></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>部署</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>部署前准备</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>下载config.yam并且填写内容，必填内容如下：</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>username: ''&nbsp;—学号</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>password: ''&nbsp;—密码（登录学校教务的密码）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>address: ''&nbsp;—地址（今日校园签到页面上面的地址信息）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>lon:&nbsp;—经度&nbsp;经纬度查询网址:<a href="http://api.map.baidu.com/lbsapi/getpoint/index.html">http://api.map.baidu.com/lbsapi/getpoint/index.html</a></li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>lat:&nbsp;—纬度&nbsp;</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>服务器部署</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>安装Python3.6+环境</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>下载并解压项目代码包</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>修改<code>config.yml</code>文件中的相关配置内容</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>运行<code>pip install -r requirements.txt -t ./ -i https://mirrors.aliyun.com/pypi/simple</code>安装项目依赖</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>执行<code>Python index.py</code>即可运行项目</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":697,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-4.png" alt="" class="wp-image-697"/><figcaption class="wp-element-caption">pycharm测试运行结果</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>阿里云函数</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li><a rel="noreferrer noopener" href="https://github.com/Zhuanjier/jrxySign/archive/refs/heads/main.zip" target="_blank">下载</a>并解压项目代码包（或者通过git获取包https://github.com/Zhuanjier/jrxySign.git）</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>登录阿里云进入<a href="https://help.aliyun.com/document_detail/122602.html">服务及</a><a href="https://fcnext.console.aliyun.com/cn-hangzhou/services">函数</a>页面，开通服务</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":701,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-8-1024x644.png" alt="" class="wp-image-701"/></figure>
<!-- /wp:image -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>创建服务</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":702,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-9.png" alt="" class="wp-image-702"/></figure>
<!-- /wp:image -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>创建云函数并且修改配置</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":703,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-10-1024x537.png" alt="" class="wp-image-703"/></figure>
<!-- /wp:image -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>设置触发器</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":704,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-11-1024x421.png" alt="" class="wp-image-704"/></figure>
<!-- /wp:image -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>打开函数详情</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":705,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-12-1024x399.png" alt="" class="wp-image-705"/></figure>
<!-- /wp:image -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>在下方终端中运行如下代码段（<strong>末尾有英文的句点，下文同理</strong>）</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>pip3 install -r requirements.txt -t .</code></pre>
<!-- /wp:code -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>运行完成后部署测试</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>如果出现错误，根据提示查看相应信息</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>此处列举几条遇到的问题：<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>出现No module named 'yaml'错误时，终端运行 <code>pip install pyyaml -t .</code> 解决</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>出现No module named 'tencentcloud'错误时，终端运行 <code>pip install --upgrade tencentcloud-sdk-python -t .</code> 解决</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>阿里云运行函数需要修改action文件下的Utils.py文件的136行，其中文件地址由<code>signlog.txt</code>改为<code>/tmp/signlog.txt </code>解决（原因：阿里云未开放除/tmp以外文件的写入权限）</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>同上一条action文件下的Utils.py文件的末尾两个函数（saveWise函数和getWise函数）也需要修改地址</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list --></li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":706,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-13.png" alt="" class="wp-image-706"/></figure>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":707,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-14.png" alt="" class="wp-image-707"/></figure>
<!-- /wp:image -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>执行部署代码，然后运行测试</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>查看日志</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":712,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-19.png" alt="" class="wp-image-712"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>常见问题</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li>如果输出418错误如图则将config.yml中的httpProxy填写为你当前查询到的自己的<a rel="noreferrer noopener" href="https://ipaddress.com/" target="_blank">ip（点击此处查询自己的ip）</a></li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->

<!-- wp:image {"align":"center","id":711,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-full"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-18.png" alt="" class="wp-image-711"/></figure>
<!-- /wp:image -->

<!-- wp:image {"align":"center","id":710,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-17-1024x636.png" alt="" class="wp-image-710"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>说明</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>许可证</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>本项目的源代码在MPL2.0协议下发布，同时附加以下条目：</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><!-- wp:list-item -->
<li><strong>非商业性使用</strong>&nbsp;— 不得将此项目及其衍生的项目的源代码和二进制产品用于任何商业和盈利用途</li>
<!-- /wp:list-item --></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 21:16:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 13:16:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 21:16:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 13:16:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jrxy_auto_sign]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>1</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[756]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——翻硬币]]></title>
		<link>https://blog.zhuanjie.ltd/2022/07/14/day9/</link>
		<pubDate>Thu, 14 Jul 2022 06:39:21 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=793</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>小明正在玩一个“翻硬币”的游戏。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>桌上放着排成一排的若干硬币。我们用 * 表示正面，用 o 表示反面（是小写字母，不是零）。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>比如，可能情形是：**oo***oooo</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果同时翻转左边的两个硬币，则变为：oooo***oooo</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>现在小明的问题是：如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？<br>我们约定：把翻动相邻的两个硬币叫做一步操作。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输入</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>两行等长的字符串，分别表示初始状态和要达到的目标状态。每行的长度&lt;1000</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>输出</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>一个整数，表示最小操作步数。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>输入样例1</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>**********
o****o****</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>输出样例1</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>5</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>输入样例2</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>*o**o***o***
*o***o**o***</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>输出样例2</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>1</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>暴力循环解法</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>从头依次比对判断，出现不同的元素开始将其和其后的硬币翻转，直至最后一个硬币，如果不同则输入有误，如果相同则输出反转次数</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-07-14 12:00:21
 * @LastEditors: 转接
 * @LastEditTime: 2022-07-14 14:26:08
 * @Description: 翻硬币
 */
/*
day9

每日一题——翻硬币

如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？
*/
#include &lt;iostream&gt;
#include &lt;cstring&gt;

using namespace std;

void change(char* a, int i){
    if(a&#091;i] == '*'){
        a&#091;i] = 'o';
    }else if(a&#091;i] == 'o'){
        a&#091;i] = '*';
    }else{
        cout &lt;&lt; "出现非法字符";
        exit(0);
    }
}

int main() {
    char a&#091;1000],b&#091;1000];
    cin &gt;&gt; a &gt;&gt; b;
    if(strlen(a) != strlen(b)){
        cout &lt;&lt; "两字符串长度不一致！";
        return 0;
    }
    int num = 0;
    int len = strlen(a);
    for(int i = 0; i &lt; len-1; i++){
        if(a&#091;i] != b&#091;i]){
            change(a, i);
            change(a, i+1);
            num++;
        }
    }
    if(a&#091;len-1] != b&#091;len-1]){
        cout &lt;&lt; "输入有误，请检查输入";
        return 0;
    }
    cout &lt;&lt; num;
    return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>利用不同元素数组下标解</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>记录下所有不同的元素的数组下标，奇数个则证明输入有误，偶数个则将每两个为一组，对于第n组，需要变换第2n个元素的下标减去2n-1个元素的下标，最后求和</li></ul>
<!-- /wp:list -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-07-14 12:00:21
 * @LastEditors: 转接
 * @LastEditTime: 2022-07-14 14:33:09
 * @Description: 翻硬币
 */
/*
day0

每日一题——翻硬币

如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？
*/
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;queue&gt;

using namespace std;

int main() {
    char a&#091;1000],b&#091;1000];
    cin &gt;&gt; a &gt;&gt; b;
    if(strlen(a) != strlen(b)){
        cout &lt;&lt; "两字符串长度不一致！";
        return 0;
    }
    int num = 0;
    int len = strlen(a);
    queue&lt;int&gt; q;
    for(int i = 0; i &lt; len; i++){
        if(a&#091;i] != b&#091;i]){
            q.push(i);
        }
    }
    if(q.size() % 2 != 0){
        cout &lt;&lt; "输入有误，请检查输入";
        return 0;
    }
    while(!q.empty()){
        num-=q.front();
        q.pop();
        num+=q.front();
        q.pop();
    }
    cout &lt;&lt; num;
    return 0;
}
</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>793</wp:post_id>
		<wp:post_date><![CDATA[2022-07-14 14:39:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-14 06:39:21]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-14 14:39:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-14 06:39:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[135]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[搭建IPSec服务]]></title>
		<link>https://blog.zhuanjie.ltd/2022/07/21/ipsec/</link>
		<pubDate>Thu, 21 Jul 2022 12:08:24 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=798</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:paragraph -->
<p>项目地址：<a href="https://github.com/hwdsl2/setup-ipsec-vpn">hwdsl2/setup-ipsec-vpn: Scripts to build your own IPsec VPN server, with IPsec/L2TP, Cisco IPsec and IKEv2 (github.com)</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>安装</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>脚本方式</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>选项 1: 使用脚本随机生成的 VPN 登录凭证（完成后会显示）</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>wget https://get.vpnsetup.net -O vpn.sh &amp;&amp; sudo sh vpn.sh</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>选项 2: 编辑脚本并提供你自己的 VPN 登录凭证</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>wget https://get.vpnsetup.net -O vpn.sh
nano -w vpn.sh
&#91;替换为你自己的值： YOUR_IPSEC_PSK, YOUR_USERNAME 和 YOUR_PASSWORD]
sudo sh vpn.sh</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>选项 3: 将你自己的 VPN 登录凭证定义为环境变量</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code># 所有变量值必须用 '单引号' 括起来
# *不要* 在值中使用这些字符：  \ " '
wget https://get.vpnsetup.net -O vpn.sh
sudo VPN_IPSEC_PSK='你的IPsec预共享密钥' \
VPN_USER='你的VPN用户名' \
VPN_PASSWORD='你的VPN密码' \
sh vpn.sh</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>docker方式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>仓库地址：<a href="https://github.com/hwdsl2/docker-ipsec-vpn-server">hwdsl2/docker-ipsec-vpn-server: Docker image to run an IPsec VPN server, with IPsec/L2TP, Cisco IPsec and IKEv2 (github.com)</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>创建配置文件<code>/etc/ipsec/ipsec.env</code></h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>VPN_IPSEC_PSK=your_ipsec_pre_shared_key
VPN_USER=your_vpn_username
VPN_PASSWORD=your_vpn_password
## 多用户(空格隔开)
VPN_ADDL_USERS=xxxx1 xxxxx2
VPN_ADDL_PASSWORDS=xxxx1 xxxxx2
## 默认的是谷歌的DNS
VPN_DNS_SRV1=8.8.8.8
VPN_DNS_SRV2=8.8.4.4</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>创建挂在卷</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>mkdir -p /data/ikev2-vpn-data</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>创建容器并运行</h4>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>docker run --name ipsec-vpn-server --env-file /etc/ipsec/ipsec.env --restart=always -v /data/ikev2-vpn-data:/etc/ipsec.d -p 500:500/udp -p 4500:4500/udp -d --privileged hwdsl2/ipsec-vpn-server</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>遇到的问题</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>连接失败——云服务器防火墙问题</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>最少需要放行500和4500端口的UDP数据包</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Windows无法连接</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>控制面板设置属性——安全——允许使用这些协议</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":799,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/07/image-20-1024x576.png" alt="" class="wp-image-799"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>Windows连接报错：无法建立计算机与VPN服务器之间的网络连接,因为远程服务器未响应</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>管理员终端运行：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>REG ADD "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent" /v AssumeUDPEncapsulationContextOnSendRule /t REG_DWORD /d 2 /f</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>重启电脑后生效</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>安卓IPSec登录失败</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>改用IKEv2登录，下载<a rel="noreferrer noopener" href="https://download.strongswan.org/Android/" target="_blank">strongswan</a>后导入后缀.sswan的配置文件</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>个人IPSec服务器</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>[vip_only]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>本服务器搭建在东澳大利亚，已搭建VPN服务，提供信息如下：</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>IPsec VPN server</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Server IP: 20.28.190.114<br>IPsec PSK: qwertyuiopasdfghjkl<br>Username: guide<br>Password: guide</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>如果需要个人账号请与我联系</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>IKEv2</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Android配置文件：<a href="http://startpage.zhuanjie.ltd/download/vpn/vpnclient.sswan" target="_blank" rel="noreferrer noopener">http://startpage.zhuanjie.ltd/download/vpn/vpnclient.sswan</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Windows &amp; Linux配置文件：<a href="http://startpage.zhuanjie.ltd/download/vpn/vpnclient.p12" target="_blank" rel="noreferrer noopener">http://startpage.zhuanjie.ltd/download/vpn/vpnclient.p12</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>iOS &amp; macOS配置文件：<a href="http://startpage.zhuanjie.ltd/download/vpn/vpnclient.mobileconfig" target="_blank" rel="noreferrer noopener">http://startpage.zhuanjie.ltd/download/vpn/vpnclient.mobileconfig</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[/vip_only]</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Download</h2>
<!-- /wp:heading -->

<!-- wp:file {"id":931,"href":"https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-x86-0.5.3.msi"} -->
<div class="wp-block-file"><a id="wp-block-file--media-cd6f0dc4-a7f5-4e7f-863e-fbf66fa35a52" href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-x86-0.5.3.msi">wireguard-x86-0.5.3</a><a href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-x86-0.5.3.msi" class="wp-block-file__button" download aria-describedby="wp-block-file--media-cd6f0dc4-a7f5-4e7f-863e-fbf66fa35a52">下载</a></div>
<!-- /wp:file -->

<!-- wp:file {"id":932,"href":"https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-amd64-0.5.3.msi"} -->
<div class="wp-block-file"><a id="wp-block-file--media-9931b054-1bc8-41cb-b248-c0bfa36b7c18" href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-amd64-0.5.3.msi">wireguard-amd64-0.5.3</a><a href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-amd64-0.5.3.msi" class="wp-block-file__button" download aria-describedby="wp-block-file--media-9931b054-1bc8-41cb-b248-c0bfa36b7c18">下载</a></div>
<!-- /wp:file -->

<!-- wp:file {"id":933,"href":"https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-arm64-0.5.3.msi"} -->
<div class="wp-block-file"><a id="wp-block-file--media-a8d4d6b1-d028-4a8f-97fa-c13fdb7ae4c6" href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-arm64-0.5.3.msi">wireguard-arm64-0.5.3</a><a href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/wireguard-arm64-0.5.3.msi" class="wp-block-file__button" download aria-describedby="wp-block-file--media-a8d4d6b1-d028-4a8f-97fa-c13fdb7ae4c6">下载</a></div>
<!-- /wp:file -->

<!-- wp:file {"id":934,"href":"https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/WireGuard.apk"} -->
<div class="wp-block-file"><a id="wp-block-file--media-f253fb2f-c208-4bf4-95f9-894ee2e96cb3" href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/WireGuard.apk">WireGuard.apk</a><a href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/WireGuard.apk" class="wp-block-file__button" download aria-describedby="wp-block-file--media-f253fb2f-c208-4bf4-95f9-894ee2e96cb3">下载</a></div>
<!-- /wp:file -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>798</wp:post_id>
		<wp:post_date><![CDATA[2022-07-21 20:08:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-21 12:08:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-21 20:08:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-21 12:08:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ipsec]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[246]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——带分数]]></title>
		<link>https://blog.zhuanjie.ltd/2022/08/02/day10/</link>
		<pubDate>Tue, 02 Aug 2022 08:59:54 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=811</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>100 可以表示为带分数的形式：100 = 3 + 69258 / 714。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>还可以表示为：100 = 82 + 3546 / 197。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>注意特征：<strong>带分数中，数字1~9分别出现且只出现一次（不包含0）。</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>类似这样的带分数，100 有 11 种表示法。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输入格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>从标准输入读入一个正整数N (N&lt;1000*1000)</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>输出格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>程序输出该数字用数码1~9不重复不遗漏地组成带分数表示的全部种数。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>注意：不要求输出每个表示，只统计有多少表示法！</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>样例输入1</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>100</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>样例输出1</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>11</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>样例输入2</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>105</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>样例输出2</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>6</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>思路</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>暴力穷举，生成1~9的全排列，再根据数字判断循环是否进行</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>直接代码</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-08-02 16:01:02
 * @LastEditors: 转接
 * @LastEditTime: 2022-08-02 16:30:08
 * @Description: 带分数
 */
/*
day10

每日一题——带分数

100 可以表示为带分数的形式：100 = 3 + 69258 / 714。
还可以表示为：100 = 82 + 3546 / 197。
*/
#include &lt;iostream&gt;
#include &lt;cstdlib&gt;
#include &lt;algorithm&gt;

using namespace std;

int main() {
    int n, num = 0;
    cin &gt;&gt; n;
    string s = "123456789";
    do {
        for (int i = 1; i &lt;= 7; ++i) {  // i表示+前的串的长度
            string a = s.substr(0, i);  // 取出从0到i的字符串
            int numa = atoi(a.c_str());  // atoi传入char*类型将char类型转换为int类型
            if (numa &gt;= n) {
                break;
            }
            for (int j = 1; j &lt; 9 - i - 1; ++j) {  // j表示+和/之间的长度
                string b = s.substr(i, j);  // 取出从i到/前的字符串
                string c = s.substr(i + j);  // 取出/后面的字符串
                int numb = atoi(b.c_str());
                int numc = atoi(c.c_str());
                if (numb % numc == 0 &amp;&amp; numa + numb / numc == n) {
                    num++;
                }
            }
        }
    } while (next_permutation(s.begin(), s.end()));  // 全排序
    cout &lt;&lt; num;
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>存在的问题：substr耗费大量时间，其工作原理是开辟新空间拷贝原字符串再截取后再返回</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>解决方法：重写截取字串并转换为数字的函数，降低时间开销</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>修改后代码</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-08-02 16:01:02
 * @LastEditors: 转接
 * @LastEditTime: 2022-08-02 16:50:34
 * @Description: 带分数
 */
/*
day10

每日一题——带分数

100 可以表示为带分数的形式：100 = 3 + 69258 / 714。
还可以表示为：100 = 82 + 3546 / 197。
*/
#include &lt;iostream&gt;
#include &lt;algorithm&gt;

using namespace std;

int getnum(const char *s, int pos, int len) {
    int num = 0;
    for (int i = pos; i &lt; pos + len; ++i) {
        num += s&#091;i] - '0';
        num *= 10;
    }
    num /= 10;
    return num;
}

int main() {
    int n, num = 0;
    cin &gt;&gt; n;
    string s = "123456789";
    do {
        for (int i = 1; i &lt;= 7; ++i) {  // i表示+前的串的长度
            int numa = getnum(s.c_str(), 0, i);
            if (numa &gt;= n) {
                break;
            }
            for (int j = 1; j &lt; 9 - i - 1; ++j) {  // j表示+和/之间的长度
                int numb = getnum(s.c_str(), i, j);
                int numc = getnum(s.c_str(), i + j, 9 - i - j);
                if (numb % numc == 0 &amp;&amp; numa + numb / numc == n) {
                    num++;
                }
            }
        }
    } while (next_permutation(s.begin(), s.end()));  // 全排序
    cout &lt;&lt; num;
    return 0;
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>811</wp:post_id>
		<wp:post_date><![CDATA[2022-08-02 16:59:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-08-02 08:59:54]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-08-02 16:59:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-08-02 08:59:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day10]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[第1章 计算机网络体系结构]]></title>
		<link>https://blog.zhuanjie.ltd/2022/09/20/cn1-jsjwltxjg/</link>
		<pubDate>Tue, 20 Sep 2022 09:39:51 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=814</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading {"level":1} -->
<h1 id="第一章-计算机网络体系结构">第一章 计算机网络体系结构</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>#计算机网络</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="计算机网络的发展">计算机网络的发展</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>APARnet——internet——Internet
<ol>
<li>internet——互联网</li>
<li>Internet——因特网</li>
</ol>
</li><li>三层体系结构因特网
<ol>
<li>主干网</li>
<li>地区网</li>
<li>校园网</li>
</ol>
</li><li>多层次ISP
<ol>
<li>主干ISP——地区ISP——本地ISP</li>
<li>出现IXP</li>
<li>ISP：网络服务提供着（商）</li>
<li>IXP：因特网交换点（处于同一层次的ISP之间）</li>
</ol>
</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="计算机网路的组成">计算机网路的组成</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>从组成部分上看：硬件、软件、协议</li><li>从工作方式上看：边缘部分、核心部分</li><li>从功能组成上看：通信子网、资源子网
<ol>
<li>通信子网：物理层、数据链路层、网络层（主要负责数据通信）</li>
<li>资源子网：会话层、表示层、应用层（主要负责向高层用户屏蔽下面通信子网的细节）
<ul>
<li>OSI模型种上三层</li>
</ul>
</li>
</ol>
</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><strong>ATT：协议的组成部分：语法、语义、同步（时序）</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="计算机网络的功能">计算机网络的功能</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>数据通信<br><em>即通信子网功能</em></li><li>资源共享<br><em>即资源子网功能</em></li><li>分布式处理</li><li>提高可靠性</li><li>负载均衡</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="计算机网络的分类">计算机网络的分类</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>按分布范围分类
<ol>
<li>广域网（WAN）<br><em>采用交换技术</em></li>
<li>城域网（MAN）</li>
<li>局域网（LAN）<br><em>采用广播技术</em></li>
<li>个域网（PAN）</li>
</ol>
</li><li>按传输技术分类
<ol>
<li>广播式网络<br><em>常为总线型网络，共享通信信道</em></li>
<li>点对点网络<br><em>常使用分组，存储、转发和路由选择机制</em></li>
</ol>
</li><li>按拓扑结构分类
<ol>
<li>总线型网络</li>
<li>星形网络</li>
<li>环形网络</li>
<li>网状网络</li>
</ol>
</li><li>按使用者分类
<ol>
<li>公用网</li>
<li>专用网</li>
</ol>
</li><li>按交换技术分类（<em>交换技术指的是数据交换技术</em>）
<ol>
<li>电路交换</li>
<li>报文交换</li>
<li>分组交换<br><em>报文交换和分组交换采用存储—转发技术</em></li>
</ol>
</li><li>按传输介质分类
<ol>
<li>有线网络</li>
<li>无线网络</li>
</ol>
</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="计算机网络的性能指标">计算机网络的性能指标</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>带宽<br>指的是通信线路允许通过的信号频带范围/<strong>网络通信线路能传送的数据的能力</strong>，单位赫兹(Hz)/比特/秒(b/s)<br>^b69777</li><li>时延
<ol>
<li>发送时延<br>发送时延 = 分组长度 / 信道宽度</li>
<li>传播时延<br>传播时延 = 信道长度 / 电磁波在信道上的传播速率</li>
<li>处理时延</li>
<li>排队时延<br>总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延<br>排队时延和处理时延一般可以忽略</li>
</ol>
</li><li>时延带宽积<br>以比特为长度的链路单位<br>时延带宽积 = 传播时延 * 信道带宽</li><li>往返时延<br>RTT = 两倍传播时延（忽略处理时延）</li><li>吞吐量<br>单位时间通过某个网络（或信道、接口）的数据量，单位b/s</li><li>速率（传输速率、数据率、比特率）<br>宏观数字信道上的传送数据的速率，单位b/s(bps)<br>最高数据传输速率称为带宽</li><li>信道利用率<br>信道利用率 = 有数据通过的时间 / 总时间</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><strong>ATT：单位换算</strong></p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>速率： 1Tb/s = 10<sup>3</sup>Gb/s = 10<sup>6</sup>Mb/s = 10<sup>9</sup>Kb/s = 10<sup>12</sup>b/s 比特/秒 ^217130</li><li>存储量： 1TB = 2<sup>10</sup>GB = 2<sup>20</sup>MB = 2<sup>30</sup>KB = 2<sup>40</sup>B 字节 = 8*2<sup>40</sup>bit ^475694</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="计算机网络的分层结构">计算机网络的分层结构</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>SDU 服务数据单元 每层的数据部分</li><li>PCI 协议控制信息 每层的首/尾部分</li><li>PDU 协议数据单元 每层的全部信息<br>PCI + SDU = PDU<br>n+1-PDU = n-SDU</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="osi参考模型">OSI参考模型</h2>
<!-- /wp:heading -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>OSI模型</th><th>功能</th><th>协议</th><th>SAP</th></tr></thead><tbody><tr><td>[[第6章 应用层|应用层]]</td><td>与用户交互</td><td>FTP, SMTP, HTTP，DHCP</td><td>提供的服务为用户界面</td></tr><tr><td>表示层</td><td>1. 数据格式变换 2. 数据加密解密 3. 数据的压缩与恢复</td><td>JPEG, ASCII</td><td>&nbsp;</td></tr><tr><td>会话层</td><td>1. 建立、管理、中止会话 2. 使用校验点，使通信失效时，从会话校验点/同步点继续恢复通信（大文件传输）</td><td>ADSP, ASP</td><td>&nbsp;</td></tr><tr><td>[[第5章 传输层|传输层]]</td><td>1. 可靠/不可靠传输 2. <strong>差错控制</strong> 3. <strong>流量控制</strong> 4. 复用分用 5. <strong>拥塞控制</strong></td><td>TCP, UDP</td><td>端口</td></tr><tr><td>[[第4章 网络层|网络层]]</td><td>1. 路由选择（分组转发） 2. <strong>流量控制</strong> 3. <strong>差错控制</strong> 4. <strong>拥塞控制</strong></td><td>IP, IPX, ICMP ,IGMP, ARP, RARP, OSPF</td><td>IP地址（网络地址）</td></tr><tr><td>[[第3章 数据链路层|数据链路层]]</td><td>1. 成帧（定义帧的开始和结束） 2. <strong>差错控制</strong>（帧错+位错）（数据重发） 3. <strong>流量控制</strong>（物理寻址） 4. 访问（接入）控制（介质访问子层控制信道的访问）</td><td>SDLC, HDLC, PPP, STP, 帧中继，ARQ</td><td>MAC地址（网卡地址）</td></tr><tr><td>[[第2章 物理层|物理层]]</td><td>1. 定义接口特性 2. 定义传输模式（单工、半双工、全双工） 3. 定义传输速率 4. 比特同步 5. 比特编码</td><td>Rj45, 802.3</td><td>网卡接口</td></tr><tr><td>SAP：服务访问点，逻辑接口，是一个层次系统的上下层之间进行通信的接口，N层的SAP就是N+1层可以访问N层服务的地方 ^690d1a</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>其中<strong>数据链路层</strong>被拆分为两个子层：<strong>逻辑控制（LLC）子层</strong>和<strong>媒体接入（MAC）子层</strong><br><strong>LLC子层</strong>与传输媒体无关，它<strong>向网络层提供无确认无连接、面向连接、带确认无连接、高速传输</strong>4种不同的连接服务类型<br><strong>MAC子层</strong>有接入传输媒体有关的内容，它向上屏蔽对物理层访问的各种差异，提供对物理层的统一访问接口，主要功能包括：<strong>组帧和拆卸帧、比特传输（帧的寻址和识别）、差错检测、透明传输</strong></p></blockquote>
<!-- /wp:quote -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>5层模型</th><th>传输单位</th></tr></thead><tbody><tr><td>[[第6章 应用层|应用层]]</td><td>报文</td></tr><tr><td>[[第5章 传输层|传输层]]</td><td>报文段（TCP），用户数据报（UDP）</td></tr><tr><td>[[第4章 网络层|网络层]]</td><td>分组，数据报</td></tr><tr><td>[[第3章 数据链路层|数据链路层]]</td><td>帧</td></tr><tr><td>[[第2章 物理层|物理层]]</td><td>比特流</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:paragraph -->
<p><strong>ATT： TCP/IP模型和OSI模型的比较</strong></p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>相同点：
<ol>
<li>都采用分层体系结构</li>
<li>都是基于独立的协议栈的概念</li>
<li>都可以解决异构网络的互联</li>
</ol>
</li><li>不同点：
<ol>
<li><strong>OSI模型</strong>定义了三个概念<strong>服务、协议和接口</strong></li>
<li>OSI不偏向于特定的协议</li>
<li>TCP/IP协议将网际协议(IP)作为一个单独的重要层次</li>
<li>OSI在网络层支持无连接和面向连接的通信，但在传输层只有面向连接的通信；TCP/IP在网际层只有无连接的通信模式，但在传输层有无连接和面向连接的两种模式</li>
</ol>
</li></ol>
<!-- /wp:list -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>&nbsp;</th><th>OSI</th><th>TCP/IP</th></tr></thead><tbody><tr><td>[[第5章 传输层|传输层]]</td><td>面向连接</td><td>无连接+面向连接</td></tr><tr><td>[[第4章 网络层|网络层]]</td><td>无连接+面向连接</td><td>无连接</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:image {"id":851,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/09/TCPIP协议栈-1024x763.png" alt="" class="wp-image-851"/></figure>
<!-- /wp:image -->

<!-- wp:separator -->
<hr class="wp-block-separator has-alpha-channel-opacity"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p><strong>[[第4章 网络层#冲突域和广播域|关于冲突域和广播域]]</strong></p>
<!-- /wp:paragraph -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th>设备</th><th>所属层次</th><th>能否隔离冲突域</th><th>能否隔离广播域</th></tr></thead><tbody><tr><td>[[第2章 物理层#物理层设备|集线器]]</td><td>[[第2章 物理层|物理层]]</td><td>不能</td><td>不能</td></tr><tr><td>[[第2章 物理层#物理层设备|中继器]]</td><td>[[第2章 物理层|物理层]]</td><td>不能</td><td>不能</td></tr><tr><td>[[第3章 数据链路层#交换机|交换机]]</td><td>[[第3章 数据链路层|数据链路层]]</td><td>能</td><td>不能</td></tr><tr><td>[[第3章 数据链路层#网桥|网桥]]</td><td>[[第3章 数据链路层|数据链路层]]</td><td>能</td><td>不能</td></tr><tr><td>[[第4章 网络层#路由器的组成和功能|路由器]]</td><td>[[第4章 网络层|网络层]]</td><td>能</td><td>能</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:paragraph -->
<p>^b35684</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>814</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:39:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:39:51]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:39:51]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:39:51]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cn1-jsjwltxjg]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%a0%94"><![CDATA[研]]></category>
		<category domain="category" nicename="%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c"><![CDATA[计算机网络]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[第2章 物理层]]></title>
		<link>https://blog.zhuanjie.ltd/2022/09/20/cn2-wlc/</link>
		<pubDate>Tue, 20 Sep 2022 09:50:45 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/?p=818</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading {"level":1} -->
<h1 id="第二章-物理层">第二章 物理层</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>#计算机网络</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2 id="物理层接口特性">物理层接口特性</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li><strong>机械特性</strong>：定义物理连接的特性，规定物理连接时所采用的规格、接口形状、引线数目、引脚数量和排列情况</li><li><strong>电气特性</strong>：规定传输二进制位时，线路上的信号的电压范围、阻抗匹配、传输速率和距离限制 <strong>(电压-&gt;电平)</strong></li><li><strong>功能特性</strong>：指明某条线上出现的某一电平表示何种意义，接口部件的信号线的用途 <strong>(电平的意义)</strong></li><li><strong>规程特性（过程特性）</strong>：定义各条物理线路的工作规程和时序关系</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="同步传输于异步传输">同步传输于异步传输</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>同步传输：在同步传输的模式下，数据的传送是以一个数据区块为单位。因此同步传输又称区块传输，在传送数据时，需要先发送出一个或多个同步字符再送出整批数据。</li><li>异步传输：异步传输将比特分成小组进行传送，小组可以是8位的1个字符或更长，发送方可以在任何时刻发送这些比特组，而接收方不知道它们什么时候会到达，在传送数据时加上一个字符的起始位和一个字符的终止位。</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="串行和并行">串行和并行</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>串行：将一个字符的8位二进制数由低位到高位依次传输<br>速度慢、费用低、适合远距离传输<br><img class="wp-image-864" style="width: 150px;" src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/09/串行.png" alt=""></li><li>并行：将一个字符的8位二进制数同时通过8条信道传输<br>速度快、费用高、适合近距离传输<br><img class="wp-image-859" style="width: 150px;" src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/09/并行.png" alt=""></li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="数据、信号、码元">数据、信号、码元</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>数据：<br>传送信息的实体（有意义的符号序列）</li><li>信号
<ol>
<li>数字信号/离散信号</li>
<li>模拟信号/连续信号</li>
</ol>
</li><li>码元<br>固定时长的信号波形<br>n进制码元中1码元-&gt;log<sub>2</sub>n比特</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="信道（逻辑通路）、信源、信宿">信道（逻辑通路）、信源、信宿</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>数据从信源发送到信宿<br>信道是信号的传输媒介（<strong>信道是有方向的</strong>）</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>ATT：信道上传递的信号</strong></p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>基带信号：将数字1和0直接用两种不同的电压表示，再送到<strong>数字信道</strong>上传输（基带传输）（近距离传输）</li><li>宽带信号：将基带信号进行调制后形成的频分复用模拟信号，再传送到<strong>模拟信道</strong>上去传输（宽带传输）（远距离传输）</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="速率、波特、带宽">速率、波特、带宽</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>码元传输速率（波特率）：单位时间内传输的码元的个数（信号脉冲个数/信号变化的次数），单位是波特（Baud）。1波特表示<strong>数字通信系统</strong>每秒传输一个码元。其中码元可以是多进制的，<strong>码元速率于进制数无关</strong></li><li>信息传输速率（信息速率，比特率）：表示单位时间内<strong>数字通信系统</strong>传输的<strong>二进制</strong>码元的个数（即比特数）（二进制码元数AKA比特数）</li><li>[[第1章 计算机网络体系结构#^b69777|带宽]]：
<ol>
<li>模拟信号中：最高频率和最低频率的插值即为（通频）带宽，单位赫兹（Hz）</li>
<li>数字信号中：单位时间从网络中的某一点到另一点能通过对最高数据率/单位时间内通过链路的数量</li>
</ol>
</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="奈式准则和香农定理">奈式准则和香农定理</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>==奈式准则==<br>理想低通（无噪声、带宽限制）<br>极限数据传输<strong>速率 = 2Wlog<sub>2</sub>V</strong>（单位为b/s）<br>W为信道带宽，单位赫兹（Hz）<br>V为每个码元离散电平的数目</li><li>==香农定理==<br>带宽受限且有噪声<br>极限数据传输**速率 = 2Wlog<sub>2</sub>(1+S/N)**（单位为b/s）<br>W为信道带宽，单位赫兹（Hz）<br>S为信道所传输信号的平均功率<br>N为信道内部的高斯噪声功率<br><strong>信噪比 = 10log<sub>10</sub>(S/N)</strong></li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="编码与调制">编码与调制</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>数据-&gt;编码-&gt;数字信号<br>数据-&gt;调制-&gt;模拟信号</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>数字数据->数字信号 <ol><li>归零编码(RZ)<br>高1低0</li><li>非归零编码(NRZ)<br>高1低0</li><li>反向非归零编码(NRZI)<br>高0低1</li><li>曼彻斯特编码<br>前高后低为1</li><li>差分曼彻斯特编码<br>同1异0</li><li>4B/5B编码<br>16种4位码与16种(共32种)5位码一一对应，编码效率80%<br><img class="wp-image-858" style="width: 150px;" src="http://blog.zhuanjie.ltd/wp-content/uploads/2022/09/编码方式.png" alt=""> </li></ol></li><li>数字数据->模拟信号 <ol><li>调幅 ASK 幅移键控</li><li>调频 FSK 频移键控</li><li>调相 PSK 相移键控</li><li>调幅+调相 QAM 正交振幅调制 </li></ol></li><li>模拟数据->数字信号<br>PCM脉码调制 <ol><li>采样<br>采样定理（奈奎斯特定理）：<strong>采样频率大于等于模拟数据的带宽频率的两倍f<sub>采样</sub>≥2f<sub>最大</sub></strong></li><li>量化：将电平数值按照分级转化为数字取整</li><li>编码：把量化结果转换为对应的二进制编码 </li></ol></li><li>模拟数据->模拟信号<br>放大器，调制器</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="电路交换、报文交换、分组交换">电路交换、报文交换、分组交换</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>电路交换
<ol>
<li>特点：独占资源，用户始终占用端到端的固定传输带宽。适用于远程批处理信息、传输或系统间实时性高的大量数据传输情况。</li>
<li>优点：
<ol>
<li>通信实验小</li>
<li>有序传输</li>
<li>没有冲突（全双工）</li>
<li>适用范围广</li>
<li>实时性强</li>
<li>控制简单</li>
</ol>
</li>
<li>缺点：
<ol>
<li>建立连接时间长</li>
<li>线路独占，使用效率底</li>
<li>灵活性差</li>
<li>难以规格化</li>
<li>无存储能力</li>
<li>无差错控制</li>
</ol>
</li>
</ol>
</li><li>报文交换
<ol>
<li>原理：存储、转发</li>
<li>优点：
<ol>
<li>无需建立连接</li>
<li>动态分配路线</li>
<li>提高线路可靠性</li>
<li>提高线路利用率</li>
<li>提供多目标服务</li>
</ol>
</li>
<li>缺点：
<ol>
<li>实时性差</li>
<li>只适合数字信号</li>
<li>要求网络结点有较大的缓存空间</li>
</ol>
</li>
</ol>
</li><li>分组交换
<ol>
<li>原理：限制要传输的数据单位的长度</li>
<li><strong>数据报方式</strong><br>特点：<br>1. 无需建立连接<br>2. 可能会产生失序、丢失或重复分组<br>3. 发送的分组需要包括发送端和接收端的完整地址<br>4. 分组再交换结点存储转发时，需要排队，即有传输时延<br>5. 网络具有冗余路径（不适合长报文和会话式通信）<br>6. 存储转发时延小，提高网络吞吐量<br>7. 资源利用率高</li>
<li><strong>虚电路方式</strong><br>特点：<br>1. 建立和拆除需要时间<br>2. 连接确定了后就确定了传输路径<br>3. 虚电路提供可靠的通信功能，能保证每个分组正确且有序到达（当接收方来不及接受数据时，可以通知发送方暂缓发送）<br>4. 当网络某个结点或某条链路出现故障而失效时，所有经过该节点或者该链路的虚电路遭到破坏<br>5. 分组首部不包含目的地址，而包含虚电路表示符，相对于数据报方式，其开销小</li>
</ol>
</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="传输介质（物理通路）">传输介质（物理通路）</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>传输介质并不知道传输的信号代表什么，而物理层规定了电气特性，传输介质位于物理层下面（第0层）</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>导向性传输介质：电磁波沿着固体媒介传播（铜线，光纤）</li><li>非导向性传输介质：自由空间，介质可以是空气、真空、水</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>介质：</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>双绞线（模拟信号&amp;数字信号） <ol><li>无屏蔽网（UTP）</li><li>有屏蔽网（STP）</li><li>距离：几千米到数十千米 <ol><li>距离太远，对于模拟信号：要用放大器放大衰减信号</li><li>距离太远，对于数字信号：要用中继器将失真信号整形  </li></ol></li></ol></li><li>同轴电缆 <ol><li>基带数字信号（AKA基带同轴电缆）（局域网）</li><li>宽带信号（AKA宽带同轴电缆）（有线电视系统）</li><li>特点：有良好的抗干扰性，传输距离更远，价格较双绞线贵 </li></ol></li><li>光纤 <ol><li>利用<strong>光脉冲</strong>通信</li><li>带宽范围极大</li><li>多模光纤：近距离传输</li><li>单模光纤：近距离传输</li><li>特点： <ol><li>传输损耗小，对远距离传输特别经济</li><li>抗雷电和电磁干扰性能好</li><li>无串音干扰，保密性好</li><li>体积小重量轻  </li></ol></li></ol></li><li>无线传播介质 <ol><li>无线电波<br>信号向所有方向传播（有穿透能力）（无线局域网）</li><li>微波、红外和激光<br>信号沿固定方向传播 <ol><li>红外和激光要把传输的信号分别转换为各自的信号格式</li><li>微波通信频率高，频段范围宽（数据率高）（eg.地面微波接力通信，卫星通信）</li><li>卫星通信： <ol><li>优点：通信容量大、距离远、覆盖广、易于实现广播通信和多址通信</li><li>缺点：保密性差、端到端传播时延长、受到气候影响大、误码率高、成本高   </li></ol></li></ol></li></ol></li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2 id="物理层设备">物理层设备</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>中继器<br>中继器两端网段是同一个协议<br>中继器两端的网络部分是网段，而不是子网，适用于完全相同的两类网络互联<br>5-4-3规则：互相串联中继器不超过4个，这5段网络中只有3段能挂接计算机</li><li>集线器<br>（多口中继器）</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><strong>ATT：放大器于中继器</strong></p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>放大器：放大模拟信号，将衰减的信号放大</li><li>中继器：再生数字信号，将衰减的信号整形再生</li></ol>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>818</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:50:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:50:45]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:50:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:50:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cn2-wlc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%a0%94"><![CDATA[研]]></category>
		<category domain="category" nicename="%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c"><![CDATA[计算机网络]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[马原]]></title>
		<link>https://blog.zhuanjie.ltd/2022/10/04/%e6%94%bf%e6%b2%bb-%e9%a9%ac%e5%8e%9f/</link>
		<pubDate>Tue, 04 Oct 2022 03:59:01 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=902</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>源格式跳转</p><cite><a rel="noreferrer noopener" href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/%E9%A9%AC%E5%8E%9F.html" target="_blank">马原.html (zhuanjie.ltd)</a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>幕布分享跳转</p><cite><a href="https://www.mubucm.com/doc/11Ml83E3pG-" target="_blank" rel="noreferrer noopener">文档链接: https://www.mubucm.com/doc/11Ml83E3pG- 密码: randall</a></cite></blockquote>
<!-- /wp:quote -->

<!-- wp:file {"id":910,"href":"https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/马原-1.docx"} -->
<div class="wp-block-file"><a id="wp-block-file--media-87657de0-d208-45a2-9c2b-91904c009b3c" href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/马原-1.docx">马原.docx</a><a href="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/马原-1.docx" class="wp-block-file__button" download aria-describedby="wp-block-file--media-87657de0-d208-45a2-9c2b-91904c009b3c">下载</a></div>
<!-- /wp:file -->

<!-- wp:paragraph -->
<p>马原</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>导论<ul><li>马克思主义的创立和发展<ul><li>马克思主义的内涵及构成—— #非重点<ul><li>马克思主义的内容包括：<strong>自然</strong><strong>、</strong><strong>社会</strong><strong>和</strong><strong>人类思维</strong>唯物史观的内容不包括自然</li></ul></li><li>马克思主义的基本立场、基本观点和基本方法—— #重点<ul><li>马克思主义的基本立场无产阶级、人民<ul><li>马克思主义观察分析和解决问题的根本立足点和出发点。马克思主义以<strong>无产阶级</strong>的解放和<strong>全人类</strong>的解放为己任，以人的自由全面发展为美好目标，以人民为中心，一切为了人民，一切依靠人民</li></ul></li><li>马克思主义的基本观点<ul><li>是关于自然、社会和人类思维发展一般规律的科学认识，是对人类思想成果和社会实践经验的科学总结</li></ul></li><li>马克思主义的基本方法<ul><li>单选：建立在辩证唯物主义和历史唯物主义世界观和方法论的基础上</li><li>多选：实事求是的方法、辩证分析的方法、社会基本矛盾和主要矛盾分析的方法、历史分析的方法、阶级分析的方法、群众路线的方法等</li></ul></li></ul></li><li>马克思主义的来源—— #重点 马克思主义差生的条件 ATT：正义者同盟（组织，<strong>非政党</strong>）—&gt;起草《共产党宣言》（第一个无产阶级政党的党纲）—&gt;共产主义同盟（世界上第一个无产阶级政党）<ul><li>社会根源（经济社会基础）：马克思、恩格斯生活的时代，资本主义生产方式在欧洲已经有了相当的发展</li><li>阶级基础（实践基础）：无产阶级在反抗资产阶级剥削和压迫的斗争中，逐步走向自觉</li><li>思想渊源：德国古典哲学、英国古典政治学、英法两国的空想社会主义依次对应马哲、政经、科社</li></ul></li></ul></li><li>马克思主义的鲜明特征和当代价值<ul><li>马克思主义的鲜明特征—— #重点 马克思主义强大的生命力根源：实践+科学+革命<ul><li>科学性马克思主义独有<ul><li>马克思主义是对自然、社会和人类思维发展本质和规律的<strong>正确</strong>反映</li></ul></li><li>革命性<ul><li>马克思主义它具有<strong>彻底的批判精神</strong>和<strong>鲜明的无产阶级立场</strong>彻底的批判精神是马克思主义对以往的理论都进行批判，而非全盘否定</li></ul></li><li>实践性马克思主义独有</li><li>人民性<ul><li>人民至上是马克思主义的政治立场</li><li>马克思主义的<strong>人民性是以阶级性为深刻基础</strong>的，是无产阶级先进性的体现只要是为无产阶级服务就是要为人民服务，所以马克思主义的人民性是以阶级性为基础 无产阶级解放了全人类才能解放自己</li></ul></li><li>发展开放性<ul><li>发展性：马克思主义是<strong>不断发展</strong>的学说，具有<strong>与时俱进</strong>的理论品质</li><li>开放性：马克思主义是<strong>不断吸收人类历史上一切优秀思想文化成果而不断丰富自己</strong></li></ul></li></ul></li><li>马克思主义的当代价值—— #非重点</li></ul></li></ul></li><li>哲学马克思主义哲学：基础、方法<ul><li>哲学的基本问题及不同哲学流派—— #重点<ul><li>思想和存在的关系问题：物质和意识，何者为第一性何者为第二性意识和物质的关系问题<ul><li>唯物主义：物质第一性什么是物质<ul><li>古代朴素唯物主义：物质是一种或几种实物</li><li>近代形而上学唯物主义：物质是原子等微粒机械唯物主义（形而上学唯物主义包括机械唯物主义）</li><li>现代辩证唯物主义：物质是一切客观存在<strong>仅指马克思主义</strong>，现代辩证唯物主义包括古代朴素唯物主义和近代形而上学唯物主义（eg. 人类历史在现代辩证唯物主义中为物质，而在其他两个中不为物质）</li></ul></li><li>唯心主义：意识第一性什么是精神<ul><li>主观唯心主义：作为世界本源的意识是本我的意识</li><li>客观唯心主义：作为世界本源的意识是独立于“我”之外的客观精神上帝论、道家、理等</li></ul></li></ul></li><li>物质是否具有同一性我们的意识能否认知物质<ul><li>可知论：有同一性唯物、唯心（彻底的唯心主义）</li><li>不可知论：没有同一性二元论（不彻底的唯心主义）</li></ul></li><li>将人类历史看作物质这种理论（观点）叫做唯物史观马克思在哲学史上的两贡献之一</li><li>哲学的重要问题：世界是怎样存在的？<ul><li>辩证法认为：联系 全面 发展 矛盾</li><li>形而上学认为：孤立 片面 静止 不矛盾</li></ul></li><li>马克思在<strong>哲学史</strong>上的两大贡献 #贡献（马克思在<strong>理论上</strong>上的两大贡献 #贡献）<ul><li>创立唯物史观历史唯物主义</li><li>将辩证法引入唯物论辩证唯物主义</li></ul></li></ul></li><li>唯物论世界是什么<ul><li>物质观本源<ul><li>物质范畴及其理论意义—— #重点 物质是什么<ul><li>恩格斯：物，物质无非是各种物的总和，而这个概念就是从这一总和中<strong>抽象</strong>出来的物质与具体的物的关系就是抽象和具体的关系</li><li>列宁：物质是标志客观实在的哲学范畴，这种客观实在是人通过感觉感知的，它<strong>不依赖于我们的感觉而存在</strong>，为我们的感觉所复写、摄影、反映满足不依赖于我们的感觉而存在自然满足标志客观实在的哲学范畴和为我们的感觉所复写、摄影、反映</li><li>定义方式：通过物质和意识的关系定义有属类定义和关系定义，这里是使用关系定义，属类是这个东西属于什么范畴定义，关系定义是利用相似的东西来定义</li><li>物质的<strong>唯一特性</strong>：客观实在不等同于根本属性，意识没有这个唯一特性</li></ul></li><li>物质与运动—— #重点<ul><li>运动的概念运动=变化<ul><li>运动是标志一切事物和现象的变化及其过程的哲学范畴。运动是物质的<strong>存在方式</strong>和<strong>根本属性</strong>运动是物质的存在方式：凡是物质都是以运动这个方式存在的</li></ul></li><li>物质和运动的关系：不可分割公式：a和b不可分割=&gt;a是b的a，b是a的b。eg. 物质是运动的物质，运动是物质的运动</li><li>批判两种错误观点将两个观点引向极端<ul><li>脱离物质谈运动=&gt;精神运动=&gt;唯心</li><li>脱离运动谈物质=&gt;物质静止=&gt;形而上学</li></ul></li></ul></li><li>运动与静止—— #重点<ul><li>静止的概念<ul><li>稳定状态，包括空间位置和根本性质暂时未变这样两种运动的特殊状态</li></ul></li><li>运动和静止的关系：对立统一公式：a和b对立统一=&gt;①a和b相互区别，②a和b相互联系<ul><li>相互区别：运动是绝对的、无条件的，静止是相对的、有条件的</li><li>相互联系：运动和静止是相互依赖、相互渗透、相互包含，“动中有静，静中有动”</li></ul></li><li>批判两种错误观点<ul><li>夸大静止：形而上学</li><li>夸大运动：诡辩论</li></ul></li></ul></li><li>物质运动与时空—— #重点<ul><li>时空的概念<ul><li>时间：一维性</li><li>空间：三维性</li></ul></li><li>时空与运动的关系：不可分割<ul><li>时间和空间是物质运动的存在形式</li></ul></li><li>时空的特点<ul><li>#客观性 ：不以人的意志而转移</li><li>绝对性：时空绝对存在</li><li>相对性：物质速度突破极限时，时空发生变化</li><li>有限性：具体事物的时空是有限的</li><li>无限性：所有事物的时空是无限的</li></ul></li></ul></li></ul></li><li>实践：实践是自然存在和社会存在区分和统一的基础—— #重点<strong>实践是物质和意识之间的唯一桥梁</strong> 自然存在：自然界，社会存在：人类社会<ul><li><strong>社会生活的本质：实践</strong></li><li>从实践出发理解社会生活的本质，要把握<ul><li>实践是使物质世界分化为自然界和人类社会的历史前提，又是使自然界和人类社会统一起来的现实基础<ul><li><img src="https://api2.mubu.com/v3/document_image/07b35bc8-a6d3-46f3-aecf-358387505553-5533406.jpg"></li></ul></li><li>实践是人类社会的基础，是理解和解释一切社会现象的钥匙</li></ul></li><li>社会生活的实践性主要表现在原因（为什么实践是社会生活的本质）<ul><li>实践是社会关系形成的基础生产劳动实践</li><li>实践形成了社会生活的基本领域</li><li>实践<strong>构成</strong>了社会发展的动力实践<strong>是</strong>社会发展动力（<strong>×</strong>）因为社会发展的动力是社会基本矛盾</li></ul></li></ul></li><li>意识观派生<ul><li>意识的来源、本质和作用—— #重点<ul><li>意识的概念<ul><li>意识是自然界长期发展的产物意识是物质世界长期发展的产物（<strong>√</strong>）（）</li><li>是人脑的机能和属性</li><li><strong>是客观世界的主观映像</strong>意识的本质 最核心的概念</li></ul></li><li>意识的本质：客观世界的主观映像，是客观内容和主观形式的统一</li><li>意识的来源<ul><li>由一切物质具有的反应特性到低等生物的刺激感应性，再到高等动物的感觉和心理，最终发展为人类意识意识是人独有的</li></ul></li><li>意识形成过程中的影响因素<ul><li>决定性因素：劳动（实践）最重要</li><li>重要影响因素：语言……语言是意识的物质外壳，语言是物质，语言的含义是意识</li><li>XXX</li></ul></li><li>意识的作用：<strong>能动</strong>作用—— #特重点<ul><li>主要表现：<ul><li>第一，意识活动具有目的性和计划性</li><li>第二，意识活动具有<strong>创造性</strong></li><li>第三，意识具有指导实践改造客观世界的作用</li><li>第四，意识具有调控人的行为和生理活动的作用</li></ul></li></ul></li></ul></li><li>意识与物质的辩证关系—— #重点<ul><li>物质和意识相互区别<ul><li>1. 物质是本原，意识是派生</li><li>2. 物质不是意识，意识不是物质意识是人脑的分泌物（<strong>×</strong>）（庸俗唯物主义的观点）</li><li>3. 物质不能代替意识，意识不能代替物质</li></ul></li><li>物质和意识相互联系<ul><li>1. 物质可以转化为（变成）意识，意识可以转化为（变成）物质通过实践转换（实践是物质和意识的唯一桥梁）</li><li>2. 意识对物质既有依赖性，又有<strong>相对</strong>独立性</li><li>3. 物质决定意识，意识反作用于物质</li></ul></li><li>正确认识和把握物质和意识的辩证关系，还要处理好主观能动性和客观规律之间的关系物质=&gt;客观规律；意识=&gt;主观能动性​<ul><li>尊重客观规律是正确发挥主观能动性的前提</li><li>只有充分发挥主观能动性，才能正确认识和利用客观规律</li></ul></li><li>正确发挥人的主观能动性的前提和条件<ul><li>前提：从实际出发分析</li><li>基本途径：实践干</li><li>还需要依赖一定的物质条件和物质手段利用工具及条件</li></ul></li></ul></li><li>世界的物质统一性原理—— #重点<ul><li>统一性原理的内容<ul><li>其一，世界是统一的，即世界的本原是一个单其一可以批判二元论（二元论认为物质和意识都是本原）</li><li>其二，世界的统一性在于它的物质性，即世界统一的基础是物质其一其二可以批判唯心主义（不能批判旧唯物主义（除去马克思主义的辩证主义唯物主义）（古典唯物、机械唯物……））</li><li>其三，物质世界的统一性是多样的统一，而不是单一无差别的统一三点可以批判旧唯物主义</li></ul></li><li>世界统一于物质</li><li>世界统一性体现在<ul><li>意识统一于物质意识是物质派生出来的 世界除了物质，什么都没有（<strong>√</strong>） 意识就是物质（<strong>×</strong>）</li><li>人类社会也统一于物质人类社会包括人类历史<ul><li>人类社会的物质性：<ul><li>人类社会是物质世界的组成部分</li><li>人类获取生活资料的活动是物质性的活动人类获取生活资料的活动-&gt;劳动-&gt;实践-&gt;物质</li><li>人类社会存在发展的基础是物质资料的生产方式</li></ul></li></ul></li></ul></li><li>世界的物质统一性原理是马克思主义的基石—— #特重点<ul><li>在认识世界改造世界的过程中，<strong>坚持实事求是，一切从实际出发</strong>。一切从实际出发，是世界的物质统一性原理在现实生活中实际工作中的生动体现坚持实事求是，一切从实际出发（不能从想象主观出发）——方法论启发</li></ul></li></ul></li><li>意识的内容是客观的，意识的形式是主观的</li></ul></li></ul></li><li>辩证法物质世界是怎样的存在（基于唯物论）<ul><li>唯物辩证法两大总特征—— #重点<ul><li>普遍联系<ul><li>联系的含义<ul><li><strong>辩证法中，联系是以区别为前提的</strong></li><li>联系是指事物内部各要素之间和事物之间相互影响、相互制约和相互作用的关系</li></ul></li><li>联系的特点<ul><li>#客观性 ：联系是事物本身固有的，不是主观臆想的联系是客观存在的</li><li>普遍性<ul><li>任何事物内部的不同部分和要素是相互联系的，即任何事物都具有内在的结构性</li><li>任何事物都不能孤立存在，都同其他事物处于一定的联系中</li><li>整个世界是相互联系的统一整体，每一件事物都是世界普遍联系中的一个成分或环节，并且通过它表现出联系的普遍性。世界的普遍性是通过“中介”来实现的</li></ul></li><li>多样性：世界上的事物是多样的，因此事物的联系也是多样的</li><li>条件性<ul><li>条件对事物发展和人的活动具有支持或抑制作用</li><li>条件是可以改变的，人们经过努力可以创造出事物发展所需要的条件</li><li>改变和创造条件不是任意的，必须尊重事物发展的客观规律</li></ul></li></ul></li><li>方法论意义</li></ul></li><li>永恒发展<ul><li>发展的内涵与实质<ul><li>发展的内涵：概况一切形式的变化就是运动，运动变化的趋势（大趋势）是发展运动 = 变化 &gt; 发展 运动、变化都能变好和变坏，发展只能变好 运动是绝对的、无条件的（<strong>√</strong>）发展是绝对的、无条件的（<strong>×</strong>）发展是<strong>永恒</strong>的（<strong>√</strong>）</li><li>发展的实质：前进的上升的运动，发展的实质是新事物的产生和旧事物的灭亡</li></ul></li><li>新、旧事物的关系<ul><li>新事物、旧事物：新事物是合乎历史前进方向、具有远大前途的东西；旧事物是丧失历史必然性、日趋灭亡的东西新旧事物与产生的时间先后无关 新事物<strong>一定</strong>产生于旧事物之后（<strong>×</strong>）新事物<strong>往往</strong>产生于旧事物之后（<strong>√</strong>）</li><li>新生事物是不可战胜的原因<ul><li>1. 新事物具有新结构，适应新环境</li><li>2. 新事物是旧事物的改良（扬弃），吸收旧的优点，增添了新的内容</li><li>3. 新事物符合人民群众的利益，受到群众拥护</li></ul></li></ul></li><li>过程的观点<ul><li>世界不是即成事物的集合体，而是过程的集合体</li><li>一切在历史上产生的都要在历史上灭亡</li><li>任何事物都有它的过去、现在和将来</li><li>……</li></ul></li><li>方法论意义</li></ul></li></ul></li><li>五对范畴—— #重点联系和发展环节上的，逻辑上的问题<ul><li>原因和结果<ul><li>原因和结果是揭示事物的<strong>前后相继</strong>，彼此制约的关系范畴前后相继的关系是因果关系（<strong>×</strong>）（a发生在b之后，b不一定是由a引起） 因果是确定的（<strong>×</strong>）在既定的条件下，因果是确定的（<strong>√</strong>） 有因必有果（<strong>√</strong>）又其因必有其果（<strong>×</strong>）</li><li>关系：对立统一</li><li>方法论：<strong>凡是预则立不预则废</strong></li></ul></li><li>必然和偶然<ul><li>世界上任何事情的发生即使必然也是偶然，是既然和偶然的 #辩证统一缘分（包含必然和偶然）</li><li>关系：对立统一<ul><li>相互区别<ul><li>产生形成的原因不同：必然产生于事物内部的根本矛盾，偶然产生于非根本矛盾和外部条件</li><li>表现形式不同：必然比较稳定，偶然则不稳定</li><li>地位作用不同：必然在事物发展中起决定性作用，偶然只能起到影响作用</li></ul></li><li>相互联系：必然寓于偶然之中，通过大量的偶然表现出来，并为自己开辟道路；偶然背后隐藏着必然，然后受必然支配，偶然是必然的表现形式和补充；必然和偶然在一定条件下可以相互转化</li></ul></li><li>方法论：我们要重视事物发展的必然，把握事物发展的<strong>总趋势</strong>，要善于从偶然中发现必然，把握有利于事物发展的<strong>机遇</strong>出现机遇一般都是考察必然和偶然</li></ul></li><li>可能和实现<ul><li>关系：对立统一<ul><li>相互区别：可能：潜在；现实：实际存在</li><li>相互联系包含、转化<ul><li>一方面，显示蕴含着未来的发展方向，会不断产生出新的可能</li><li>另一方面，可能包含发展成为现实的因素和根据，一旦主客观条件成熟，可能转换为显示</li></ul></li><li>概念区分<ul><li>在现实中是否有依据<ul><li>有-&gt;可能性</li><li>没有-&gt;不可能性</li></ul></li><li>在现实中的依据是否充分<ul><li>充分-&gt;现实的可能</li><li>不充分-&gt;抽象的可能（潜在的可能）</li></ul></li></ul></li></ul></li><li>方法论：要求人们立足现实，展望未来、主义分析事物发展的各种可能、发挥主观能动性，做好应对不利情况的准备，争取实现好的可能</li></ul></li><li>现象和本质<ul><li>现象是事物的外部联系和表面特征，人们可以通过感官感知</li><li>本质则是事物的内在联系和根本性质，只有靠人的理性思维才能把握</li><li>关系：对立统一<ul><li>相互区别<ul><li>现象是个别的、具体的；本质是一般的、普遍的</li><li>现象是多变易逝的；本质是相对稳定的</li><li>现象是生动丰富的；本质是深刻、单纯的</li><li><strong>现象有真相和假象（从侧面歪曲表达事物的本质）之分，假象与错觉不是一回事</strong>真象假象不能用正确、错误来形容 真象假象都是现象，现象都是外露于事物外部的，本质才隐藏于事物内部 真相≠真象 假象，客观存在的，如：海市蜃楼；错觉，什么都没有 错觉一定是被假象迷惑导致的（<strong>×</strong>）错觉有可能是被假象迷惑导致的（<strong>√</strong>） 真象往往隐藏于事物内部（<strong>×</strong>）</li></ul></li><li>相互联系：任何本质都是通过现象表现出来的，没有不表现为现象的本质；任何现象都从一定的方面表现着本质，现象是本质的外部表现，即使假象也是本质的表现</li></ul></li><li>方法论：正因为现象和本质是统一的，所以我们能够通过现象认识事物的本质；同时又因为现象和本质是对立的，要求我们不能停留于现象而必须通过现象揭示本质</li></ul></li><li>内容和形式<ul><li>关系：相互依赖、不可分割<ul><li>任何事物的内容都有一定的形式，任何形式也都有一定的内容</li><li><strong>内容决定形式</strong>，形式反作用于内容。当形式适合内容时，对内容的发展起着积极的推动作用；当形式不适合内容时，对内容的发展起着消极的阻碍作用​当生产关系适应生产力发展的时候会推动生产力，当生产关系不适应生产力发展的时候会阻碍生产力 生产力：社会生产的物质内容；生产关系：社会生产的组织形式</li></ul></li><li>方法论：既要重视内容，根据内容的需要决定形式的取舍、改造和创新；又要善于运用形式，发挥其积极作用，利用和创造必要的形式,适时地抛弃与内容不相适应的形式</li></ul></li></ul></li><li>三大规律在联系和发展的基础上，探讨事物是怎样联系的，为什么会发展，怎样发展，往哪里发展<ul><li>对立统一规律联系的内容、发展的原因和动力（怎样联系、为什么发展）<ul><li>唯物辩证法的实质和核心—— #特重点<ul><li>对立统一规律是唯物辩证法实质和核心的原因<ul><li>1. 对立统一规律揭示了事物普遍联系的根本内容和永恒发展的内在动力，从根本上回答了事物为什么会发展的问题</li><li>2. 对立统一规律是贯穿其他规律和范畴的中心线索</li><li>3. 对立统一规律提供矛盾分析法，它是对事物辩证认识的实质</li><li>4. 是否承认对立统一学说是唯物辩证法和形而 上学对立的实质</li></ul></li></ul></li><li>矛盾的同一性和斗争性的辩证关系原理—— #特重点<ul><li>矛盾的同一性：矛盾双方相互依存、相互贯通的性质和趋势同一性-&gt;相互依存、相互贯通</li><li>矛盾的斗争性：矛盾着的对立面之间相互排斥、相互分离的性质和趋势斗争性（按照激烈性区分）-&gt;对抗性、非对抗性</li><li><strong>同一和斗争不是时而时而的关系，而是既又的关系</strong></li><li>同一性和斗争性的关系：对立统一<ul><li>相互联系：矛盾的同一性和矛盾的斗争性是相互联结、相辅相成的，没有斗争性就没有同一性,斗争性寓于同一性之中没有同一性也没有斗争性eg. 相进的事物（如：人）之间会会产生斗争性，越相近，斗争性越强</li><li>相互区别：在事物的矛盾中，矛盾的斗争性是无条件的 绝对的，矛盾的同一性是有条件，相对的</li></ul></li><li><strong>方法论意义</strong>：“看问题要一分为二”；“求同存异”；“批判地继承”；“事物之间会相互转化”要将该方法论意义与同一性和斗争性联系起来</li></ul></li><li>矛盾同一性和斗争性在事物发展中的作用原理<ul><li>矛盾的同一性在事物发展中的作用表现在<ul><li>第一，由于矛盾双方相互依存，互为存在的条件，矛盾双方可以<strong>利用</strong>对方的发展使自己得到发展</li><li>第二，由于矛盾双方相互包含，矛盾双方可以相互<strong>吸取有利于自身的因素</strong>而得到发展</li><li>第三，由于矛盾双方彼此相通，矛盾双方可以向着彼此的对立面转化而得到<strong>发展</strong>，并规定着事物发展的方向</li></ul></li><li>矛盾的斗争性在事物发展中的作用表现在<ul><li>第一，矛盾双方的斗争推动矛盾双方力量的对比发生变化，此消彼长造成事物的量变</li><li>第二，矛盾双方的斗争促使矛盾双方的地位或性质发生转化，实现事物的质变</li></ul></li><li>方法论：<strong>事物的发展不仅表现为“相反相成”，而且表现为“相辅相成”</strong>；和谐作为矛盾的一种特殊表现形式,不是无差别的一致，本质在于协调事物内部各种因素的相互关系，促进最有利于事物发展的状态矛盾都有同一性和斗争性，斗争性表现为相反相成，同一性表现为相辅相成 逆向思维，反向思考</li></ul></li><li>矛盾的普遍性和特殊性的辩证关系<ul><li>矛盾的普遍性的概念：矛盾的普遍性是指矛盾存在于一切事物中, 存在于一切事物发展过程的始终，旧的矛盾解决了， 新的矛盾又产生。事物始终在矛盾中运动时时刻刻处处都有矛盾，矛盾的普遍性=矛盾的共性</li><li>矛盾的特殊性的概念：矛盾的特殊性是指具体事物在其运动中的矛盾及每一矛盾的各个方面都有其特点。具体表现为三种情形：矛盾的特殊性=矛盾的个性<ul><li>1. 不同事物的矛盾各有其特点</li><li>2. 同一事物的矛盾在不同发展过程和发展阶段各有不同特点</li><li>3. 构成事物的诸多矛盾以及每一矛盾的不同方 面各有不同的性质、地位和作用</li></ul></li><li>关系：对立统一<ul><li>相互区别：矛盾的共性是无条件的、绝对的，矛盾的个性是有条件的、相对的</li><li>相互联系：<strong>任何</strong>现实存在的<strong>事物</strong>都是共性和个性的有机统一，共性寓于个性之中，没有离开个性的共性，也没有离开共性的个性</li></ul></li><li>方法论意义：“ <strong>具体问题具体分析</strong>”；对症下药，量体裁衣马克思主义的精髓</li></ul></li><li>矛盾的不平衡发展原理<ul><li>概念：<strong>主要矛盾</strong><strong>是矛盾体系中处于支配地位</strong>，对事物发展起决定作用的矛盾。<strong>次要矛盾</strong><strong>是处于服从地位的矛盾</strong>。在每一对矛盾中又有矛盾的主要方面与矛盾的次要方面</li><li>原理：矛盾的性质主要是由矛盾的主要方面决定的</li><li>方法论意义：“两点论”和“重点论”相结合；抓关键、看主流</li></ul></li><li>矛盾分析法（方法论总结）对立分析法得出的，对立统一规律（矛盾规律）<img src="https://api2.mubu.com/v3/document_image/61d009c0-8ec1-40f5-9be1-5909c21ede4c-5533406.jpg"><ul><li><ul><li></li></ul></li></ul></li></ul></li><li>量变质变规律（质量互变定律）—— #特重点发展的过程和状态（怎样发展）<ul><li>概念<ul><li>质：一事物成为其自身并区别于其他事物的内在规定性是什么<ul><li>认识质的意义：认识质是认识和实践的起点和基础。只有认识质，才能区别事物</li></ul></li><li>量：事物的规模、程度、速度等可以用数量关系表示的规定性怎么样<ul><li>认识量的意义：<ul><li>1. 认识事物的量是认识的深化和精确化</li><li>2. 只有正确了解事物的量，才能正确估计事物在实践中的地位和作用，因为同质的事物由于数量不同，在实践中的地位和作用往往不同</li></ul></li></ul></li><li>度：保持事物质的稳定性的数量界限，即事物的限度、幅度和范围</li><li>关节点：度的两端叫关节点或临界点</li><li>质变：质变是事物性质的根本变化，是事物由一种质态向另一种质态的飞跃，体现了事物渐进过程和连续性的中断</li><li>量变：量变是事物<strong>数量的增减</strong>和组成要素<strong>排列次序</strong>的变动，是保持事物的质的相对稳定性的不显著的变化，体现了事物发展渐进过程的连续性</li></ul></li><li>关系量变和质变的关系<ul><li>相互区别：见概念</li><li>相互联系<ul><li>第一，量变是质变的必要准备要想质变就一定要经过量变的积累 否定该点会变成激变论（夸大质变，否定量变）</li><li>第二，质变是量变的必然结果水滴一定会石穿（<strong>√</strong>） 否定则变成庸俗进化论（夸大量变，否定质变）</li><li>第三，量变和质变是相互渗透的量变之中有质变，质变之中有量变 <strong>量变中的质变是量变，质变中的量变是质变</strong><ul><li>一方面，在总的量变过程中有阶段性和局部性的部分质变</li><li>另一方面，在质变过程中也有旧质在量上的收缩和新质在量上的扩张</li></ul></li></ul></li></ul></li><li>方法论<ul><li>理论上的方法论坚持马克思主义里面的量变质变规律可以批判谁<ul><li>夸大质变导致：激变论</li><li>夸大量变导致：庸俗进化论</li></ul></li><li>实践上的方法论<ul><li><strong>适度原则</strong>中道的德行</li><li>对“新发展阶段”的认识我们还处于社会主义初级阶段，社会主义初级阶段中有新发展阶段，是量变中的质变</li><li>改革、发展和稳定</li></ul></li></ul></li></ul></li><li>否定之否定规律—— #重点发展的方向和归宿（往哪里发展）<ul><li>辩证否定观<ul><li>肯定因素是维持现成事物存在的因素，否定因素是促使现成事物灭亡的因素世间万物都有肯定因素和否定因素</li><li>辩证否定观的基本内容是：<ul><li>第一，否定是事物的自我否定形而上学：外在力量对事物进行消灭</li><li>第二，否定是事物发展的环节</li><li>第三，否定是新旧事物联系的环节</li><li>第四，辩证否定的实质是“扬弃”，即新事物对旧事物既批判又继承，既克服其消极因素又保留其积极因素形而上学：要么肯定一切，要么否定一切（是就是是，不是就是不是）</li></ul></li><li>辩证否定观和形而上学否定观的区别<img src="https://api2.mubu.com/v3/document_image/0ebeae53-ef1b-4c88-ad2c-33d0b30e2c06-5533406.jpg"><ul><li><ul><li></li></ul></li></ul></li></ul></li><li>否定之否定规律<ul><li>事物的辩证发展就是经过两次否定、三个阶段，形成一个周期。其中否定之否定阶段<strong>仿佛</strong>是向原来出发点的“回复”，但这是在更高阶段的“回复”，是“扬弃”的结果</li></ul></li><li>方法论<ul><li>理论上的方法论<ul><li>只看到回归，没看到发展：循环论佛教</li><li>只看到发展，没看到回归：直线论</li></ul></li><li>世界上的方法论<ul><li>前途是光明的</li><li>道路是曲折的</li></ul></li></ul></li></ul></li></ul></li><li>客观辩证法和主观辩证法—— #重点<ul><li>客观辩证法：客观事物或客观存在的辩证法（采取外部必然性形式）</li><li>主观辩证法：人类认识和思维的辩证法（则采取观念的、逻辑的形式）</li><li>主观反映客观，客观被主观反映客观辩证法就是唯物，主观辩证法就是唯心（<strong>×</strong>）（客观主观是反映和被反映的关系，唯物唯心是对错关系）</li></ul></li><li>辩证思维方式—— #非重点<ul><li>归纳与演绎</li><li>分析与综合</li><li>抽象与具体</li><li>历史和逻辑</li></ul></li></ul></li><li>认识论人类如何认识世界<ul><li>认识的来源<ul><li>实践的本质和基本特征—— #重点实践和认识<strong>等同于</strong>物质和意识<ul><li>错误的实践观<ul><li>中国古哲学：主要指<s>道德伦理行为</s></li><li>康德：实践是<s>理性自主</s>的道德活动实践不是理性自主的，是感性的、对象性的</li><li>黑格尔：实践是主观改造客观对象的创造的<s>精神活动</s>实践是物质活动</li><li>费尔巴哈：实践等同于<s>生物</s>适应环境的活动实践是人类独有的</li></ul></li><li>正确的实践观<ul><li>实践是感性的、对象性的物质活动感性：体现人的能动、自觉、目的和意愿 对象性：客体 物质活动：物质的</li><li>实践的本质含义：实践是人类 能动地改造世界的社会性的物质活动实践是人类独有的；能动：感性的；社会性的物质活动：物质</li><li>实践的基本特征：直接现实性、自觉能动性和社会历史性结合题干判断<ul><li>直接现实性：实践具有将“人脑中的”东西变成“现实”的东西的功能</li><li>自觉能动性：实践受意识的指导，体现主体的目的性受头脑的指挥，体现主体的意愿</li><li>社会历史性：不同阶段的实践内涵不同</li></ul></li></ul></li></ul></li><li>实践的基本结构和形式—— #重点<ul><li>实践主体：人（个人主体、群体主体、人类主体）<ul><li>实践主体的能力<ul><li>自然能力</li><li>精神能力<ul><li>知识因素：对理论知识的把握和对经验的把握</li><li>非知识因素：情感意志等因素</li></ul></li></ul></li></ul></li><li>实践客体：物纳入实践范围之内的物才是客体</li><li>实践中介：实践中介是指各种形式的工具、手段以及运用、操作这些工具、手段的程序和方法<ul><li>一是作为人的肢体延长、感官延伸、体能放大的物质性工具系统</li><li>二是语言符号工具系统。语言符号是主体思维活动进行的现实形式，也是人们社会交往得以进行的中介</li></ul></li><li>主体和客体相互作用的关系<ul><li>实践关系：<strong>最根本的关系</strong></li><li>认识关系同构性：两个行为不是一样的行为，但是有相同的结构。实践和认识的主体和客体在本质上是一致的</li><li>价值关系</li></ul></li><li>主体客体化：它（客体）变了</li><li>客体主体化：我（主体）变了，客体变成主体的一部分</li><li>实践的三种基本形式：物质生产实践（劳动）、社会政治实践（搞关系）、科学文化实践（探索）物质生产实践是<strong>最基本</strong>的实践活动</li><li>虚拟实践：具有交互性、开放性、间接性。实践活动的派生，具有相对独立性</li></ul></li><li>实践对认识的决定作用—— #特重点类比物质对意识的关系：物质决定意识，意识反作用于物质<ul><li>实践决定认识<ul><li>1. 实践是认识的来源。首先，实践产生了认识的需要；其次，实践还为认识的形成提供了可能。</li><li>2. 实践是认识发展的动力。</li><li>3. 实践是认识的目的。</li><li>4. 实践是检验认识真理性的唯一标准。</li></ul></li><li>实践决定认识<img src="https://api2.mubu.com/v3/document_image/b8379ae7-38cd-4d65-b0f7-db2b4058aa3e-5533406.jpg"><ul><li><ul><li></li></ul></li></ul></li></ul></li></ul></li><li>认识的本质、过程和规律<ul><li>认识的本质—— #重点认识是什么（认识分为知识性认识和评价性认识）<ul><li>唯心主义先验论：从思想和感觉到物批判先验论</li><li>唯物主义反映论：从物到感觉和思想<ul><li>直观反映论（机械反映论）旧唯物主义（除马克思主义唯物的唯物主义）</li><li>能动反映论辩证唯物主义（辩证唯物主义）</li><li>认识的本质：<strong>主体</strong><strong>在</strong><strong>实践</strong><strong>基础上对</strong><strong>客体</strong><strong>的</strong><strong>能动反映</strong>eg. <strong>人类的认识具有模仿性（√）人类的认识就是模仿（×）</strong><ul><li>这种能动反映不但具有反映客体内容的反映性特征，而且具有实践所要求的主体能动的、创造性的特征。任何认识既是反映又是创造<ul><li>一方面，认识的反映特性是人类认识的基本规定性。认识的反映特性是指人的认识必然要以客观事物为原型和摹本，在思维中再现或摹写客观事物的状态、属性和本质。违反反映性就会变得唯心</li><li>另一方面，认识的能动反映具有创造性。认识是一种在思维中的能动的、创造性的活动，而不是主观对客观对象简单、直接的描摹或照镜子式的原物映现。违反能动性会变成旧唯物主义的机械（直观）反映</li></ul></li><li>认识的反映特性和创造特性之间的关系：<strong>#不可分割</strong><ul><li>只坚持认识的反映性，看不到认识能动的创造性，就重复走上了旧唯物主义 直观反映论的错误之路</li><li>只坚持认识能动的创造性，使创造性脱离反映论的前提，就会把创造变成主观随意，从而滑向唯心主义和不可知论</li></ul></li><li>能动反映论的两个突出特点（优点）<ul><li><strong>把实践引入认识论</strong></li><li><strong>把辩证法应用于反映论</strong>考察认识的发展过程，把认识看成一个由不知到知、由浅入深的充满矛盾的能动的认识过程，全面地揭示了认识过程的辩证性质</li></ul></li></ul></li></ul></li></ul></li><li>认识过程的两次飞跃<ul><li>从感性认识到理性认识（第一次飞跃）（从实践到认识）—— #特重点<ul><li>感性认识<ul><li>感性认识的对象：事物的现象、外部联系、各个方面</li><li>感性认识的形式：感觉、知觉和表象</li><li>感性认识的特点：突出特点——直接性；具体性</li></ul></li><li>理性认识<ul><li>理性认识的对象：事物的本质、全体、内在联系和事物自身规律性认识</li><li>理性认识的形式：概念、判断、推理</li><li>理性认识的特点：间接性、抽象性</li></ul></li><li>感性认识与理性认识的辩证关系（#对立统一 ）<ul><li>联系<ul><li>第一，感性认识有待于发展和深化为理性认识</li><li>第二，理性认识依赖于感性认识</li><li>第三，感性认识和理性认识相互渗透、相互包含偏向理性主义-&gt;教条主义（现实生活）唯理论（理论上） 偏向感性主义-&gt;经验主义（生活上）经验论（理论上） 感性认识和理性认识的 #辩证统一 关系是在实践的基础上形成的，也需要在实践中发展。如果割裂二者的#辩证统一 关系，就会走向唯理论或经验论，在实际工作中就会犯教条主义错误或经验主义错误</li></ul></li><li>选择题考点感性和理性同等重要，但是针对某句话可以说它是理性重要还是感性重要<ul><li>感觉到的东西不能立刻理解，只有理解的东西才能深刻的感受——理性更重要</li><li>尽信书，不如无书——感性更重要</li><li>同一句名言，出自<strong>饱经风霜</strong>的老者之口和出自<strong>缺乏阅历</strong>的少年之口其内涵不同——感性更重要</li></ul></li></ul></li><li>感性认识上升到理性认识的条件<ul><li>勇于实践，深入调查，获取十分丰富合乎实际的感性材料</li><li>必须经过理性思考的作用，将丰富的感性材料加工制作</li></ul></li></ul></li><li>理性认识到实践的飞跃（第二次飞跃）（从认识到实践）—— #非重点是认识过程中更重要的一次飞跃</li></ul></li><li>认识过程中的理性因素和非理性因素（ #影响因素 ）—— #特重点<ul><li>理性因素<ul><li>概念：理性因素是指人的理性直观、理性思维等能力</li><li>作用：它在认识活动中的作用主要有指导作用、解释作用和预见作用等</li></ul></li><li>非理性因素（感性因素）<ul><li>概念：非理性因素主要是指认识主体的情感和意志。从广义上看，人们还常把认识能力中具有不自觉、非逻辑性等特点的认识形式，如联想、想象、猜测、顿悟、灵感等，也包括在人的非理性因素中</li><li>作用：非理性因素对于人的认识能力和认识活动具有激活、驱动和控制作用</li></ul></li></ul></li><li>感性认识、理性认识、感性因素、理性因素<ul><li>感性认识和理性认识的任何一种认识都有感性因素和理性因素的影响因素<ul><li><img src="https://api2.mubu.com/v3/document_image/5d3df766-805b-4129-8aee-764d799d5449-5533406.jpg"></li></ul></li></ul></li><li>认识的规律—反复性质—— #特重点<ul><li>认识过程的反复性是指，人们对于一个复杂事物的认知往往要经过由感性认识到理性认识、再由理性认识到实践的多次反复才能完成</li><li>原因：从客观看，事物暴露有个过程；从主观看主体认识能力提高有个过程</li></ul></li><li>认识发展的无限性—— #特重点</li><li>认识发展的无限性是指，对于事物发展过程的推移来说，人类的认识是永无止境、无限发展的，它表现为“实践、认识、再实践、再认识”的无限循环，由低级阶段向高级阶段不断推移的永无止境的前进运动。这种认识的无限发展过程，在<strong>形式上是循环往复</strong>，在<strong>实质上是前进上升</strong> #否定之否定</li><li>认识与实践的具体的历史统一—— #非重点<ul><li>方法论<ul><li>实践超前于认识：冒进主义（左）共产党员——左倾、右倾；其他党派——左派、右派</li><li>实践落后于认识：保守主义（右）</li></ul></li></ul></li></ul></li><li>认识的结果和检验标准<ul><li>真理及其特点—— #特重点<ul><li>错误真理观<ul><li>马赫主义：真理是“思维形式”，是“社会地组织起来的经验”，凡是大多数人承认的就是真理</li><li>实用主义：有用即真理，把真理的有用性与真理本身等同起来真理一定是有用的（<strong>√</strong>）有用的就是真理（<strong>×</strong>）</li></ul></li><li>正确的真理观：真理是标志主观与客观相符合的哲学范畴，是对客观事物及其规律的正确反映客观：客观事物；主观：脑子中的事物</li><li>真理的特点<ul><li>#客观性 ：本质属性<ul><li>真理的内容来说：真理是对外部物质世界进行反映，即为客观的</li><li>真理的检验标准来说：检验标准是实践，实践是客观活动</li><li>真理的内容是客观的，真理的形式是主观的等同于意识的内容是客观的，意识的形式是主观的</li><li>一元性（由客观性延伸而出）：真理的 #客观性 决定了真理的一元性。真理的一元性是指在同一条件下对于特定的认识客体的真理性认识只有一个，而不可能有多个</li></ul></li><li>绝对性<ul><li>真理的绝对性是指真理的内容表明了主客观统一的确定性和发展的无限性</li><li>含义<ul><li>一是任何真理都必然包含同客观对象相符合的客观内容，都同谬误有原则的界限。否则就不称其为真理，这一点是无条件的、绝对的</li><li>二是人类认识按其本性来说，能够正确认识无限发展着的物质世界，认识每前进一步，都是对无限发展着的物质世界的接近，这一点也是无条件的、绝对的。因此，承认世界的可知性，承认人能够获得关于无限发展着的物质世界的正确认识，也就是承认了真理的绝对性</li></ul></li></ul></li><li>相对性<ul><li>真理的相对性是指人们在一定条件下对事物的客观过程及其发展规律的正确认识总是有限度的</li><li>含义<ul><li>一是真理所反映的对象是有条件的、有限的</li><li>二是真理反映客观对象的正确程度也是有条件的、有限的</li></ul></li></ul></li></ul></li><li>真理绝对性和相对性之间的关系：#辩证统一<ul><li>二者 #相互依存</li><li>二者相互包含<ul><li>包含：一是说真理的绝对性寓于真理的相对性之中；二是说真理的相对性必然包含并表现着真理的绝对性</li><li>所以，绝对真理和相对真理是不可分的，没有离开绝对真理的相对真理，也没有离开相对真理的绝对真理。无数相对的真理之总和，就是绝对的真理无数相对的真理之总和，就是绝对的真理：现在的绝对的真理都是以前无数的真理被推翻后留下的绝对正确的东西的总合</li></ul></li><li>真理永远处在由相对向绝对的转化和发展中，是从<strong>真理的相对性走向绝对性、接近绝对性的过程</strong>。任何真理性的认识都是由真理的相对性向绝对性转化过程中的一个环节，这是真理发展的规律无限逼近终极绝对的真理（概念中可以存在，现实中只能无限接近）</li><li>真理的绝对性与相对性，<strong>根源于</strong>人的认识能力、思维能力的矛盾本性，是人的思维的至上性和非至上性或人的认识能力的无限性和有限性的矛盾<ul><li>人的思维的至上性：人完全有能力去认知这个世界=&gt;人获得的真理的绝对性</li><li>人的思维的非至上性：目前、当前还没有这个能力=&gt;人获得的真理的相对性</li></ul></li></ul></li><li>方法论<ul><li>只看到绝对真理：教条主义</li><li>只看到相对真理：诡辩论（怀疑主义）</li></ul></li></ul></li><li>真理与谬误—— #特重点<ul><li>真理与谬误的关系： #对立统一<ul><li>相互区别：由于真理和谬误决定于认识的内容是否如实地反映了客观事物，因此真理和谬误是性质不同的两种认识，它们是对立的</li><li>相互联系：真理和谬误是统一的，它们相互依存、相互转化真理和谬误相比较而存在，没有真理就无所谓谬误，没有谬误也无所谓真理；真理中包含着某种以后会暴露出来的错误的方面或因素，谬误中也隐藏着以后会显露出来的真理的成分或萌芽</li><li>在一定条件下，真理和谬误可以相互转化。<strong>真理和谬误在</strong><strong>一定范围内</strong><strong>的</strong><strong>对立</strong><strong>是</strong><strong>绝对的</strong>，但<strong>超出一定范围</strong>，<strong>它们就会互相转化</strong>，真理变成谬误，谬误变成真理</li></ul></li><li>真理的相对性不等同于谬误<ul><li>真理的相对性表示现在的真理未来可能错，谬误现在就是错的</li></ul></li></ul></li><li>真理的检验标准—— #非重点<ul><li><strong>实践是检验真理的唯一标准，这是由</strong><strong>真理的本性</strong><strong>和</strong><strong>实践的特点</strong><strong>决定的</strong><ul><li>真理的本性是主观与客观的相结合实践是主客观联系的桥梁</li><li>实践的本质特点是直接现实性</li></ul></li><li>实践是标准，并不排斥逻辑证明的作用马克思主义认为逻辑证明对检验真理有作用，但不是标准</li><li>实践标准的确定性<ul><li>1. 唯一标准</li><li>2. 不可推翻</li><li>3. 即使当前不能，最终仍能裁决</li></ul></li><li>实践标准的不确定性<ul><li>1. 一定时期的实践具有局限性，不能充分证明或驳倒一切</li><li>2. 不是一次完成</li><li>3. 已被检验的仍需接受在检验</li></ul></li></ul></li><li>真理与价值的辩证统一—— #重点<ul><li>价值是指在实践基础上形成的主体和客体之间的意义关系是客体对个人、群体乃至整个社会的生活和活动所具有的积极意义</li><li>价值的特点<ul><li>#客观性 ：不以人的意志而转移</li><li>主体性：主体不同，价值不同主体性不等同于主观性，价值没有主观性</li><li>多维性：维度不同，价值不同人有个人维度、群体维度、社会维度、全人类维度</li><li>社会历史性：历史时期不同，价值不同</li></ul></li><li>认识分为两种（以上全是知识性认识）<ul><li>知识性认识：以客体本身为对象我认识客体</li><li>评价性认识：以主客体的关系对象我认为客体是怎样怎样的</li></ul></li><li>价值评价：价值评价是一种关于价值现象的评价性的认识活动，是主体对客体价值以及价值大小所作的评判或判断，因而也被称作价值判断<ul><li>价值评价的特点<ul><li>第一，评价以主客体的价值关系为认识对象</li><li>第二，评价结果与评价主体直接相关</li><li>第三，评价结果的正确与否依赖于对客体状况和主体需要的认识知识越多评价的越好</li></ul></li><li>价值评价的特点表明，评价并<strong>不是</strong>一种<strong>主观随意性的认识活动</strong>，而<strong>是具有客观性的认识活动</strong><ul><li>由于人民群众的要求和利益从根本上代表着人类整体的要求和利益，是与历史发展的基本要求或趋势相一致的，因此对于任何价值评价的主体而言，其价值评价只有与人类整体的要求或利益相一致，才是正确的价值评价正确的评价不能反人类</li></ul></li><li>衡量实践的两把尺度：真理、价值</li></ul></li><li>真理和价值在实践中的辩证统一关系<ul><li>首先，成功的实践必然是以真理和价值的辩证统一为前提的</li><li>其次，价值的形成和实现必须以坚持真理为前提，而真理又必然是具有价值的</li><li>最后，真理和价值在实践和认识活动中是相互制约、相互引导、相互促进的</li></ul></li></ul></li><li>认识世界和改造世界必须用于创新—— #非重点</li><li>自由和必然—— #重点<ul><li>自由（体现人的能动性)：我想怎么样</li><li>必然（体现事物客观规律性）：我该怎么样</li><li>人类历史就是从必然走向自由的历史（自由不意味着规律和必然消失）</li><li>自由是有条件的<ul><li>认识条件：认识越多越自由</li><li>实践条件：<ul><li>1. 自由以必然为限度</li><li>2. 自由以不牺牲别人的自由为限度</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>唯物史观人类历史的发展规律问题<ul><li>唯物史观和唯心史观的对立—— #重点<ul><li>唯心史观缺陷<ul><li>缺陷1：只看到了历史发展背后的精神力量，而没有看到精神力量背后的物质动因</li><li>缺陷2：只看到了历史发展中少数英雄人物的力量，而没有看到人民群众的作用</li></ul></li></ul></li><li>社会发展的物质动因<ul><li><img src="https://api2.mubu.com/v3/document_image/2e4cf9c0-2b8b-48f5-b5f2-9276511e5b3b-5533406.jpg"></li></ul><ul><li>社会存在和社会意识及其辩证关系—— #重点<ul><li>社会存在<ul><li>地理环境影响因素，非决定性力量（马克思主义不同意地理环境决定论）</li><li>人口因素影响因素，非决定性力量（马克思主义不同意人口因素决定论）</li><li><strong>生产方式</strong>决定性生产方式=生产力+生产关系 #概念拆分<ul><li><strong>生产力</strong><ul><li>劳动资料：生产工具是生产力发水平的标志</li><li>劳动对象：与劳动资料和称生产资料</li><li>劳动者：生产力中最活跃的因素</li></ul></li><li>生产关系<ul><li>生产资料所有制关系：最基本的内容</li><li>生产中人与人的关系</li><li>产品分配关系</li></ul></li></ul></li></ul></li><li>社会意识<ul><li>社会心理、自发形成的风俗、习惯社会大家都这么看，没有理由</li><li>社会意识<strong>形式</strong><ul><li>社会意识<strong>形态</strong>（社会意识形式中与<strong>经济、阶级、利益有关</strong>的内容）：政治法律思想、道德、艺术、宗教、哲学等判断一个东西是不是形态就看不同阶级对它的看法是不是一致的</li><li><strong>非</strong>社会意识<strong>形态</strong>（社会意识形态中与<strong>经济、阶级、利益无关</strong>的内容）：语言学、心理学、自然科学等</li></ul></li></ul></li><li>社会存在和社会意识及其辩证关系<ul><li>社会存在决定社会意识：<ul><li>1. 社会存在是社会意识内容的客观来源，社会意识是社会物质生活过程及其条件的主观反映物质是意识的来源，意识是物质的反映</li><li>2. 社会意识是人们进行社会物质交往的产物</li><li>3. 随着社会存在的发展，社会意识也相应地或迟或早的发生变化和发展</li></ul></li><li>社会意识反作用于社会存在（相对独立性）<ul><li>1. 社会意识与社会存在发展的<strong>不平衡性</strong>平衡：物质越发达，意识越先进</li><li>2. 社会意识内部各形式之间的相互影响及各自具有的历史继承性</li><li>3. 社会意识对社会存在的能动的反作用（双向）</li></ul></li></ul></li></ul></li></ul></li><li>两对社会基本矛盾<ul><li>生产力和生产关系矛盾运动的规律（第一对社会基本矛盾）—— #重点<ul><li>生产力是人们解决社会同自然矛盾的实际能力，是人类改造自然使其适应社会需要的<strong>物质力量</strong>。它表示<strong>人和自然</strong>的关系。它包括：<ul><li><img src="https://api2.mubu.com/v3/document_image/f7979d13-b2c9-4caa-b5ba-ba6e0cf19056-5533406.jpg"></li></ul>生产力是物质<ul><li>1. 劳动资料即劳动手段（劳动资料中最重要的是生产工具）其中，<strong>最重要的是</strong>生产工具，它是生产力发展水平的客观尺度，是<strong>区分社会经济时代</strong>的 #客观依据</li><li>2. 劳动对象：劳动资料和劳动对象合称为生产资料生产资料=劳动资料+劳动对象 #概念拆分</li><li>3. 劳动者是生产力中<strong>最活跃</strong>的因素</li></ul></li><li>科技跟生产力的关系<ul><li>科技不是生产力中的独立要素（科技渗透在三要素中）</li><li>科学技术日益成为生产发展的<strong>决定性因素</strong>科技在生产劳动中起决定性因素（<strong>√</strong>）科技在社会历史中起决定性因素（<strong>×</strong>）</li><li>科学技术是先进生产力的集中体现和主要标志，是第一生产力</li></ul></li><li>生产关系是人们在物质生产过程中形成的<strong>不以人的意志为转移的</strong>经济关系。包括生产资料所有制关系、生产中人与人的关系和产品分配关系<ul><li><img src="https://api2.mubu.com/v3/document_image/7b521dd5-0806-457e-8ae3-0d6607a1b2c5-5533406.jpg"></li></ul><ul><li>生产资料所有制是最基本的、决定性的。它构成全部生产关系的基础，是区分不同生产方式、判定<strong>社会经济结构</strong>性质的 #客观依据</li><li>生产关系虽然是一种<strong>人和人</strong>的关系但它是在物质生产过程中结成的关系，是不以人的意志为转移的</li></ul></li><li>生产力和生产关系是社会生产不可分割的两个方面。在社会生产中，生产力是生产的物质内容，生产关系是生产的社会形式，二者的有机结合和统一，构成社会的生产方式<ul><li>第一，生产力决定生产关系</li><li>第二，生产关系反作用于生产力（双向）</li></ul></li><li>社会发展第一规律：生产关系一定要适应生产力发展状况的规律</li></ul></li><li>经济基础与上层建筑矛盾运动的规律（第二对社会基本矛盾）—— #重点<ul><li>经济基础是由社会一定发展阶段的生产力所决定的<strong>生产关系</strong>的总和级别上生产关系=经济基础 ∵生产力决定生产关系 ∴生产力决定经济基础​</li><li>上层建筑是指建立在一定的经济基础之上的意识形态以及相应的制度、组织和设施：上层建筑=观念上层建筑（意识形态）+政治上层建筑（政治形态） #概念拆分<ul><li>意识形态又称观念上层建筑<ul><li><img src="https://api2.mubu.com/v3/document_image/d0dc2b2c-f6b3-4f83-9896-820a414816be-5533406.jpg"></li></ul>包括政治法律思想、道德、艺术宗教、哲学等思想观点<ul><li>属于上层建筑的社会意识就是社会意识形态社会意识中分为 1. 社会心理、风俗、习惯 2. 社会意识形态 3. 非社会意识形态</li></ul></li><li>政治法律制度及设施和政治组织又称政治上层建筑包括：国家政治制度、立法司法制度和行政制度；国家政权机构、政党、军队、警察、法庭、监狱等政治组织形态和设施</li><li>上层建筑中，政治上层建筑居<strong>主导地位</strong>，国家政权是<strong>核心</strong></li></ul></li><li>经济基础和上层建筑的相互关系<ul><li><img src="https://api2.mubu.com/v3/document_image/bb164f3b-72ad-4021-8ffb-187d0ffca771-5533406.jpg"></li></ul><ul><li>首先，是经济基础决定上层建筑</li><li>其次，上层建筑对经济基础具有反作用。这种反作用集中表现在为自己的经济基础服务。上层建筑的反作用是巨大的，但不是无限的。它可以<strong>影响</strong>社会性质和历史进程，伸<strong>不能决定</strong>历史发展的总趋势</li></ul></li><li>社会发展第二规律：上层建筑一定要适应经济基础发展状况的规律</li><li>上层建筑反作用的性质，取决于它所服务的经济基础的性质，<strong>归根到底取决于它是否有利于生产力的发展</strong><ul><li>判断生产关系是否先进，看它能否为生产力服务</li><li>判断上层建筑是否先进，是看它服务的经济基础能否为生产力服务</li></ul></li></ul></li></ul></li><li>社会形态更替的一般规律及特殊形式—— #重点<ul><li>社会形态是关于社会运动的具体形式、发展阶段和不同质态的范畴，<strong>是同生产力发展一定阶段相适应的</strong><strong>经济基础</strong><strong>与</strong><strong>上层建筑</strong><strong>的统一体</strong>社会形态=经济基础+上层建筑 #概念拆分<ul><li>社会形态包括社会的经济形态、政治形态和意识形态经济基础就是经济形态，上层建筑中的政治上层建筑是政治形态，观念上层建筑就是意识形态</li><li>社会形态内容是全面的，社会形态决定上层建筑</li><li>社会形态是具体的，不是抽象的</li><li>社会形态是历史的，有产生、发展、灭亡的过程</li></ul></li><li>社会形态更替的一般规律和特殊规律（社会形态更替的特点）<ul><li>社会形态更替的统一性和多样性相结合</li><li>社会形态更替的必然性和人们的历史选择性必然性：规律发展；历史选择性：能动<ul><li>一个名族做出选择，其原因有：<ul><li>1. 取决于名族利益</li><li>2. 取决于交往</li><li>3. 取决于对历史必然性以及本民族特点的把握程度</li></ul></li></ul></li><li>社会形态更替的前进性与曲折性 #否定之否定</li></ul></li></ul></li><li>社会历史发展的动力<ul><li>社会基本矛盾是社会发展的<strong>根本动力</strong>（第一动力）—— #重点拥有绝对性<ul><li>生产力和生产关系、经济基础和上层建筑之间的矛盾是社会基本矛盾</li><li>社会基本矛盾作为历史发展的根本动力，它在历史发展中的作用表现在<ul><li>首先，生产力是社会基本矛盾运动中最基本的动力因素，是人类社会发展和进步的最终决定力量</li><li>其次，社会基本矛盾特别是生产力和生产关系的矛盾，是“一切历史冲突的根源”，决定着社会中其他矛盾的存在和发展</li><li>最后，社会基本矛盾具有不同的表现形式和解决方式，并从根本上影响和促进社会形态的变化和发展</li></ul></li></ul></li><li>阶级斗争在阶级社会发展中的作用（第二动力）—— #非重点重要动力</li><li>社会革命在阶级社会中的作用（第三动力）—— #非重点重要动力</li><li>改革的性质及其在社会发展中的作用（第四动力）—— #非重点重要动力</li><li>科学技术在社会发展中的作用（第五动力）—— #重点重要动力<ul><li>首先，现代科学技术革命对生产方式产生了深刻影响</li><li>其次，现代科学技术革命对生活方式产生了巨大影响</li><li>最后，现代科学技术革命促进了思维方式的变革</li></ul></li></ul></li><li>人名群众在历史发展中的作用<ul><li>关于历史创造者问题—— #非重点<ul><li>唯心史观——英雄史观</li><li>唯物史观——群众史观</li><li>唯物史观考察历史创造者问题的原则<ul><li>首先，唯物史观立足于现实的人及其本质来把握历史的创造者抽象的人</li><li>其次，唯物史观立足于整体的社会历史过程来探究谁是历史的创造者整个历史过程，非某个历史事件</li><li>再次，唯物史观从社会<strong>历史发展的必然性</strong>入手来考察和说明谁是历史的创造者</li><li>最后，唯物史观从人与历史关系的不同层次上考察谁是历史的创造者</li></ul></li></ul></li><li>现实的人及本质—— #重点<ul><li>从人与动物相区别的层次上看，人的本质在于劳动</li><li>从人与人相区别的层次上看，<strong>人的本质是一切社会关系的总和</strong></li><li>人有两重属性：自然属性和社会属性社会属性是本质属性</li></ul></li><li>人民群众创造历史—— #重点<ul><li>人民群众：政治概念，属于政治面貌</li><li>人民群众是一个历史范畴<ul><li>从质上说，人民群众是指一切对社会历史发展起推动作用的人</li><li>从量上说，是指社会人口中的绝大多数</li></ul></li><li>人民群众中最稳定的主体部分始终是从事物质资料生产的劳动群众及知识分子</li><li>人民群众跟是否为剥削阶级没有必然联系</li><li>人民群众是历史创造者的原因<ul><li>首先，人民群众是社会物质财富的创造者</li><li>其次，人民群众是社会精神财富的创造者</li><li>再次，人民群众是社会变革的决定力量</li><li>最后，人民群众既是先进生产力和先进文化的创造主体，也是实现自身利益的根本力量</li></ul></li><li>历史是人民群众创造的，但人民群众创造历史的活动及作用又受到社会历史条件的制约。这些条件包括经济条件、政治条件和精神文化条件经济条件是根本制约因素</li><li>方法论<ul><li>群众观点：坚信人民群众自己解放自己的观点，全心全意为人民服务的观点一切向人民群众负责的观点，虚心向群众学习的观点</li><li>群众路线：一切为了群众，一切依靠群众，从群众中来，到群众中去。群众路线是无产阶级政党的根本路线，也是党的根本领导方法和工作方法</li></ul></li></ul></li><li>个人在社会历史中的作用—— #重点<ul><li>判断历史人物是否具有历史性作用<ul><li>在具体历史事件中，可能有决定性作用</li><li>在社会历史发展中，没有绝对性作用</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>政经马克思主义政治经济学：主体<ul><li>简单商品经济简单商品经济：资本主义以前的商品经济<ul><li>资本主义生产关系的产生和资本主义生产方式的形成—— #非重点<ul><li>资本主义生产关系产生的途径有两个<ul><li>从小商品经济分化出来</li><li>从商人和高利贷者转化而成</li></ul></li><li>资本原始积累<ul><li>概念：生产者与生产资料相分离，货币资本迅速集中在少数人手中的历史过程生产者与生产资料相分离即为无产阶级</li><li>途径：<ul><li>1. 用暴力手段剥夺农民土地</li><li>2. 用暴力手段掠夺货币财富</li></ul></li></ul></li><li>经过资产阶级革命和产业革命，最终建立起资本主义生产方式</li></ul></li><li>价值是什么—— #重点价值是抽象劳动<ul><li>商品经济是以交换为目的而进行生产的经济形式商品经济对应自然经济，自然经济是自产自销的形式<ul><li>商品经济产生的历史条件有两个<ul><li>一是社会分工的存在</li><li>二是生产资料和劳动产品属于<strong>不同的所有者</strong></li></ul></li></ul></li><li>商品具有使用价值和价值<strong>两个因素</strong><ul><li>使用价值是指商品能满足人们某种需要的属性，即商品的有用性，反映<strong>人与自然之间</strong>的<strong>物质关系</strong>，是商品的<strong>自然属性</strong>，<strong>是一切劳动产品共有的属性</strong>。使用价值构成社会财富的物质内容使用价值是商品和非商品（普通劳动产品）共有的特征</li><li>价值是凝结在商品中的无差别的一般人类劳动，即人类脑力和体力的耗费。价值是商品特有的<strong>社会属性</strong>，在本质上体现了生产者之间的一定社会关系价值=劳动，价格<strong>≠</strong>价值 不经过劳动而天然存在的东西一定没有价值（<strong>√</strong>）（比如空气，有使用价值，但没有价值） 一个东西要有价值，必须要有经过劳动和交换</li><li>使用价值和价值之间的关系： #对立统一<ul><li>对立性：二者不可兼得</li><li>统一性：二者缺一不可</li></ul></li><li>交换价值首先<strong>表现为</strong>一种使用价值同另一种使用价值交换的量的关系或比例。<strong>决定</strong>商品交换比例的，不是商品的使用价值，而是价值<ul><li>价值是交换价值的基础，交换价值是价值的表现形式。价值决定交换价值</li></ul></li></ul></li><li>劳动具的二重性<ul><li>具体劳动是指生产一定使用价值的具体形式的劳动，即有用劳动</li><li>抽象劳动是指撇开一切具体形式的、无差别的一般人类劳动，即人的体力和脑力的消耗</li><li>具体劳动形成商品的使用价值，抽象劳动形成商品的价值实体</li><li>具体劳动和抽象劳动之间的关系： #对立统一</li></ul></li><li>因为生产商品的劳动具有二重性，所以生产出来的商品具有两因素 #因果关系劳动的二重性决定了商品的两因素 具体劳动生产使用价值、抽象劳动生产商品价值<ul><li>劳动具的<strong>二重性</strong>：抽象劳动、具体劳动</li><li>商品的<strong>两因素</strong>：价值、使用价值</li></ul></li></ul></li><li>价值如何衡量—— #重点<ul><li>决定商品价值量的，<strong>不是</strong>生产商品的<strong>个别</strong>劳动时间，<strong>而是社会必要劳动时间</strong></li><li>社会必要劳动时间是指在现有的社会正常生产条件下，在社会平均的劳动熟练程度和劳动强度下制造某种使用价值所需要的劳动时间</li><li>商品的价值量与生产商品所耗费的劳动时间成<strong>正比</strong>，与劳动生产率成<strong>反比</strong>劳动生产率：效率</li><li><ul><li><img src="https://api2.mubu.com/v3/document_image/f7140a49-611e-449a-947f-411f2510787d-5533406.jpg"></li></ul></li><li>影响劳动生产率的因素<ul><li>劳动者的平均熟练程度，科学技术的发展程度及其在生产中的应用，生产过程的社会结合，生产资料的规模和效能以及自然条件</li></ul></li><li>商品价值量是以简单劳动为尺度计量的，复杂劳动等于自乘的或多倍的简单劳动市场调控乘以的比例<ul><li>复杂劳动转化为简单劳动，是在商品交换过程中自发实现的。</li></ul></li></ul></li><li>价值如何表现—— #重点<ul><li>商品的价值形式的发展经历了四个阶段<ul><li><strong>1</strong>. 简单的或偶然的价值形式初级</li><li>2. 总和的或扩大的价值形式</li><li>3. 一般的价值形式</li><li><strong>4.</strong> 货币形式终极，货币只能是金、银等贵金属 金、银天然不是货币，但货币<strong>天然</strong>是金\银</li></ul></li><li>货币是在长期交换过程中形成的固定地充当一般等价物的`商品`货币也是商品</li><li>货币有五种基本职能，即价值尺度、流通手段、贮藏手段、支付手段和世界货币前两大职能即价值尺度和流通手段被称为最基本的职能<ul><li>价值尺度：指货币衡量和表现一切商品价值大小的作用<ul><li>1. 因为货币也是商品，也有价值，可以衡量其他商品的价值货币具有价值尺度的原因</li><li>2. 观念上的货币可以在脑中衡量 ​eg.这件衣服在脑海中大概值一两黄金</li></ul></li><li>流通手段：货币作为商品交换的媒介<ul><li>1. <strong>必须是</strong>现实的货币虚拟货币也是现实的货币</li><li>2. 可以不足值官方发放的一两黄金磕碰不足一两后依旧可以兑换一两黄金所能换到的东西 引发劣币驱逐良币<ul><li>由不足值演化发展出纸币，<strong>纸币没有价值尺度</strong>纸币=0价值</li></ul></li></ul></li><li>储藏手段：货币退出流通领域作为社会财富的一般代表被保存起来的职能</li><li>支付手段：货币被用来清偿债务或支付<strong>赋税、租金、工资</strong></li><li>世界货币：在国际商品流通中发挥一般等价物作用</li><li>ATT：流通手段和支付手段的不同<ul><li>流通手段往往伴随着现货交易</li><li>支付手段往往没有现货交易</li></ul></li><li>货币的产生使整个商品世界分化为两极<ul><li>一极是各种各样的具体商品它们分别代表不同的使用价值</li><li>一极是货币它们只代表商品的价值</li></ul></li><li>商品<strong>内在</strong>的使用价值和价值的矛盾就发展成为<strong>外在</strong>的商品和货币的矛盾</li></ul></li></ul></li><li>价值有何规律—— #重点<ul><li>价值规律的内容<ul><li>商品的价值量由生产商品的社会必要劳动时间决定</li><li>商品交换以价值量为基础，按照等价交换的原则进行</li></ul></li><li>价值规律的<strong>表现形式</strong>：<strong>商品的</strong><strong>价格</strong><strong>围绕价值自发波动</strong><ul><li>发生波动的原因：决定<strong>价格</strong>的因素有供求关系、币值（货币值钱与否）和商品本身的价值供求关系和币值是重要影响因素，<strong>商品</strong><strong>本身的价值</strong><strong>才是</strong><strong>决定因素</strong></li></ul></li><li>价值规律的作用<ul><li>积极作用<ul><li>第一，自发地调节生产资料和劳动力在社会各生产部门之间的分配比例</li><li>第二，自发地刺激社会生产力的发展</li><li>第三，自发地调节社会收入分配</li></ul></li><li>消极作用<ul><li>其一，可能导致垄断的发生，阻碍技术进步</li><li>其二，可能引引起商品生产者的两极分化</li><li>其三，价值规律自发调节社会资源在社会生产各个部门的配置，可能出现比例失调状况，造成社会资源浪费</li></ul></li></ul></li></ul></li><li>私有制基础上商品经济的基本矛盾—— #重点<ul><li>私人劳动和社会劳动的矛盾构成<strong>私有制商品经济的基本矛盾</strong>从私有制角度看，我的劳动就叫私人劳动；从社会分工角度看，我的劳动就叫社会劳动<ul><li>私人劳动和社会劳动之间的矛盾在资本主义制度下，进一步发展成资本主义的基本矛盾，即生产资料的资本主义私人占有和生产社会化之间的矛盾，正是这一矛盾不断运动，才使资本主义制度最终被社会主义制度所代替具有了客观必然性 #资本主义灭亡原因</li></ul></li></ul></li><li>马克思劳动价值论的意义—— #重点<ul><li>马克思在继承古典政治经济学劳动创造价值理论的同时，创立了劳动二重性理论劳动创造价值理论<strong>不是</strong>马克思创立的 劳动二重性理论<strong>是</strong>马克思创立的<ul><li>劳动二重性理论成为理解政治经济学的<strong>枢纽</strong></li></ul></li><li>深化对马克思劳动价值论的认识<ul><li>第一，深化对创造价值的劳动的认识，对生产性劳动作出新的界定</li><li>第二，深化对科技人员、经营管理人员在社会生产和价值创造中所起的作用的认识经营管理人员也在劳动</li><li>第三，深化对科技、知识、信息等新的生产要素在财富和价值创造中的作用的认识</li><li>第四，深化对价值创造与价值分配关系的认识</li></ul></li></ul></li></ul></li><li>发达商品经济（资本主义）<ul><li>自由竞争阶段围绕剩余价值（m）讨论<ul><li>劳动力成为商品与货币转化为资本—— #重点货币转化为资本的条件：劳动力成为商品<ul><li>劳动力是指人的劳动能力，是人的体力和脑力的总和。劳动力的使用即劳动劳动者出售的是自己的劳动力，不是自己</li><li>劳动力成为商品，要具备两个基本条件：<ul><li>第一，劳动者是自由人，能够把自己的劳动力当做自己的商品来支配</li><li>第二，劳动者没有别的商品可以出卖，“自由”得一无所有</li></ul></li><li>劳动力商品的价值，是<strong>由生产、发展、维持和延续劳动力所必需的生活必需品的价值决定的</strong>，它包括三个部分：<ul><li>①维持劳动者本人生存所必需的生活资料的价值</li><li>②维持劳动者家属的生存所必需的生活资料的价值</li><li>③劳动者接受教育和训练所支出的费用</li><li>劳动力价值的构成包含一个历史的和道德的因素不同地区、时期，劳动力的价值会有所浮动</li></ul></li><li>劳动力商品在使用价值上有一个很大的特点，就是它的使用价值就是劳动而劳动又是普通商品价值的源泉</li><li>货币所有者购买到这种特殊商品（劳动力），能够增殖，货币也就转化为资本钱购买普通商品消费，钱叫货币（货币不会增资） 钱购买劳动力，劳动力创造价值，这时候钱叫资本（资本会增值）</li></ul></li><li>资本主义所有制—— #非重点</li><li>剩余价值的生产—— #重点<ul><li>资本主义生产过程是劳动过程和价值增殖过程的统一劳动过程：工人角度，每天都在劳动 价值增殖：资本家角度，钱在增值</li><li>例<ul><li><img src="https://api2.mubu.com/v3/document_image/00d7c4c2-1a21-470c-bf3a-a2d03423282a-5533406.jpg"></li></ul></li><li>1. 从劳动的方面来看：<ul><li>具体劳动的任务：<ul><li>1. 转移“面粉”的价值；</li><li>2. 生产“包子”的使用价值</li></ul></li><li>抽象劳动的任务：生产新价值</li></ul></li><li>2. 从资本的方面来看：<ul><li>全部预付资本100元。</li><li>1.购买面粉的80元。借助具体劳动转移到最终产品中去，不会增殖。称之为<strong>不变资本（C）</strong>。</li><li>2.购买工人的20元。由工人的劳动再创造出来，并能够增殖。称之为<strong>可变成本（V）</strong>。并能够带来<strong>剩余价值（M）</strong></li><li>3.<strong>剩余价值率M'=M/V</strong>。衡量剥削程度例中M'=20/20=100%</li></ul></li><li>3. 从时间的方面来看<ul><li>全天工作8小时。</li><li>1. 前4个小时。为自己劳动，创造劳动力价值，称之为必要劳动时间。社会必要劳动时间：社会平均的劳动熟练程度和劳动强度下制造某种使用价值所需要的劳动时间 必要劳动时间：生产出自己工资的生产劳动时间</li><li>2. 后4小时。为资本家劳动，创造剩余价值，称之为剩余劳动时间。</li></ul></li><li>绝对剩余价值是指在必要劳动时间不变的条件下，由于延长工作日的长度而生产的剩余价值相同效率下，加班而产生的剩余价值</li><li>相对剩余价值是指在工作日长度不变的条件下，通过缩短必要劳动时间而相对延长剩余劳动时间生产的剩余价值相同工作时间（不加班），提高技术，提高效率，缩短必要劳动时间，相对延长剩余劳动时间产生的价值</li><li>绝对剩余价值和相对剩余价值的相同点与不同点<ul><li>都延长了剩余劳动时间</li><li>绝对剩余价值的生产没有必要劳动时间的缩短，但是相对剩余价值有</li><li>绝对剩余价值的生产没有技术的进步，但是相对剩余价值有</li></ul></li><li>超额剩余价值是指企业由于提高劳动生产率而使商品的个别价值低于社会价值的差额全世界的技术没有进步，但是我率先提高技术，我因此多赚出来的钱就是超额剩余价值 超额剩余价值在全世界都提高了技术后会转变成相对剩余价值<ul><li>超额剩余价值是原因，相对剩余价值是结果</li></ul></li><li>资本主义条件下的生产自动化是资本家获取超额剩余价值的手段，而雇佣工人的剩余劳动仍然是这种剩余价值的唯一源泉</li></ul></li><li>资本的积累—— #重点<ul><li>把剩余价值转化为资本，或者说剩余价值的资本化，就是资本积累，<strong>资本主义扩大再生产</strong><strong>的源泉是</strong><strong>资本积累</strong></li><li>资本积累的本质，就是资本家不断利用无偿占有的工人创造的剩余价值，来扩大自己的资本规模，进一步扩大和加强对工人的剥削和统治。<strong>资本积累</strong><strong>的源泉是</strong><strong>剩余价值</strong></li><li>资本积累规模的大小取决于<ul><li>对工人的剥削程度</li><li>劳动生产率的高低</li><li>所用资本和所费资本之间的差额</li><li>资本家垫付资本的大小</li></ul></li><li>资本的有机构成<ul><li>资本的技术构成：由生产的技术水平所决定的生产资料和劳动力之间的比例eg.生产资料：劳动力=4斤面（80元购买的）：1个工人（20元购买的劳动力）=&gt;物比物</li><li>资本的价值构成(C:V)：资本可分为不变资本和可变资本，这两部分资本价值之间的比例eg.不变资本：可变资本=80元：20元=&gt;钱比钱</li><li>资本的有机构成：由资本技术构成<strong>决定并反映</strong>技术构成变化的资本价值构成，通常用C:V来表示</li></ul></li><li>在资本主义生产过程中，资本有机构成呈现<strong>不断提高</strong>趋势。C:V不断提高（C机器设备，V工人）</li><li>资本有机构成提高，可变资本相对量减少，资本对劳动力的需求日益相对地减少，结果就不可避免地造成<strong>大批工人失业</strong>，形成相对过剩人口马克思的失业论：积累的结果<ul><li>资本积累的历史趋势是资本主义制度的必然灭亡和社会主义制度的必然胜利 #资本主义灭亡原因</li><li>资本积累→资本有机构成提高（C:V提高）→相对剩余人口过剩（失业）→贫富差距拉大（两极分化）→资本主义灭亡</li></ul></li></ul></li><li>剩余价值的循环—— #重点<ul><li>产业资本在循环过程中要经历三个不同阶段，与此相联系的是资本依次执行三种不同职能：采购—&gt;生产—&gt;销售<ul><li>第一个阶段是购买阶段，产业资本执行的是货币资本的职能</li><li>第二个阶段是生产阶段，产业资本执行的是生产资本的职能</li><li>第三个阶段是售卖阶段，产业资本执行的是商品资本的职能</li></ul></li><li>产业资本运动的两个基本条件<ul><li>一是产业资本的三种职能形式必须在空间上<strong>同时并存</strong></li><li>二是产业资本的三种职能形式必须在时间上<strong>继起</strong></li></ul></li><li>资本是在<strong>运动中增殖</strong>的，资本周而复始、不断反复的循环，就叫资本的周转<ul><li>影响资本周转快慢的因素有很多，关键的因素有两个：<ul><li>一是资本周转时间</li><li>二是生产资本中固定资本和流动资本的构成流动资本越大，资本家赚的钱越快 eg.擀面杖是固定资本，面是流动资本</li></ul></li></ul></li><li>马克思对资本家全部垫付资本的三次划分<ul><li><img src="https://api2.mubu.com/v3/document_image/8bd75b34-2dad-40a3-8cf3-097deaa0c93f-5533406.jpg"></li></ul>不变资本：买材料的钱不能增值；可变资本：买工人的钱能增值 货币资本：以现金存在；生产资本：以生产资料存在；商品资本：以商品存在 固定资本：能多次使用（资本多次流动）；流动资本：资本一次流动</li><li>社会再生产的核心问题是社会总产品的实现问题，即社会总产品的<strong>价值补偿</strong><strong>和</strong><strong>实物补偿</strong><strong>问题</strong>价值补偿：商品能卖出去，资金能收回来 实物补偿：能够买到原材料</li></ul></li><li>工资与剩余价值的分配—— #重点<ul><li>资本主义工资的本质：在资本主义制度下，工人工资是劳动力的价值或价格</li><li>工资表现为:劳动的价格或工人全部劳动的报酬，这就模糊了工人必要劳动和剩余劳动的界限，掩盖了资本主义剥削关系</li><li>概念<ul><li>成本价格：数值上等于固定资本和可变资本之和C+V</li><li>利润（r）：数值上等于剩余价值m</li><li>平均利润：成本*平均利润率</li><li>平均利润率：<strong>行业间竞争形成的</strong>（资本流动形成）资本从收益低的行业1流向收益高的行业2→行业2逐渐饱和，利润下降，行业1缺失利润上升，最后趋于稳定</li><li>生产价格：=成本价格+平均利润资本家出售商品是按照生产价格<strong>出售</strong>，其<strong>不等同于</strong><strong>成本价格</strong></li><li>超额利润：就是超额剩余价值，由<strong>企业间竞争</strong>形成的即使平均利润率已经形成，但是超额利润依旧存在，因为平均利润率是<strong>行业间竞争</strong>形成的，超额利润是<strong>企业间竞争</strong>形成的</li></ul></li><li>等量资本活动等量利润的原则<ul><li>在利润平均化规律作用下，产业资本家获得产业利润，商业资本获得商业利润，银行资本家获得银行利润，土地所有者获得地租</li></ul></li></ul></li><li>马克思剩余价值理论的意义—— #非重点<ul><li>马克思在<strong>理论上</strong>上的两大贡献 #贡献（马克思在<strong>哲学史</strong>上的两大贡献 #贡献）<ul><li>创立了唯物史观</li><li>创立了剩余价值理论</li></ul></li></ul></li><li>资本主义的基本矛盾与经济危机—— #重点<ul><li>生产资料资本主义私人占有和生产社会化之间的矛盾，是资本主义的基本矛盾。这是生产力和生产关系之间的矛盾在资本主义社会的具体体现</li><li>生产相对过剩是资本主义经济危机的本质特征相对过剩：社会生产过于盲目</li><li>经济危机的<strong>可能性</strong>是由货币作为支付手段和流通手段引起的</li><li>资本主义经济危机爆发的根本原因是资本主义的基本矛盾</li><li>经济危机一般包括四个阶段：危机、萧条、复苏和高涨</li></ul></li><li>资本主义的国家、政治制度及其本质—— #重点<ul><li>资本主义国家的职能包括对内对外两个基本方面<ul><li>对内实行政治统治和社会管理</li><li>对外进行国际交往和维护国家安全及利益</li></ul></li><li>民主制度：“主权在民”、“天赋人权”、“分权制衡”、“社会契约”、“自由、平等、博爱”</li><li>法制：宪法是资本主义国家法律制度的核心，它所依据的基本原则有：私有制原则，“主权在民”原则，分权与制衡原则和人权原则</li><li>国家政权：分权制衡的组织形式，即国家的立法权、行政权、司法权分别由三个权力主体独立行使</li><li>资本主义政治制度的进步作用和局限性（评价）主要考局限性，进步性是<strong>相对</strong>封建阶级政治制度具有进步<ul><li>其一，资本主义的民主是金钱操纵下的民主，实际是资产阶级精英统治下的民主</li><li>其二，法律名义上的平等掩盖着事实上的不平等</li><li>其三，资本主义国家的政党制是一种维护资产阶级统治的政治制度，其多党制则是资产阶级选择自己的国家管理者，实现其内部利益平衡的政治机制</li></ul></li></ul></li><li>资本主义的意识形态及其本质—— #非重点<ul><li>第一，资本主义意识形态是资本主义社会条件下的观念上层建筑，是为资本主义社会形态的经济基础服务的</li><li>第二，资本主义意识形态是资产阶级的阶级意识的集中体现</li></ul></li></ul></li><li>垄断阶段<ul><li>资本主义从竞争到垄断—— #重点<ul><li>资本主义的发展经历自由竞争资本主义和垄断资本主义两个阶段。垄断取代自由竞争在资本主义经济中占据统治地位。<ul><li>垄断资本主义的发展包括私人垄断资本主义和国家垄断资本主义两种形式</li></ul></li><li>垄断是指少数资本主义大企业，<strong>为了获得高额利润</strong>，通过相互协议或联合，对一个或几个部门商品的生产、销售和价格进行操纵与控制<ul><li>垄断形成的两种方式（手段）<ul><li>`生产集中`是指生产资料、劳动力和商品的生产日益**集中于少数大企业**的过程，其结果是大企业在社会生产中所占的比重不断增加</li><li>`资本集中`是指**大资本吞并小资本**，或由许多小资本合并而成大资本的过程，其结果是越来越多的资本为少数大资本所支配</li></ul></li><li>垄断形成的原因：<ul><li>1. 获得高额利润</li><li>2. 避免两败俱伤</li><li>3. 形成竞争限制</li></ul></li></ul></li><li>垄断和竞争<ul><li>垄断资本主义阶段存在竞争的主要原因：<ul><li>一是垄断没有消除产生竞争的经济条件产生竞争的经济条件：私有制</li><li>二是垄断必须通过竞争来维持</li><li>三是不存在由一个垄断组织囊括一切部门、一切社会生产的绝对垄断</li></ul></li><li>垄断条件下的竞争同自由竞争相比，具有一些新特点：自由竞争是为了获得平均利润<ul><li>1. 竞争的主要目的是要获得高额垄断利润，巩固、扩大已有的垄断地位</li><li>2. 不仅采取经济手段还采取非经济手段，使竞争更加复杂。</li><li>3. 竞争的规模扩大，范围遍及各个领域和部门，并由国内扩展到国外</li></ul></li></ul></li><li>金融资本和金融寡头<ul><li>`金融资本`是由`工业垄断资本`和`银行垄断资本`融合在一起而形成的一种`垄断资本`</li><li>金融资本形成的主要途径包括金融联系、资本参与和人事参与金融联系：借贷 资本参与：让别人参股 人事参与：让别人的人进入公司</li><li>金融寡头是指操纵国民经济命脉，并在实际上控制国家政权的少数垄断资本家或垄断资本家集团几个最大的金融资本被称为金融寡头<ul><li>经济上：“参与制”来实现的</li><li>政治上：“个人联合”</li><li>金融寡头还通过建立政策咨询机构，掌握新闻科教文化等来左右和影响内政外交与社会生活</li></ul></li><li>垄断利润是垄断资本家凭借其在社会生产和流通中的垄断地位而获得的超过平均利润的高额利润<ul><li>垄断利润的来源：垄断资本所获得的高额利润，归根到底来自无产阶级和其他劳动人民创造的剩余价值：<ul><li>1.对本国无产阶级和其他劳动人民剥削的加强</li><li>2.通过控制市场占有其他企业特别是非垄断企业的利润eg.榨取产业链供应商的利润</li><li>3.通过加强对其他国家劳动人民的剥削和掠夺获取的国外利润eg.国外代工</li><li>4.通过资本主义国家政权进行有利于垄断资本的再分配，从而将劳动人民创造的国民收入的一部分变成垄断资本的收入</li></ul></li><li>垄断利润的实现：垄断利润主要是通过垄断组织制定的垄断价格来实现的<ul><li>垄断价格是垄断组织在销售或购买商品时，凭借其垄断地位规定的、旨在保证获取最大限度利润的市场价格</li><li><strong>垄断价格</strong><strong>=</strong><strong>成本价格</strong><strong>+</strong><strong>平均利润</strong><strong>+</strong><strong>垄断利润</strong>平均利润=成本价格*平均利润率</li><li>垄断价格包括垄断高价和垄断低价两种形式垄断高价：卖东西给消费者 垄断低价：买供应商的东西</li><li>垄断价格的产生并没有否定价值规律，它是价值规律在垄断资本主义<strong>阶段作用</strong>的具体表现简单商品经济：价格围绕价值上下波动 自由竞争资本主义时期（价值规律内容未变）：价格围绕生产价格上下波动 垄断时期（价值规律内容未变）：价格围绕垄断价格上下波动</li></ul></li></ul></li></ul></li></ul></li><li>垄断资本主义的发展—— #重点发展：私人垄断-&gt;国家垄断-&gt;国际垄断（国际垄断同盟，早期国际垄断同盟叫国际卡特尔，今天国际垄断同盟叫国家垄断资本主义的国际联盟)<ul><li>国家垄断资本主义是国家政权和私人垄断资本融合在一起的垄断资本主义<ul><li>国家断资本主义 形成的原因<ul><li>首先，社会生产力的发展，要求资本主义生产资料在更大范围内被支配，从而促进了国家垄断资本主义的产生根本原因</li><li>其次，经济波动和经济危机的深化，要求国家垄断资本主义的产生</li><li>最后，缓和社会矛盾、协调利益关系，也要求国家垄断资本主义的产生</li></ul></li><li>国家断资本主义的主要形式<ul><li>一是国家所有并直接经营的企业</li><li>二是国家与私人共有、合营企业</li><li>三是国家通过多种形式参与私人垄断资本的再生产过程，包括国家向私人垄断企业订货、提供补贴等</li><li>四是<strong>宏观调节</strong><ul><li>宏观调控的目标：经济快速增长、充分就业、物价稳定和国际收支平衡</li></ul></li><li>五是<strong>微观规制</strong><ul><li>微观规制的目标：规范市场秩序，限制垄断，保护竞争，维护社会公众的合法权益</li><li>微观规制主要有三种类型：其一是反托拉斯法；其二是公共事业规制；其三是社会经济规制反托拉斯法：反垄断法​</li></ul></li></ul></li><li>对国家垄断资本主义的评价：<ul><li>积极方面：国家垄断资本主义是垄断资本主义的新发展，它对资本主义经济的发展产生了积极的作用</li><li>消极方面：但是，国家垄断资本主义的出现并没有改变垄断资本主义的性质。国家垄断资本主义的出现是<strong>资本主义经济制度内</strong>的经济关系调整并没有从根本上消除资本主义的基本矛盾</li></ul></li></ul></li><li>金融自由化与金融创新是金融垄断资本得以形成和壮大的重要制度条件<ul><li>垄断资本主义的金融化程度不断提高体现在：<ul><li>第一，金融业在国民经济中的地位大幅上升，金融资本在资本主义国家国民生产总值和利润总额中所占的比例越来越大</li><li>第二，随着实体经济的资本利润率下降，面对激烈竞争，实体经济部门不得不把利润的一部分投向金融领域，导致金融资本的急剧膨胀</li><li>第三，造业就业人数严重减少，以金融为核心的服务业就业人数逐步增加</li><li>第四，虚拟经济越来越脱离实体经济</li></ul></li><li>金融垄断资本的发展，一方面促进了资本主义的发展另一方面也造成了经济过度虚拟化，导致金融危机频繁发生，不仅给资本主义经济，也给全球经济带来灾难</li></ul></li><li>垄断资本向世界范围扩展<ul><li>经济动因<ul><li>一是将国内过剩的资本输出</li><li>二是将部分非要害技术转移到国外</li><li>三是争夺商品销售市场</li><li>四是确保原材料和能源的可靠来源</li></ul></li><li>基本形式有三种<ul><li>一是借贷资本输出</li><li>二是生产资本输出</li><li>三是商品资本输出</li></ul></li><li>从输出资本来源看，主要有两类<ul><li>一是私人资本的输出</li><li>二是国家资本的输出</li></ul></li><li>经济社会后果：对资本输出国来说是有利的，对资本输入国来说是一把双刃剑对输出国<strong>只有</strong>好处没有坏处（<strong>×</strong>）对输出国是有利的（<strong>√</strong>）</li><li>国际垄断同盟在经济上瓜分世界是通过垄断组织间的协议实现的，而协议的订立、瓜分的结果又以经济实力为后盾和基础</li><li>早期的国际垄断同盟主要是国际卡特尔。当代国际垄断同盟的形式以跨国公司和国家垄断资本主义的国际联盟为主。<ul><li>从事国际经济协调、维护国际经济秩序的国际性协调组织主要有三个：国际货币基金组织、世界银行和世界贸易组织第二次世界大战后</li></ul></li><li>评价：垄断资本国际化条件下各种形式的国际垄断组织、国际垄断同盟和国际经济协调机构的发展，在一定程度上促进了经济全球化的发展，<strong>但它们从根本上说是为了维护资产阶级的利益、为他们覆取高额垄断利润服务的</strong></li></ul></li></ul></li><li>经济全球化及其后果—— #重点<ul><li>经济全球化的表现包括：由垂直分工转向水平分工（扁平化分工）（不已产业分工，而是以一个产业中的不同环节而分工）<ul><li>一是国际分工进一步分化</li><li>二是贸易的全球化商品服务</li><li>三是金融的全球化资本在全世界范围流通</li><li>四是企业经营的全球化</li></ul></li><li>导致经济全球化迅猛发展的因素主要有（原因）：<ul><li>一是科学技术的进步和生产力的发展根本原因</li><li>二是跨国公司的发展</li><li>三是各国经济体制的变革</li></ul></li><li>经济全球化的影响：<ul><li>一方面，经济全球化的过程是生产社会化程度不断提高的过程</li><li>另一方面，经济全球化又是个充满矛盾的过程，它在产生积极效应的同时，也会产生消极的后果。双刃剑<ul><li>积极影响：促进资源在全世界配置，促进世界经济发展</li><li>消极影响<ul><li>一是发达国家与发展中国家之间的差距进一步扩大#差距扩大 ：都在发展，但是差距扩大</li><li>二是在经济增长中忽视社会进步、环境恶化与经济全球化有可能同时发生</li><li>三是各国特别是相对落后国家原有的体制、政府领导能力社会设施、政策体系、价值观念和文化都面临全球化的冲击</li><li>四是经济全球化使各国的产业结构调整变成一种全球行为，它既为一国经济竞争力的提高提供了条件，同时也存在着对别国形成依赖的危险</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>当代资本主义的变化<ul><li>当代资本主义经济政治新变化的表现和特点—— #重点<ul><li>生产资料所有制的变化<ul><li>1. 个体资本所有制</li><li>2. 私人股份资本所有制</li><li>3. 国家资本所有制形式</li><li>4. 法人资本所有制</li></ul></li><li>劳资关系和分配关系的变化<ul><li>职工参与决策，终身雇佣，职工持股</li></ul></li><li>社会阶层的变化<ul><li>一是资本家的地位和作用发生了很大的变化，拥有所有权的资本家一般不再直接经营和管理企业，而是靠拥有的企业股票等有价证券的利息收入为生</li><li>二是高级职业经理成为大公司经营活动的实际控制者</li><li>三是知识型和服务型劳动者的数量不断增加，劳动方式发生了新变化</li></ul></li><li>政治制度的变化<ul><li>首先，政治制度出现多元化的趋势，公民权利有所扩大</li><li>其次，法制建设得到重视和加强，以协调社会各阶级、阶层之间的利益</li><li>最后，改良主义政党在政治舞台上的影响日益扩大</li></ul></li><li>经济危机呈现出新的特点（ #非重点 ）<ul><li>去工业化和产业空心化日趋严重，产业竞争力下降；经济高度金融化，虚拟经济与实体经济严重脱节</li><li>财政严重债务化，债务危机频繁爆发</li><li>两极分化和社会对立加剧#差距扩大</li><li>经济增长乏力，发展活力不足，周期性危机与结构性危机交织在一起</li><li>金融危机频发，全球经济屡受打击</li></ul></li></ul></li><li>当代资本主义新变化的原因和实质—— #重点<ul><li>新变化的原因主要有<ul><li>首先，科学技术革命和生产力的发展，是资本主义变化的根本推动力量根本原因</li><li>其次，工人阶级争取自身权利斗争的作用，是推动资本主义变化的重要力量</li><li>再次，社会主义制度初步显示的优越性对资本主义产生了一定影响</li><li>最后，主张改良主义的政党对资本主义制度的改革</li></ul></li><li>当代`资本主义新变化`的`实质`<ul><li>首先，当代资本主义发生的变化从根本上说是人类社会发展一般规律和资本主义经济规律作用的结果</li><li>其次，当代资本主义发生的变化是在资本主义制度基本`框架内`的的变化，并不意味着资本主义生产关系的根本性质发生了变化框架内的的变化只有量变没有质变</li></ul></li><li>当代资本主义的新变化是深刻的，其意义也是深远的，但是，这些变化并<strong>没有触动资本主义统治的根基</strong>，并<strong>没有改变资本主义制度的本质</strong>，也<strong>没有改变马克思主义关于资本主义的基本论断的科学性</strong></li></ul></li><li>2008年国际金融危机以来资本主义的矛盾与冲突—— #重点<ul><li>在这场危机的影响下，西方国家的经济生活、政治生活和民生等各方面都出现了各种问题<ul><li>第一，经济发展“失调”一些国家开始保护主义（反全球化）</li><li>第二，政治体制“失灵”</li><li>第三，社会融合机制“失效”社会冲突加剧</li></ul></li><li>这些现象背后的<strong>深层次</strong>原因和根源，归根结底还在于<strong>资本主义制度本身</strong>，在于资本主义的基本矛盾</li></ul></li><li>资本主义的历史地位和发展趋势—— #非重点<ul><li>资本主义的内在矛盾决定了资本主义必然被社会主义所代替</li></ul></li></ul></li></ul></li></ul></li><li>科社社会科学主义：目的、归宿<ul><li>社会主义社会<ul><li>空想社会主义的产生、发展和局限性—— #重点<ul><li>从16世纪初期兴起的社会主义思潮算起，社会主义到现在已经有五百年的历史，其间经历了<strong>从空想到科学</strong>、<strong>从理想到现实</strong>、<strong>从一国到多国的发展</strong>，也经历了<strong>从苏东剧变到中国特色社会主义蓬勃兴起</strong>的过程。<strong>从空想到科学</strong>、<strong>从理想到现实</strong>称为社会主义发展史上的两次飞跃</li><li>19世纪初期以<strong>圣西门、傅立叶、欧文</strong>为代表的空想社会主义是科学社会主义的<strong>直接</strong>思想来源。<ul><li>空想社会主义的局限性主要表现在<ul><li>(1) 空想社会主义者只看到了资本主义必然灭亡的命运，却未能揭示资本主义必然灭亡的经济根源必然灭亡的经济根源是：资本主义的基本矛盾</li><li>(2) 他们要求埋葬资本主义，却看不到埋葬资本主义的力量埋葬资本主义的力量是无产阶级</li><li>(3) 他们憧憬取代资本主义的理想社会，却找不到通往理想社会的现实道路通往理想社会的现实道路：无产阶级 革命</li></ul></li></ul></li></ul></li><li>科学社会主义的创立—— #重点<ul><li>马克思、恩格斯在新的历史条件下创立了唯物史观和剩余价值学说，从而<strong>超越</strong>了空想社会主义，<strong>创立</strong>了科学社会主义科学社会主义创立的理论基础是唯物史观和剩余价值学说 马克思在理论上的两大贡献：唯物史观和剩余价值学说 马克思在<strong>哲学史</strong>上的两大贡献 #贡献</li><li>《共产党宣言》的发表，<strong>标志</strong>着<strong>科学社会主义的产生</strong></li></ul></li><li>第一国际和巴黎公社—— #重点马恩就是第一领导人<ul><li>马克思、恩格斯在指导建立无产阶级政党的过程中，阐述了<strong>各国无产阶级政党相互关系</strong>的重要<strong>原则</strong><ul><li>一是坚持无产阶级的国际联合</li><li>二是坚持各国党的独立自主和完全平等</li></ul></li><li>马克思在领导巴黎公社总结出的无产阶级革命的<strong>经验</strong><ul><li>1. 必须打碎旧的国家机器</li><li>2. 建立无产阶级专政的政权</li><li>3. 暴力革命</li><li>4. 无产阶级政党的领导</li></ul></li></ul></li><li>无产阶级革命与俄国的探索—— #重点<ul><li>十月革命是世界历史上划时代的重大事件，产生了深远的历史影响（意义）<ul><li>首先，它将马克思主义关于无产阶级革命的<strong>理论变为现实</strong>；开启了无产阶级革命的新时代，建立了世界上第一个社会主义国家。</li><li>其次，它沉重打击了帝国主义的统治，<strong>鼓舞</strong>了资本主义国家的革命运动。鼓舞无产阶级</li><li>再次，它<strong>激励</strong>了殖民地、半殖民地的民族民主革命，掀起了被压迫民族解放斗争的新高潮。激励被侵略国家</li><li>最后，它促进了马克思列宁主义的传播，<strong>推进了无产阶级政党的建立</strong></li></ul></li><li>列宁领导的苏维埃俄国对社会主义的探索列宁多为褒方面的评价<ul><li>列宁领导的苏维埃俄国对社会主义道路的探索，大体经历了三个时期<ul><li>第一个时期：进一步<strong>巩固</strong>苏维埃政权时期</li><li>第二个时期：外国武装<strong>干涉和国内战争时期</strong>，即战时共产主义时期战时共产主义时期：取消商品货币关系</li><li>第三个时期：由战时共产主义转变为新经济政策时期</li></ul></li><li>新经济政策的特点<ul><li>首先，把建设社会主义作为一个长期探索、不断实践的过程</li><li>其次，把大力发展生产力、提高劳动生产率放在首要地位</li><li>再次，在多种经济成分并存的条件下，利用商品、货币和市场发展经济</li><li>最后，利用资本主义，建设社会主义</li></ul></li><li>列宁努力把马克思主义基本原理同俄国的具体实际相结合，探索出一条适合俄国国情的社会主义道路。这是列宁对马克思主义的重大贡献，也是他留给后人的最宝贵的思想遗产<ul><li>列宁对马克思主义的两大贡献 #贡献<ul><li>把马克思主义的理论同本国国情相结合</li><li></li></ul></li></ul></li></ul></li><li>苏联模式的基本特征包括：斯大林多为贬方面的评价<ul><li>(1) 从经济方面来看，主要是由经济发展战略和经济体制两部分组成。<ul><li>在经济发展战略方面，主要是以高速度发展国民经济为首要任务，以重工业为发展重点，实现从农业国到工业国的转变。与这种发展战略相适应</li><li>在经济体制方面，主要是在所有制结构上形成了单一的生产资料公有制形式，在经济运行中排斥市场机制，完全采用行政手段，形成了过度集中的指令性计划经济模式</li></ul></li><li>(2) 从政治方面来看，主要表现为过度集权的党口国家领导体制，自上而下的干部任命制，软弱而低效的监督机制等</li><li>战时共产主义-&gt;新经济政策-&gt;苏联模式特点上（方便记忆）：战时共产主义：共产主义；新经济政策：类中国改革后；苏联模式：类中国改革前</li></ul></li></ul></li><li>正确把握科学社会主义一般原则的主要内容——#非重点<ul><li>中国特色社会主义是科学社会主义理论逻辑与中国社会发展历史逻辑的辩证统一。它既<strong>坚持了科学社会主义</strong><strong>基本原则</strong>，又根据时代条件和具体国情赋予其鲜明的中国特色，这是中国特色社会主义蓬勃发展的根本原因</li></ul></li><li>社会主义首先在经济文化相对落后的国家取得胜利的主要原因—— #重点列宁的贡献之二<ul><li>第一，经济文化相对落后的国家可以先于发达资本主义国家进入社会主义，是由革命的客观形势和条件所决定的</li><li>第二，经济文化相对落后的国家可以先于发达资本主义国家进入社会主义，并不违背生产关系一定要适应生产力状况的规律</li><li>第三，经济文化相对落后的国家率先进入社会主义，也是历史发展规律作用的结果</li></ul></li></ul></li><li>共产主义社会<ul><li>马克思主义经典作家展望未来社会的科学立场和方法—— #重点马克思主义经典作家：马恩列毛邓<ul><li>1. 在揭示人类社会发展一般规律的基础上指明社会发展的方向</li><li>2. 在剖析资本主义社会旧世界的过程中阐发未来新世界的特点</li><li>3. 在社会主义社会发展中不断深化对未来共产主义社会的认识</li><li>4. 立足于揭示未来社会的一般特征，而<strong>不可能对各种细节作具体描绘</strong></li></ul></li><li>共产主义社会的基本特征—— #重点共产主义社会是无矛盾的和谐社会（<strong>×</strong>）因为：<strong>矛盾</strong>具有<strong>普遍性</strong><ul><li>1. 物质财富极大丰富，消费资料按需分配</li><li>2. 社会关系高度和谐，人们精神境界极大提高</li><li>3. 实现每个人自由而全面的发展，人类从必然王国向自由王国的飞跃</li></ul></li><li>自由是有限制的<ul><li>规律限制：无法跳出规律</li><li>别人的自由限制：自己的自由不能牺牲别人的自由</li></ul></li></ul></li></ul></li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>902</wp:post_id>
		<wp:post_date><![CDATA[2022-10-04 11:59:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-04 03:59:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-04 11:59:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-04 03:59:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%94%bf%e6%b2%bb-%e9%a9%ac%e5%8e%9f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%94%bf%e6%b2%bb"><![CDATA[政治]]></category>
		<category domain="category" nicename="%e7%a0%94"><![CDATA[研]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[181]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[　]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[2976038699@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[111.198.122.244]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-10-15 01:22:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-10-14 17:22:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我的建议是不要白嫖，去幕布点个赞呗]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[new_field_qq]]></wp:meta_key>
			<wp:meta_value><![CDATA[2976038699]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[mail_notify]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[每日一题——RGB]]></title>
		<link>https://blog.zhuanjie.ltd/2022/10/05/day11/</link>
		<pubDate>Wed, 05 Oct 2022 03:00:42 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=917</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>给定两个由RGB组成的字符串，R代表红色，G代表绿色，B代表蓝色。Vasya有色盲症因此他无法分辨蓝色和绿色。问这两个字符串在Vasya眼里是否相同。</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>格式</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>输入格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>输入由多个测试用例组成。第一行包含一个整数t(1≤t≤100)测试用例的数量。测试用例的描述如下：
每个测试用例的第一行包含一个整数n(1≤n≤100)一网格的列数：
以下两行各包含一个字符串，有个字符，每个字符都是R、G或B,分别代表红色、绿色或蓝色单元格。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>输出格式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p id="block-16102515-d3e8-4120-99e7-1b68d9b4fea8">对于每个测试用例，如果Vasya认为网格的两行相同，则输出“YES”,否则输出“NO”。
无论如何，您都可以输出答案（例如，字符串“yEs”、“yes”、“Yes”和“YES”将被识别为正确答案）。</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>样例</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>input
6
2
RG
RB
4
GRBG
GBGB
5
GGGGG
BBBBB
7
BBBBBBB
RRRRRRR
8
RGBRRGBR
RGGRRBGR
1
G
G

output
YES
NO
YES
NO
YES
YES


Note
在第一个测试用例中，Vasya认为每行的第二个单元格相同，因为第一行的第二个单元格是绿色的，第二行的第二个单元格是蓝色的，所以他无法区分这两个单元格。其余的行在颜色上是相等的。因此，Vasya会说这两行颜色相同，即使它们实际上并不相同。
在第二个测试用例中，Vasya可以看到这两行是不同的。
在第三个测试用例中，每个细胞都是绿色或蓝色的，所以Vasya会认为它们是一样的。</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>代码及结果</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>代码</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>/*
 * @Author: 转接
 * @Date: 2022-10-05 10:13:21
 * @LastEditors: 转接
 * @LastEditTime: 2022-10-05 10:40:08
 * @Description: RGB
 */
/*
day11

每日一题——RGB

给定两个由RGB组成的字符串，R代表红色，G代表绿色，B代表蓝色。Vasya有色盲症因此他无法分辨蓝色和绿色。问这两个字符串在Vasya眼里是否相同。
*/

#include &lt;iostream&gt;
using namespace std;
char fotmat0(char a){
    if(a &gt; 90){
        return a-('z'-'Z');
    }
    return a;
}

bool judge(char a, char b){
    if(fotmat0(a) == fotmat0(b)){
        return true;
    }
    if(fotmat0(a) != 'R' &amp;&amp; fotmat0(b) != 'R'){
        return true;
    }
    return false;
}

int main() {
    int t; // 测试样例数量
    cin &gt;&gt; t;
    bool result&#91;t];
    if (t &lt;= 0 || t &gt; 100) { // 问题规模
        return -1;
    }
    for (int i = 0; i &lt; t; i++){ // core
        int n; // 每个测试样例一行的个数
        cin &gt;&gt; n;
        char arr1&#91;n], arr2&#91;n];
        cin &gt;&gt; arr1;
        cin &gt;&gt; arr2;
        int j = 0;
        for(; j &lt; n; j++){
            if(!judge(arr1&#91;j],arr2&#91;j])){
                result&#91;i] = 0;
                break;
            }
        }
        if(j == n){
            result&#91;i] = 1;
        }
    }

    for (int i = 0; i &lt; t; i++){ // 输出
        if(result&#91;i]){
            cout &lt;&lt; "YES" &lt;&lt; endl;
        } else{
            cout &lt;&lt; "NO" &lt;&lt; endl;
        }
    }
    return 0;
}
</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>运行结果</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>6
2
RG
RB
4
GRBG
GBGB
5
GGGGG
BBBBB
7
BBBBBBB
RRRRRRR
8
RGBRRGBR
RGGRRBGR
1
G
G
YES
NO
YES
NO
YES
YES</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>TODO</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>判读函数逻辑可以优化：可以将所有字符串组合后判断ASCII差值，取出不符合区间</li><li>如果将arr数组变为二维，输入会影响result数组<ul><li><img class="wp-image-918" style="width: 800px;" src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/image.png" alt=""></li><li><img class="wp-image-920" style="width: 1000px;" src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/10/image-1.png" alt=""></li></ul></li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>917</wp:post_id>
		<wp:post_date><![CDATA[2022-10-05 11:00:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-05 03:00:42]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-05 11:00:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-05 03:00:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[day11]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[107]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[随机图片API]]></title>
		<link>https://blog.zhuanjie.ltd/2022/10/08/random_api/</link>
		<pubDate>Sat, 08 Oct 2022 12:59:43 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=956</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" href="https://img.xjh.me/" target="_blank">岁月小筑随机图片API接口</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#https调用
https:&#47;&#47;img.xjh.me/random_img.php
#http调用
http://img.xjh.me/random_img.php</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="http://img.xjh.me/random_img.php" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" href="https://img.r10086.com/" target="_blank">樱道随机图片API</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#接口略多，自己去官网看把
<a href="https://api.r10086.com/img-api.php?type=%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%881">https://api.r10086.com/img-api.php?type=%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%881</a></code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://api.r10086.com/img-api.php?type=%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%881" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" href="https://api.btstu.cn/doc/sjbz.php" target="_blank">搏天api</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>请求方式：get
请求地址：https://api.btstu.cn/sjbz/api.php
返回格式：json/images
请求示例：https://api.btstu.cn/sjbz/api.php?lx=dongman&amp;format=images</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://api.btstu.cn/sjbz/api.php?lx=dongman&amp;format=images" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" href="https://api.ixiaowai.cn/" target="_blank">小歪API</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>图片API基本调用格式：
<a href="https://api.ixiaowai.cn/api/api.php">https://api.ixiaowai.cn/api/api.php</a>（二次元动漫）
<a href="https://api.ixiaowai.cn/mcapi/mcapi.php">https://api.ixiaowai.cn/mcapi/mcapi.php</a>（mc酱动漫）
<a href="https://api.ixiaowai.cn/gqapi/gqapi.php">https://api.ixiaowai.cn/gqapi/gqapi.php</a>（高清壁纸）

JSON调用格式
图片列：<a href="https://api.ixiaowai.cn/api/api.php?return=json">https://api.ixiaowai.cn/api/api.php?return=json</a>
文字列：<a href="https://api.ixiaowai.cn/ylapi/index.php/?code=js">https://api.ixiaowai.cn/ylapi/index.php/?code=js</a>

JSON数据
{
    "code":"200" #图片状态码
    "acgurl":"https:\/\/ws1.sinaimg.cn\/large\/0072Vf1pgy1foxkjcneg1j31kw0w0hbs.jpg" #图片地址
    "width":"2048" #图片宽
    "height":"1152" #图片高
}

文字API基本调用格式：
<a href="https://api.ixiaowai.cn/ylapi/index.php">https://api.ixiaowai.cn/ylapi/index.php</a>（一言语录）
<a href="https://api.ixiaowai.cn/tgrj/index.php">https://api.ixiaowai.cn/tgrj/index.php</a>（舔狗日记）

二维码API基本调用格式：
https:&#47;&#47;api.ixiaowai.cn/ewm（网址转二维码）</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://api.ixiaowai.cn/api/api.php" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column {"width":"100%"} -->
<div class="wp-block-column" style="flex-basis:100%"><!-- wp:group -->
<div class="wp-block-group"><!-- wp:paragraph -->
<p>一言</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<iframe src="https://api.ixiaowai.cn/ylapi/index.php" scrolling="no"></iframe>
<!-- /wp:html -->

<!-- wp:paragraph -->
<p>舔狗语录</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<iframe src="https://api.ixiaowai.cn/tgrj/index.php" scrolling="no"></iframe>
<!-- /wp:html --></div>
<!-- /wp:group --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" href="https://api.mtyqx.cn/" target="_blank">墨天逸API</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>API基本调用格式：
<a href="https://api.mtyqx.cn/api/random.php">https://api.mtyqx.cn/api/random.php</a>（二次元动漫）丨<a href="https://api.mtyqx.cn/tapi/random.php">https://api.mtyqx.cn/tapi/random.php</a>（二次元动漫）

参数：
type=json

JSON调用格式
列：<a href="https://api.mtyqx.cn/api/random.php?return=json">https://api.mtyqx.cn/api/random.php?return=json</a> 丨<a href="https://api.mtyqx.cn/tapi/random.php?return=json">https://api.mtyqx.cn/tapi/random.php?return=json</a>

JSON数据
{
    "code":"200" #图片状态码
    "acgurl":"https:\/\/ws1.sinaimg.cn\/large\/0072Vf1pgy1foxkjcneg1j31kw0w0hbs.jpg" #图片地址
    "width":"2048" #图片宽
    "height":"1152" #图片高
}</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://api.mtyqx.cn/api/random.php" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" href="https://api.isoyu.com/" target="_blank">姬长信API</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#emmm接口嘎嘎多，自己去看官方文档把</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://api.isoyu.com/bing_images.php" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a rel="noreferrer noopener" href="https://unsplash.com/developers" target="_blank">Unsplash Image API</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>官方文档：<a href="https://unsplash.com/documentation#get-a-random-photo">https://unsplash.com/documentation#get-a-random-photo</a>
接口：https://source.unsplash.com/random/
Get /photos/random</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://source.unsplash.com/random/1280x720" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a href="https://acg.sx/images">后宫漫图</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>直接使用该站URL即可：<a href="https://acg.sx/images">https://acg.sx/images</a></code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://acg.sx/images" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a href="https://www.dmoe.cc/">樱花API</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>API基本调用格式：
<a href="https://www.dmoe.cc/random.php">https://www.dmoe.cc/random.php</a>

参数：
type=json

JSON调用格式
<a href="https://www.dmoe.cc/random.php?return=json">https://www.dmoe.cc/random.php?return=json</a>

JSON数据
{
    "code":"200" #图片状态码
    "acgurl":"https:\/\/ws1.sinaimg.cn\/large\/0072Vf1pgy1foxkfy08umj31kw0w0nng.jpg" #图片地址
    "width":"2048" #图片宽
    "height":"1152" #图片高
}</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://www.dmoe.cc/random.php" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a href="https://www.dmoe.cc/random.php">EEEDOG</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>API地址
https:&#47;&#47;api.yimian.xyz/img


随机二次元图片
GET/POST /img?type=moe
示例：https://api.yimian.xyz/img?type=moe

随机Bing壁纸
GET/POST /img?type=wallpaper
示例：https://api.yimian.xyz/img?type=wallpaper

随机二次元头像
GET/POST /img?type=head
示例：https://api.yimian.xyz/img?type=head

随机图床图片
GET/POST /img?type=imgbed
示例：https://api.yimian.xyz/img?type=imgbed

随机1920x1080尺寸二次元图片
GET/POST /img?type=moe&amp;size=1920x1080
示例：https://api.yimian.xyz/img?type=moe&amp;size=1920x1080</code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://api.yimian.xyz/img" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2><a href="https://img.paulzzh.com/">东方ProjectAPI</a></h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code><a href="https://img.paulzzh.com/touhou/random">https://img.paulzzh.com/touhou/random</a></code></pre>
<!-- /wp:code -->

<!-- wp:image {"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://img.paulzzh.com/touhou/random" alt="当你看到了这句话就说明这个API没啦！"/></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>956</wp:post_id>
		<wp:post_date><![CDATA[2022-10-08 20:59:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-10-08 12:59:43]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-10-08 20:59:43]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-10-08 12:59:43]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[random_api]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e5%85%b6%e4%bb%96"><![CDATA[其他]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[88]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f5197c0aa03c318e6a7e76c6b0b953d6]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_877eeba63038a10013c2e04a8f0609a3]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_804a4ecd8183bd84f3ec45c9ae7275ab]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_8d8ed902fd041b72b81be3b1cbd77148]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_e177caa2a704bb350580c31939ec4363]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_57c86ef1d74ade2e62cbe086d1aa027a]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Ubuntu开启crontab执行日志]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/09/ubuntu%e5%bc%80%e5%90%afcrontab%e6%89%a7%e8%a1%8c%e6%97%a5%e5%bf%97/</link>
		<pubDate>Fri, 09 Dec 2022 07:45:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=1027</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Ubuntu默认不开启crontab的日志，但是在启动项里面有注释</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>未开启状态时，日志文件夹是这样的：</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1028,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image-1024x100.png" alt="" class="wp-image-1028"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>开启方式</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><!-- wp:list-item -->
<li>编辑 <code>/etc/rsyslog.d/50-default.conf</code> 文件</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>取消注释 <code>cron.* /var/log/cron.log</code> 这一行</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>保存文件后运行 <code>sudo service rsyslog restart</code> 重启日志服务</li>
<!-- /wp:list-item -->

<!-- wp:list-item -->
<li>之后crontab运行的日志就放在 <code>/var/log/cron.log</code> 里面了</li>
<!-- /wp:list-item --></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>运行日志</h2>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>root@22-12-9-0643:~# sudo vim /etc/rsyslog.d/50-default.conf
root@22-12-9-0643:~# sudo service rsyslog restart</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>说明</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>crontab所有作业均由外壳执行，因此需要过命令启动该外壳片段以更改目录，如每10分钟在 <code>/root/DDNS/src</code> 下运行 <code>python3 DDNS.py</code>则需在crontab中写成：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>*/10 *  * * *   cd /root/DDNS/src/ &amp;&amp; python3 /root/DDNS/src/DDNS.py</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1027</wp:post_id>
		<wp:post_date><![CDATA[2022-12-09 15:45:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-09 07:45:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-09 16:19:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-09 08:19:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu%e5%bc%80%e5%90%afcrontab%e6%89%a7%e8%a1%8c%e6%97%a5%e5%bf%97]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[41]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[动态ip配置阿里云DDNS]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/09/%e5%8a%a8%e6%80%81ip%e9%85%8d%e7%bd%ae%e9%98%bf%e9%87%8c%e4%ba%91ddns/</link>
		<pubDate>Fri, 09 Dec 2022 08:15:58 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=1032</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>使用仓库：<a href="https://github.com/mgsky1/DDNS">利用Python+阿里云云解析API实现DDNS (github.com)</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>仓库文件：<a rel="noreferrer noopener" href="https://cloudreve.zhuanjie.ltd/s/OKCP" target="_blank">https://cloudreve.zhuanjie.ltd/s/OKCP</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>家庭等动态ip绑定域名需要实时更新域名指向的ip</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>准备工作</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在阿里云控制台创建一个拥有使用DNS解析权限的AccessKey，记住AccessKeyId和AccessKeySecret，所需权限如下图</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1033,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image-1-1024x460.png" alt="" class="wp-image-1033"/></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>开始安装</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>服务器端需要<code>python3</code>和<code>aliyun-python-sdk-core</code>库，在服务器上运行：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>sudo apt install python3 python3-pip -y
sudo pip3 install aliyun-python-sdk-core</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>在服务器上下载文件并解压或直接git拉去</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>git clone https://github.com/mgsky1/DDNS.git</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>编辑配置文件</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>vim ./DDNS/src/config.json</code></pre>
<!-- /wp:code -->

<!-- wp:code -->
<pre class="wp-block-code"><code>{
    "AccessKeyId": "Your_AccessKeyId",//你的阿里云AccessKeyId
    "AccessKeySecret": "Your_AccessKeySecret",//你的阿里云AccessKeySecret
    "First-level-domain": "Your_First-level-domain",//一级域名，例如 example.com
    "Second-level-domain": "Your_Second-level-domain"//二级域名，例如 ddns.example.com 填入ddns即可
}</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>最后运行即可</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>成功案例：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>root@22-12-9-0643:~/DDNS/src# python3 DDNS.py 
{'type': 'A', 'ip': '##.##.##.##'}
成功！</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>失败案例：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>root@instance-20221206-1430:~/DDNS/src# python3 DDNS.py 
{'type': 'A', 'ip': '##.##.##.##'}
失败！原因为
The DNS record already exists.
可参考:https://help.aliyun.com/document_detail/29774.html?spm=a2c4g.11186623.2.20.fDjexq#%E9%94%99%E8%AF%AF%E7%A0%81
或阿里云帮助文档</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>此处为已经存在相同名称相同ip的解析</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1032</wp:post_id>
		<wp:post_date><![CDATA[2022-12-09 16:15:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-09 08:15:58]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-14 15:59:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-14 07:59:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%8a%a8%e6%80%81ip%e9%85%8d%e7%bd%ae%e9%98%bf%e9%87%8c%e4%ba%91ddns]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://blog.zhuanjie.ltd/2022/02/13/wp-global-styles-twentyseventeen/</link>
		<pubDate>Sun, 13 Feb 2022 09:51:55 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/2022/02/13/wp-global-styles-twentyseventeen/</guid>
		<description></description>
		<content:encoded><![CDATA[{"version": 2, "isGlobalStylesUserThemeJSON": true }]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date><![CDATA[2022-02-13 17:51:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-13 09:51:55]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-02-13 17:51:55]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-02-13 09:51:55]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-twentyseventeen]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="twentyseventeen"><![CDATA[twentyseventeen]]></category>
						</item>
					<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://blog.zhuanjie.ltd/2022/04/01/wp-global-styles-twentytwentytwo/</link>
		<pubDate>Fri, 01 Apr 2022 07:19:01 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/2022/04/01/wp-global-styles-twentytwentytwo/</guid>
		<description></description>
		<content:encoded><![CDATA[{"version":2,"isGlobalStylesUserThemeJSON":true}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>527</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 15:19:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 07:19:01]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 15:19:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 07:19:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-twentytwentytwo]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="twentytwentytwo"><![CDATA[twentytwentytwo]]></category>
						</item>
					<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://blog.zhuanjie.ltd/2022/04/01/wp-global-styles-nisarg/</link>
		<pubDate>Fri, 01 Apr 2022 09:00:23 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/2022/04/01/wp-global-styles-nisarg/</guid>
		<description></description>
		<content:encoded><![CDATA[{"version": 2, "isGlobalStylesUserThemeJSON": true }]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>598</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 17:00:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 09:00:23]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 17:00:23]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 09:00:23]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-nisarg]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="nisarg"><![CDATA[nisarg]]></category>
						</item>
					<item>
		<title><![CDATA[导航]]></title>
		<link>https://blog.zhuanjie.ltd/2022/04/01/%e5%af%bc%e8%88%aa/</link>
		<pubDate>Fri, 01 Apr 2022 09:01:29 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/2022/04/01/%e5%af%bc%e8%88%aa/</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:page-list /-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>600</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 17:01:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 09:01:29]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 17:01:29]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 09:01:29]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%af%bc%e8%88%aa]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_navigation]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title><![CDATA[导航]]></title>
		<link>https://blog.zhuanjie.ltd/2022/04/01/%e5%af%bc%e8%88%aa-2/</link>
		<pubDate>Fri, 01 Apr 2022 09:01:30 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/2022/04/01/%e5%af%bc%e8%88%aa-2/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>602</wp:post_id>
		<wp:post_date><![CDATA[2022-04-01 17:01:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-04-01 09:01:30]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-04-01 17:01:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-04-01 09:01:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%af%bc%e8%88%aa-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_navigation]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														</item>
					<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://blog.zhuanjie.ltd/2022/07/08/wp-global-styles-sakurairo-2-5-0-3/</link>
		<pubDate>Fri, 08 Jul 2022 02:36:24 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/2022/07/08/wp-global-styles-sakurairo-2-5-0-3/</guid>
		<description></description>
		<content:encoded><![CDATA[{"version": 2, "isGlobalStylesUserThemeJSON": true }]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>689</wp:post_id>
		<wp:post_date><![CDATA[2022-07-08 10:36:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-07-08 02:36:24]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-07-08 10:36:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-07-08 02:36:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-sakurairo-2-5-0-3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="sakurairo-2-5-0-3"><![CDATA[Sakurairo-2.5.0.3]]></category>
						</item>
					<item>
		<title><![CDATA[Custom Styles]]></title>
		<link>https://blog.zhuanjie.ltd/2022/09/20/wp-global-styles-sakurairo-2-5-1-1/</link>
		<pubDate>Tue, 20 Sep 2022 09:37:39 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">http://blog.zhuanjie.ltd/2022/09/20/wp-global-styles-sakurairo-2-5-1-1/</guid>
		<description></description>
		<content:encoded><![CDATA[{"version": 2, "isGlobalStylesUserThemeJSON": true }]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>816</wp:post_id>
		<wp:post_date><![CDATA[2022-09-20 17:37:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-09-20 09:37:39]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-09-20 17:37:39]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-09-20 09:37:39]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[wp-global-styles-sakurairo-2-5-1-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[wp_global_styles]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="wp_theme" nicename="sakurairo-2-5-1-1"><![CDATA[Sakurairo-2.5.1.1]]></category>
						</item>
					<item>
		<title><![CDATA[Ubuntu下x-ui面板搭建]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/09/ubuntu%e4%b8%8bx-ui%e9%9d%a2%e6%9d%bf%e6%90%ad%e5%bb%ba/</link>
		<pubDate>Fri, 09 Dec 2022 08:45:50 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=1044</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>原始仓库：<a href="https://github.com/vaxilu/x-ui" target="_blank" rel="noreferrer noopener">https://github.com/vaxilu/x-ui</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>介绍</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>x-ui面板支持vmess、vless、trojan、shadowsocks、dokodemo-door、socks、http等协议</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>安装准备</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>安装面板需要关闭防火墙，运行：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>sudo iptables -P INPUT ACCEPT
sudo iptables -P FORWARD ACCEPT
sudo iptables -P OUTPUT ACCEPT
sudo iptables -F</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>卸载netfilter-persistent</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>apt-get purge netfilter-persistent</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>删除iptables并重启服务器</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>rm -rf /etc/iptables &amp;&amp; reboot</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>开始安装</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>自动安装</h3>
<!-- /wp:heading -->

<!-- wp:code -->
<pre class="wp-block-code"><code>bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":3} -->
<h3>手动安装</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>从release页面下载最新安装包，并且上传至<code>/root/</code>文件夹并且解压，运行：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>cd /root/
rm x-ui/ /usr/local/x-ui/ /usr/bin/x-ui -rf
tar zxvf x-ui-linux-amd64.tar.gz # 替换为你对应设备的对应压缩包
chmod +x x-ui/x-ui x-ui/bin/xray-linux-* x-ui/x-ui.sh
cp x-ui/x-ui.sh /usr/bin/x-ui
cp -f x-ui/x-ui.service /etc/systemd/system/
mv x-ui/ /usr/local/
systemctl daemon-reload
systemctl enable x-ui
systemctl restart x-ui</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>开始使用</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>使用安装时的<code>ip:端口</code>或者<code>域名:端口</code>进入面板</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":1045,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/image-2-1024x384.png" alt="" class="wp-image-1045"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>入站列表中添加结点</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>特殊说明</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>tls支持密钥+公钥文件或者直接输入，可用acme申请</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1044</wp:post_id>
		<wp:post_date><![CDATA[2022-12-09 16:45:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-09 08:45:50]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-09 16:45:50]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-09 08:45:50]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu%e4%b8%8bx-ui%e9%9d%a2%e6%9d%bf%e6%90%ad%e5%bb%ba]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[每日一题——最大差值]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/10/%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98-%e6%9c%80%e5%a4%a7%e5%b7%ae%e5%80%bc/</link>
		<pubDate>Sat, 10 Dec 2022 14:21:44 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=1047</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>题目</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在数组中，某个数字减去它右边的数字得到一个数对之差。求所有数对之差的最大值。 例如，在数组｛2，4，1，16，7，5，11，9｝中，数对之差的最大值是11，是16减去5的结果。 给出一个数组，求其满足要求的最大差值</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>解答</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>方法1（存在问题）</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>采用两个指针进行扫描，前指针往后扫描，后指针往前扫描；前指针只停留在后一个比指针指向的大的数字上，后指针只停留在前一个比指针大的数字上；</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>前指针上的数字减去后指针上的数字与储存值进行判断取其大值</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>当两个前指针大于等于后指针时候结束</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int maxDif(int *arr, int n){ // arr表示数组，n表示数组长度
    int i = 0, j = n-1, temp = arr&#91;i] - arr&#91;j];
    while(i &lt; j){
        while(arr&#91;i] &lt;= arr&#91;i+1]){
            i++;
        }
        while(arr&#91;j] >= arr&#91;j-1]){
            j--;
        }
        if(i &lt; j &amp;&amp; arr&#91;i] - arr&#91;j] > temp){
            temp = arr&#91;i] - arr&#91;j];
        }
        i++;
        j--;
    }
    return temp;
}</code></pre>
<!-- /wp:code -->

<!-- wp:heading {"level":4} -->
<h4>存在的问题</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>出现类似{5, 4, 6, 3, 2, 1}的数组将会丢失信息</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>方法2</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>把数组分成两个子数组，其实没有必要拿左边子数组中较小的数字去和右边子数组中较大的数字相减。可以想象，数对之差的最大值只可能是下面三种情况之一：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>①被减数和减数都在 第一个子数组中，即第一个子数组中的数对之差的最大值；②被减数和减数都在第二个子数组中，即第二个子数组中数对之差的最大值；③被减数在第一个子数组中，是第一个子数组的最大值。减数在第二个子数组中，是第二个子数组的最小值。这三个差值的最大者就是整个数组中数对之差的最大值。在前面提到的三种情况中，得到第一个子数组的最大值和第二子数组的最小值不是一件难事，但如何得到两个子数组中的数对之差的最大值？这其实是原始问题的子问题，可以递归地解决。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int core(int* start, int* end, int* max, int* min){ // core function
    if(end == start){ // if the array is empty
        *max = *min = *start; // set max and min to the only element
        return 0;
    }
    int* mid = start + (end - start) / 2; // find the middle of the array
    int maxLeft, minLeft, maxRight, minRight; // declare variables for the max and min of the left and right subarrays
    int leftDiff = core(start, mid, &amp;maxLeft, &amp;minLeft); // find the max and min of the left subarray
    int rightDiff = core(mid + 1, end, &amp;maxRight, &amp;minRight); // find the max and min of the right subarray
    int crossDiff = maxRight - minLeft; // find the difference between the max of the right subarray and the min of the left subarray
    *max = (maxLeft > maxRight)? maxLeft : maxRight; // set max to the max of the left and right subarrays
    *min = (minLeft &lt; minRight)? minLeft : minRight; // set min to the min of the left and right subarrays
    int maxDiff = (leftDiff > rightDiff)? leftDiff : rightDiff; // set maxDiff to the max of the left and right differences
    maxDiff = (maxDiff > crossDiff)? maxDiff : crossDiff; // set maxDiff to the max of the maxDiff and the crossDiff
    return maxDiff; // return the max difference
}

int maxDif(int* arr, int n){ // arr表示数组，n表示数组长度
    if(arr == NULL || n &lt;= 2){
        return 0;
    }
    int max, min;
    return core(arr, arr + n - 1, &amp;max, &amp;min);
}</code></pre>
<!-- /wp:code -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph --><cite>此处注释由Copilot生成</cite></blockquote>
<!-- /wp:quote -->

<!-- wp:heading {"level":3} -->
<h3>方法3</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>动态规划，定义diff[i]是以数组中第i个数字为减数的所有数对之差的最大值。也就是说，对于任意h(h&lt;i), diff[i] ≥ arr[h] - arr[i]。diff[i] (0≤i&lt;n) 的最大值就是整个数组最大的数对之差。假设已求出diff[i]，如何求dififf[i+1]?对于diff[i]，肯定存在一个h(h&lt;i)，满足 arr[h]减 去number[i]之差是最大的，即arr[h]应是arr[i]之前的所有数字的最大值。求diff[i+1]时，需要找到第i＋1个数字之前的最大值。第i＋1个数字之前的最大值只有两种可能：这个最大值可能是第i个数字之前的最大值，也可能是第i个数字。第i＋1个数字之前的最大值肯定是这两者的较大者。我们只要拿第i＋1个数字之前的最大值减去 arr[i＋1]，就得到了 diff[i＋1]。</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>int maxDif(int* arr, int n){ // arr表示数组，n表示数组长度
    if(arr == NULL || n &lt;= 2){
        return 0;
    }
    int max = arr&#91;0]; // 第i个元素之前的最大值
    int maxDiff = arr&#91;0] - arr&#91;1]; // 最大差值
    for(int i = 2; i &lt; n; i++){
        if(arr&#91;i-1] > max){ // 第i个数和之前最大的数字比较，更新max
            max = arr&#91;i-1];
        }
        int curDiff = max - arr&#91;i];
        if(curDiff > maxDiff){
            maxDiff = curDiff;
        }
    }
    return maxDiff;
}</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1047</wp:post_id>
		<wp:post_date><![CDATA[2022-12-10 22:21:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-10 14:21:44]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-10 22:21:44]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-10 14:21:44]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98-%e6%9c%80%e5%a4%a7%e5%b7%ae%e5%80%bc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c"><![CDATA[C]]></category>
		<category domain="category" nicename="c-2"><![CDATA[C++]]></category>
		<category domain="category" nicename="%e6%af%8f%e6%97%a5%e4%b8%80%e9%a2%98"><![CDATA[每日一题]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[浅读算法导论——3.1渐近记号]]></title>
		<link>https://blog.zhuanjie.ltd/2022/12/26/%e6%b5%85%e8%af%bb%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba-3-1%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7/</link>
		<pubDate>Mon, 26 Dec 2022 09:08:31 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=1058</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>渐近记号适用于函数，Θ(n<sup>2</sup>)就是函数an<sup>2</sup>+bn+c。渐近记号适用于刻画算法运行时间、算法使用的空间数量等的函数</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>O(1)&lt;O(log<sub>2</sub>(n))&lt;O(n)&lt;O(nlog<sub>2</sub>(n))&lt;O(n<sup>2</sup>)&lt;O(2<sup>n</sup>)&lt;O(n!)&lt;O(n<sup>n</sup>)</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Θ记号、O记号、Ω记号</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":1067,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MTc0NjE0MjE4-1024x328.png" alt="" class="wp-image-1067"/></figure>
<!-- /wp:image -->

<!-- wp:heading {"level":3} -->
<h3>Θ记号</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Θ记号限制一个函数在常量因子内，对所有n≥n<sub>0</sub>时，函数f(n)在一个常量因子内等于g(n)，我们称g(n)是f(n)的一个<strong>渐近紧确界</strong></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>定义</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>对一个给定的函数g(n)，用Θ(g(n))表示以下函数集合</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><!-- wp:paragraph -->
<p><code>Θ(g(n)) = {f(n) | 存在正常量c<sub>1</sub>，c<sub>2</sub>和n<sub>0</sub>，使得对于所有的n≥n<sub>0</sub>，有0≤c<sub>1</sub>g(n)≤f(n)≤c<sub>2</sub>g(n)}</code></p>
<!-- /wp:paragraph --></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>若存在正常量c<sub>1</sub>和c<sub>2</sub>，使得对于足够大的n，函数f(n)能夹入c<sub>1</sub>g(n)和c<sub>2</sub>g(n)之间，则f(n)属于集合Θ(g(n))。所以可以记<code>f(n)∈Θ(g(n))</code>，通常记为<code>f(n)=Θ(g(n))</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>我们称g(n)是f(n)的一个<strong>渐进紧确界</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Θ(g(n))的定义要求每个成员f(n)∈Θ(g(n))<strong>均渐近非负</strong>，即当n足够大时，f(n)非负，否则集合Θ(g(n))为空</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>非形式化概念</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>对于Θ记号的非形式化概念：扔掉低阶项，并忽略最高项前的系数</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>原因：当n足够大时，即使最高项的一个很小的部分都足够支配所有的低级项</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>e.g.证明(1/2)n<sup>2</sup>-3n=Θ(n<sup>2</sup>)
解：根据Θ记号定义，假设存在<span style="background-color: initial; font-family: inherit; font-size: inherit; color: initial;">c</span><sub style="background-color: initial; font-family: inherit; color: initial;">1</sub><span style="background-color: initial; font-family: inherit; font-size: inherit; color: initial;">，c</span><sub style="background-color: initial; font-family: inherit; color: initial;">2</sub><span style="background-color: initial; font-family: inherit; font-size: inherit; color: initial;">和n</span><sub style="background-color: initial; font-family: inherit; color: initial;">0</sub>使得对所有的<span style="background-color: initial; font-family: inherit; font-size: inherit; color: initial;">n≥n</span><sub style="background-color: initial; font-family: inherit; color: initial;">0</sub><span style="background-color: initial; font-family: inherit; font-size: inherit; color: initial;">，有</span>：
    0 ≤ c<sub>1</sub>n<sup>2</sup> ≤ (1/2)n<sup>2</sup>-3n ≤ c<sub>2</sub>n<sup>2</sup>
    两边同时除以n<sup>2</sup>得：
    c<sub>1</sub> ≤ (1/2)-(3/n) ≤ c<sub>2</sub>
    对于c<sub>1</sub>=1/14， c<sub>2</sub>=1/2， <span style="background-color: initial; font-family: inherit; font-size: inherit; color: initial;">n</span><sub style="background-color: initial; font-family: inherit; color: initial;">0</sub>=7时，不等式恒成立，原式得证。</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>对于任意二次函数f(n)=an<sup>2</sup>+bn+c，其中a、b和c均为常量且a&gt;0。根据非形式化概念可得f(n)=Θ(n<sup>2</sup>)，证明时取<code>c<sub>1</sub>=a/4</code>， <code>c<sub>2</sub>=7a/4</code>， <code>n<sub>0</sub>=2*max{ |b|/a, √(|c|/a) }</code>，可证明对于所有的n≥n<sub>0</sub>，有0≤c<sub>1</sub>n<sup>2</sup>≤an<sup>2</sup>+bn+c≤c<sub>2</sub>n<sup>2</sup></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>O记号</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>O记号为函数给出一个在常量因子内的上界</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>定义</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Θ记号渐进地给出一个函数的上界和下界，当只有一个<strong>渐进上界</strong>时，用O记号表示</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><!-- wp:paragraph -->
<p><code>O(g(n)) = {f(n) | 存在正常量c和n<sub>0</sub>，使得对于所有的n≥n<sub>0</sub>，有0≤f(n)≤cg(n)}</code></p>
<!-- /wp:paragraph --></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>对在n<sub>0</sub>及其右边的所有值n，函数f(n)的值总小于或等于cg(n)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n)=Θ(g(n))里面蕴含着f(n)=O(g(n))，在集合中有Θ(g(n))⊆O(g(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对于任意二次函数an<sup>2</sup>+bn+c，其中a&gt;0，在Θ(n<sup>2</sup>)中的证明也证明了在O(n<sup>2</sup>)中</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ESP.当a&gt;0时，对于任意线性函数an+b也在O(n<sup>2</sup>)中，证明取<code>c=a+|b|</code>，<code>n<sub>0</sub>=max{ 1, -b/a }</code>，有(a+|b|)n<sup>2</sup> ≥ an+b ≥ 0</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>我们仅仅要求g(n)的某个常量倍数是f(n)的渐进上界，而不是要求他是一个多么紧确的上界</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>O记号是描述上界的，当它用来限制算法的最坏情况运行时间，我们说运行时间为O(n<sup>2</sup>)时，指的是存在一个O(n<sup>2</sup>)的函数f(n)，使得对于n的任意值，不管选择什么特定的规模为n的输入，运行时间上界都是f(n)，也就是说最坏情况运行时间是O(n<sup>2</sup>)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Ω记号</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Ω记号为函数给出一个在常量因子内的下界</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>定义</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Ω记号提供了<strong>渐进下界</strong></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><!-- wp:paragraph -->
<p><code>Ω(g(n)) = {f(n) | 存在正常量c和n<sub>0</sub>，使得对于所有的n≥n<sub>0</sub>，有0≤cg(n)≤f(n)}</code></p>
<!-- /wp:paragraph --></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>对在n<sub>0</sub>及其右边的所有值n，函数f(n)的值总大于或等于cg(n)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>对于任意两个函数f(n)和g(n)，有：<code>f(n)=Θ(g(n))⇔f(n)=O(g(n))且f(n)=Ω(g(n))</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>等式中的渐进记号</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>当渐进记号独立于等式（或不等式）的右边时，表示集合成员关系</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>e.g.n=O(n<sup>2</sup>)表示n∈O(n<sup>2</sup>)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>当渐进记号出现于某个公式里时，它表示某个我们不关注名称的匿名函数</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>e.g.公式2n<sup>2</sup>+3n+1=2n<sup>2</sup>+Θ(n)表示2n<sup>2</sup>+3n+1=2n<sup>2</sup>+f(n)，其中f(n)为我们不需要关注的匿名函数</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>渐进记号出现在等式左边表示无论怎样选择等号左边的匿名函数，总有一种办法来选择等号右边的匿名函数使得等号成立。对于任意函数f(n)∈Θ(n)，存在某个函数g(n)∈Θ(n<sup>2</sup>)，使得对于所有的n有2n<sup>2</sup>+f(n)=g(n)，即等式右边比等式左边提供的细节更粗糙</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>e.g.2n<sup>2</sup>+3n+1 = 2n<sup>2</sup>+Θ(n) = Θ(n<sup>2</sup>)</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>o记号和ω记号</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>o记号</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>由O记号提供的渐进上界可能是也可能不是渐进紧确的。如界2n<sup>2</sup>=O(n<sup>2</sup>)是渐进紧确的，但是2n=O(n<sup>2</sup>)不是</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":4} -->
<h4>定义</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>o记号表示<strong>非渐进紧确</strong>的上界</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><!-- wp:paragraph -->
<p><code>o(g(n)) = {f(n) | 存在正常量c和n<sub>0</sub>，使得对于所有的n≥n<sub>0</sub>，有0≤f(n)≤cg(n)}</code></p>
<!-- /wp:paragraph --></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>当n趋向于无穷时，函数f(n)相对于g(n)来说变得微不足道了</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1077,"width":150,"height":62,"sizeSlug":"medium","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-medium is-resized"><img src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044474587-300x123.png" alt="" class="wp-image-1077" width="150" height="62"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>ω记号</h3>
<!-- /wp:heading -->

<!-- wp:heading {"level":4} -->
<h4>定义</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>ω记号来表示非渐进紧确的下界，定义方式是：f(n)∈ω(g(n))当且仅当g(n)∈o(f(n))</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><!-- wp:paragraph -->
<p><code>ω(g(n)) = {f(n) | 存在正常量c和n<sub>0</sub>，使得对于所有的n≥n<sub>0</sub>，有0≤cg(n)≤f(n)}</code></p>
<!-- /wp:paragraph --></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>例如，n<sup>2</sup>/2=ω(n)，但是n2/<sup>2</sup>≠ω(n<sup>2</sup>)，关系f(n)=ω(g(n))蕴含着</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","id":1078,"width":150,"height":57,"sizeSlug":"medium","linkDestination":"none"} -->
<figure class="wp-block-image aligncenter size-medium is-resized"><img src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/MommyTalk1672044553642-300x114.png" alt="" class="wp-image-1078" width="150" height="57"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>渐近记号Θ、Ο、Ω、o、ω之间的关系</h2>
<!-- /wp:heading -->

<!-- wp:image {"id":1070,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="https://blog.zhuanjie.ltd/wp-content/uploads/2022/12/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTYxMTI2MjE0OTM0NTk4.png" alt="" class="wp-image-1070"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>假定f(n)和g(n)渐进为正</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>传递性</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>f(n) = Θ(g(n)) 且 g(n) = Θ(h(n)) 则 f(n) = Θ(h(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n) = Ο(g(n)) 且 g(n) = Ο(h(n)) 则 f(n) = Ο(h(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n) = Ω(g(n)) 且 g(n) = Ω(h(n)) 则 f(n) = Ω(h(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n) = o(g(n)) 且 g(n) = o(h(n)) 则 f(n) = o(h(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n) = ω(g(n)) 且 g(n) = ω(h(n)) 则 f(n) = ω(h(n))</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>自反性</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>f(n) = Θ(f(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n) = Ο(f(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n) = Ω(f(n))</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>对称性</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>f(n) = Θ(g(n)) 当且仅当 g(n) = Θ(f(n))</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>转置对称性</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>f(n) = Ο(g(n)) 当且仅当 g(n) = Ω(f(n))</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>f(n) = o(g(n)) 当且仅当 g(n) = ω(f(n))</p>
<!-- /wp:paragraph -->

<!-- wp:table {"className":"is-style-stripes"} -->
<figure class="wp-block-table is-style-stripes"><table><thead><tr><th class="has-text-align-center" data-align="center">符号</th><th class="has-text-align-center" data-align="center">含义</th><th class="has-text-align-center" data-align="center">类比</th></tr></thead><tbody><tr><td class="has-text-align-center" data-align="center">Θ</td><td class="has-text-align-center" data-align="center">渐进紧确界</td><td class="has-text-align-center" data-align="center">相当于“=”</td></tr><tr><td class="has-text-align-center" data-align="center">O</td><td class="has-text-align-center" data-align="center">渐进上界</td><td class="has-text-align-center" data-align="center">相当于“≤”</td></tr><tr><td class="has-text-align-center" data-align="center">Ω</td><td class="has-text-align-center" data-align="center">渐进下界</td><td class="has-text-align-center" data-align="center">相当于”≥”</td></tr><tr><td class="has-text-align-center" data-align="center">o</td><td class="has-text-align-center" data-align="center">渐进非紧的上界</td><td class="has-text-align-center" data-align="center">相当于”&lt;”</td></tr><tr><td class="has-text-align-center" data-align="center">ω</td><td class="has-text-align-center" data-align="center">渐进非紧的下界</td><td class="has-text-align-center" data-align="center">相当于”>”</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:paragraph -->
<p>若f(n) = o(g(n))则称f(n)<strong>渐进小于</strong>g(n)，若f(n) = ω(g(n))则称f(n)<strong>渐进大于</strong>g(n)</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>三分性</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>虽然所有实数都可以比较，但是不是所有函数都可以渐进比较的。两个函数f(n)和g(n)可能<code>f(n) = Ο(g(n))</code>和<code>f(n) = Ω(g(n))</code>都不成立</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如：n和n<sup>1+sin(n)</sup>，因为1+sin(n)在0到2之间摆动</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[渐近记号用来描述算法渐近运行时间的记号根据定义域为自然数集的函数定义]]></excerpt:encoded>
		<wp:post_id>1058</wp:post_id>
		<wp:post_date><![CDATA[2022-12-26 17:08:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-12-26 09:08:31]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2022-12-26 17:08:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2022-12-26 09:08:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%b5%85%e8%af%bb%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba-3-1%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e6%b8%90%e8%bf%91%e8%ae%b0%e5%8f%b7"><![CDATA[渐近记号]]></category>
		<category domain="category" nicename="%e7%ae%97%e6%b3%95"><![CDATA[算法]]></category>
		<category domain="post_tag" nicename="%e7%ae%97%e6%b3%95%e5%af%bc%e8%ae%ba"><![CDATA[算法导论]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Traffmonetizer使用教程]]></title>
		<link>https://blog.zhuanjie.ltd/2023/02/01/traffmonetizer%e4%bd%bf%e7%94%a8%e6%95%99%e7%a8%8b/</link>
		<pubDate>Wed, 01 Feb 2023 07:14:47 +0000</pubDate>
		<dc:creator><![CDATA[Randall]]></dc:creator>
		<guid isPermaLink="false">https://blog.zhuanjie.ltd/?p=1085</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:luckywp/tableofcontents /-->

<!-- wp:paragraph -->
<p>直达一键运行脚本→<a href="https://blog.zhuanjie.ltd/2023/02/01/traffmonetizer%e4%bd%bf%e7%94%a8%e6%95%99%e7%a8%8b/#2.-%E4%BD%BF%E7%94%A8%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84%20Windows%2C%20Mac%2C%20Android%2C%20Docker%20%E8%BF%90%E8%A1%8C">传送门</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>简介</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Traffmonetizer是一个来自欧洲的流量挂机平台，类似Peer2profit，满10刀可提现(Paypal、BTC、Payoneer)</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>官网</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Traffmonetizer官网：<a href="https://app.traffmonetizer.com/" target="_blank" rel="noreferrer noopener">https://app.traffmonetizer.com/</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Docker：<a href="https://hub.docker.com/r/traffmonetizer/cli" target="_blank" rel="noreferrer noopener">https://hub.docker.com/r/traffmonetizer/cli</a></p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>使用教程</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>1. 获取application token</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在 <a href="https://app.traffmonetizer.com/dashboard" target="_blank" rel="noreferrer noopener">https://app.traffmonetizer.com/dashboard</a> 左上角复制 application token</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>2. 使用官方提供的 Windows, Mac, Android, Docker 运行</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>这里我提供<strong>一键运行脚本</strong>如下（<strong>注意：将<code>xxxxxxxxxx</code>替换为你的 <code>application token</code></strong>）</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>wget https://startpage.zhuanjie.ltd/download/randall-traffmonetizer.sh &amp;&amp; chmod +x ./randall-traffmonetizer.sh &amp;&amp; bash ./randall-traffmonetizer.sh xxxxxxxxxx</code></pre>
<!-- /wp:code -->

<!-- wp:heading -->
<h2>附-脚本文件</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>初学shell，脚本臃肿，仅适配Ubuntu和Centos</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>#!/bin/bash
#
# @Author : 转接
# @Date : 23/02/01
#
#/*传入参数 traffmonetizer 中的 application token, 
# *在 https://app.traffmonetizer.com/dashboard 中获取
# */

get_arch=`uname  -a`

if &#91;&#91; $get_arch =~ "x86_64" ]];then
    echo "ARM64机器"
    if &#91;&#91; $get_arch =~ "ubuntu" ]];then
        echo "ubuntu系统"
        sudo apt-get update
        sudo apt install docker.io -y
    elif &#91;&#91; $get_arch =~ "centos" ]];then
        echo "centos系统"
        yum -y update
        yum -y install docker
    else
        echo "未适配系统"
        exit 2
    fi
    echo "开始安装……请等待"
    if &#91;&#91; -n $(docker ps -q -f "name=^ra-tm$") ]];then
        echo "存在同名镜像，执行删除"
        sudo docker stop ra-tm
        sudo docker rm ra-tm
    fi
    sudo docker run -d --name ra-tm traffmonetizer/cli start accept --token $1

elif &#91;&#91; $get_arch =~ "aarch64" ]];then
    echo "ARM64机器"
    if &#91;&#91; $get_arch =~ "ubuntu" ]];then
        echo "ubuntu系统"
        sudo apt-get update
        sudo apt install docker.io -y
    elif &#91;&#91; $get_arch =~ "centos" ]];then
        echo "centos系统"
        yum -y update
        yum -y install docker
    else
        echo "未适配系统"
        exit 2
    fi
    echo "开始安装……请等待"
    if &#91;&#91; -n $(docker ps -q -f "name=^ra-tm$") ]];then
        echo "存在同名镜像，执行删除"
        sudo docker stop ra-tm
        sudo docker rm ra-tm
    fi
    sudo docker run -d --name ra-tm traffmonetizer/cli:arm64v8 start accept --token $1
    
elif &#91;&#91; $get_arch =~ "mips64" ]];then
    echo "this is mips64"
else
    echo "未知架构!!"
    exit 1
fi
exit 0
</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1085</wp:post_id>
		<wp:post_date><![CDATA[2023-02-01 15:14:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2023-02-01 07:14:47]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2023-02-01 15:20:15]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2023-02-01 07:20:15]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[traffmonetizer%e4%bd%bf%e7%94%a8%e6%95%99%e7%a8%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="shell"><![CDATA[shell]]></category>
		<category domain="category" nicename="%e6%95%99%e7%a8%8b"><![CDATA[教程]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[views]]></wp:meta_key>
		<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	